#function description: 
#procedure name: P_DM_driverregonline
#creator:MARS
#created:
#!/bin/bash
#today date
V_DATE=$1

if [ -z ${V_DATE} ];then
        V_DATE=`date +%Y-%m-%d`
fi
#yesterday data partition
V_PARYEAR=`date --date="$V_DATE-1 day" +%Y`
V_PARMONTH=`date --date="$V_DATE-1 day" +%m`
V_PARDAY=`date --date="$V_DATE-1 day" +%d`
V_PARYESTERDAY=`date --date="$V_DATE-1 day" +%Y%m%d`
#today,yesterday,7 day  ago,30 days ago,2 days ago  date
V_TODAY=`date -d $V_DATE "+%Y-%m-%d"`
V_YESTERDAY=`date --date="$V_DATE-1 day" +%Y-%m-%d`
V_7DAYS=`date --date="$V_DATE-7 day" +%Y-%m-%d`
V_WEEK=`date --date="$V_DATE-7 day" +%Y-%m-%d`
V_THREEWEEKS=`date --date="$V_DATE-21 day" +%Y-%m-%d`
V_THREEMONTHS=`date --date="$V_DATE-90 day" +%Y-%m-%d`
V_SIXMONTHS=`date --date="$V_DATE-180 day" +%Y-%m-%d`
V_15DAYS=`date --date="$V_DATE-15 day" +%Y-%m-%d`
V_30DAYS=`date --date="$V_DATE-30 day" +%Y-%m-%d`
V_TWODAYS=`date --date="$V_DATE-2 day" +%Y-%m-%d`
#30 days ago, 2 days ago data partition 
V_PAR7DAYS=`date --date="$V_DATE-7 day" +%Y%m%d`
V_PAR15DAYS=`date --date="$V_DATE-15 day" +%Y%m%d`
V_PAR30DAYS=`date --date="$V_DATE-30 day" +%Y%m%d`
V_PAR2DAYS=`date --date="$V_DATE-2 day" +%Y%m%d`
# (STATID                  INT,
# STATDATE          STRING,
# area                       	                   INT         ,
# channel                    	                   INT         ,
# dayNatureRegOnlineCnt      	                   INT         ,
# weekNatureRegOnlineCnt     	                   INT         ,
# monthNatureRegOnlineCnt    	                   INT         ,
# dayNatureReg6HoursOnlineCnt	                   INT         ,
# dayNatureRegNotOnlineCnt   	                   INT         ,
# weekNatureRegOnlineRate    	                   FLOAT       ,
# monthNatureRegOnlineRate   	                   FLOAT
# )
/home/xiaoju/hive-0.10.0/bin/hive -e"use app;
INSERT OVERWRITE TABLE DRIVERREGONLINE PARTITION(YEAR='$V_PARYEAR',MONTH='$V_PARMONTH',DAY='$V_PARDAY')
SELECT 0,
	   '$V_YESTERDAY',
       M.AREA,
	   M.CHANNEL,
	   (CASE WHEN A.DAYNATUREREGONLINECNT IS NULL THEN 0 ELSE CAST(A.DAYNATUREREGONLINECNT AS INT) END),
	   (CASE WHEN B.WEEKNATUREREGONLINECNT IS NULL THEN 0 ELSE CAST(B.WEEKNATUREREGONLINECNT AS INT) END),
	   (CASE WHEN C.MONTHNATUREREGONLINECNT IS NULL THEN 0 ELSE CAST(C.MONTHNATUREREGONLINECNT AS INT) END),
	   (CASE WHEN A.DAYNATUREREG6HOURSONLINECNT IS NULL THEN 0 ELSE CAST(A.DAYNATUREREG6HOURSONLINECNT AS INT) END),
	   (CASE WHEN A.DAYNATUREREGNOTONLINECNT IS NULL THEN 0 ELSE CAST(A.DAYNATUREREGNOTONLINECNT AS INT) END),
	   (CASE WHEN B.WEEKNATUREREGONLINECNT IS NOT NULL AND D.WEEKNATUREREGCNT IS NOT NULL AND D.WEEKNATUREREGCNT<>0
	   THEN ROUND(B.WEEKNATUREREGONLINECNT/CAST(D.WEEKNATUREREGCNT AS FLOAT),3) ELSE 0.000 END) WEEKNATUREREGONLINERATE,
	   (CASE WHEN C.MONTHNATUREREGONLINECNT IS NOT NULL AND E.MONTHNATUREREGCNT IS NOT NULL AND E.MONTHNATUREREGCNT<>0
	   THEN ROUND(C.MONTHNATUREREGONLINECNT/CAST(E.MONTHNATUREREGCNT AS FLOAT),3) ELSE 0.000 END) MONTHNATUREREGONLINERATE
  FROM PDW.DRIVER_AREA_CHANNEL M
LEFT OUTER JOIN 
(
SELECT (CASE WHEN AREA IS NULL THEN 10000 ELSE CAST(AREA AS INT) END) AREA,
       (CASE WHEN CHANNEL IS NULL THEN 0 ELSE CHANNEL END) CHANNEL,
	   DAYNATUREREGONLINECNT,
	   DAYNATUREREG6HOURSONLINECNT,
	   DAYNATUREREGNOTONLINECNT
 FROM  (SELECT AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
				END)  CHANNEL,
			  SUM(CASE WHEN MIN > 0 THEN 1
				   ELSE 0
				   END) DAYNATUREREGONLINECNT,
			  SUM(CASE WHEN MIN >= 6 * 60 THEN 1
				   ELSE 0
				   END) DAYNATUREREG6HOURSONLINECNT,
			  SUM(CASE WHEN MIN =0 THEN 1
				   ELSE 0
				   END) DAYNATUREREGNOTONLINECNT 
		 FROM (SELECT DID, 
					  AREA, 
					  CHANNEL, 
					  SUM(ONLINEMINS) MIN 
				 FROM PDW.DRIVERZIPPER 
				WHERE YEAR='$V_PARYEAR'
				  AND MONTH='$V_PARMONTH'
				  AND DAY='$V_PARDAY'
				  AND BEGINDATE >= '$V_YESTERDAY' 
				  AND BEGINDATE < '$V_TODAY' 
				  AND REGDATE >= '$V_YESTERDAY' 
				  AND REGDATE < '$V_TODAY' 
				  AND SOURCE = 0 
				GROUP BY DID,AREA, 
					  CHANNEL)  T
		GROUP BY AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
				END)
		GROUPING SETS (AREA,
					   (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
							ELSE 2
						END),
						(AREA,(CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
								ELSE 2
							END)),
						())
		) D
) A
ON ( M.AREA= A.AREA AND M.CHANNEL = A.CHANNEL)
LEFT OUTER JOIN 
(
SELECT (CASE WHEN AREA IS NULL THEN 10000 ELSE CAST(AREA AS INT) END) AREA,
       (CASE WHEN CHANNEL IS NULL THEN 0 ELSE CHANNEL END) CHANNEL,
	   WEEKNATUREREGONLINECNT
  FROM (SELECT AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
				END)  CHANNEL,
			   COUNT(*) WEEKNATUREREGONLINECNT 
		  FROM (SELECT DID, 
					   AREA, 
					   CHANNEL, 
					   SUM(ONLINEMINS)  MIN 
				  FROM PDW.DRIVERZIPPER 
				 WHERE CONCAT(YEAR,MONTH,DAY) >= '$V_PAR7DAYS'
				   AND CONCAT(YEAR,MONTH,DAY) <= '$V_PARYESTERDAY'
				   AND BEGINDATE >= '$V_WEEK' 
				   AND BEGINDATE < '$V_TODAY'
				   AND REGDATE >= '$V_WEEK' 
				   AND REGDATE < '$V_TODAY'
				   AND SOURCE = 0 
				GROUP BY DID,AREA, 
					   CHANNEL) T
		WHERE MIN > 0
		GROUP BY AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
				END)
		GROUPING SETS (AREA,
		               (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
							ELSE 2
						END),
					   (AREA,(CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
									ELSE 2
								END)),
						())
		) D
) B
ON (M.AREA=B.AREA AND M.CHANNEL=B.CHANNEL)
LEFT OUTER JOIN
(
SELECT (CASE WHEN AREA IS NULL THEN 10000 ELSE CAST(AREA AS INT) END) AREA,
       (CASE WHEN CHANNEL IS NULL THEN 0 ELSE CHANNEL END) CHANNEL,
        MONTHNATUREREGONLINECNT
  FROM (SELECT AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
				END)  CHANNEL,
			   COUNT(*) MONTHNATUREREGONLINECNT
		 FROM (SELECT DID, 
					  AREA, 
					  CHANNEL, 
					  SUM(ONLINEMINS) AS MIN 
				  FROM PDW.DRIVERZIPPER 
				 WHERE CONCAT(YEAR,MONTH,DAY) >= '$V_PAR30DAYS'
				   AND CONCAT(YEAR,MONTH,DAY) <= '$V_PARYESTERDAY'
				   AND BEGINDATE >= '$V_30DAYS' 
				   AND BEGINDATE < '$V_TODAY' 
				   AND REGDATE >= '$V_30DAYS' 
				   AND REGDATE < '$V_TODAY'
				   AND SOURCE = 0 
				  GROUP BY DID,AREA, 
					   CHANNEL)  T
		 WHERE MIN > 0
		GROUP BY AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
				END)
		GROUPING SETS (AREA,
		               (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
							ELSE 2
						END),
					   (AREA,(CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
									ELSE 2
								END)),
						())
		) D
) C
ON (M.AREA=C.AREA AND M.CHANNEL=C.CHANNEL)
LEFT OUTER JOIN
(
SELECT (CASE WHEN AREA IS NULL THEN 10000 ELSE CAST(AREA AS INT) END) AREA,
       (CASE WHEN CHANNEL IS NULL THEN 0 ELSE CHANNEL END) CHANNEL,
        WEEKNATUREREGCNT
  FROM (SELECT AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
					END) AS CHANNEL,
			   COUNT(*) WEEKNATUREREGCNT
		 FROM PDW.DRIVER 
		WHERE YEAR='$V_PARYEAR'
		  AND MONTH='$V_PARMONTH'
		  AND DAY='$V_PARDAY'
		  AND SOURCE = 0
		  AND REGDATE >= '$V_WEEK' AND REGDATE < '$V_TODAY'
		GROUP BY AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
					END)
		GROUPING SETS (AREA,
		               (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
							ELSE 2
						END),
					   (AREA,(CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
									ELSE 2
								END)),
						())
		) W
) D
ON (M.AREA=D.AREA AND M.CHANNEL=D.CHANNEL)
LEFT OUTER JOIN
(
SELECT (CASE WHEN AREA IS NULL THEN 10000 ELSE CAST(AREA AS INT) END) AREA,
       (CASE WHEN CHANNEL IS NULL THEN 0 ELSE CHANNEL END) CHANNEL,
	    MONTHNATUREREGCNT
  FROM (SELECT AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
					END) AS CHANNEL,
			   COUNT(*) MONTHNATUREREGCNT
		 FROM PDW.DRIVER 
		WHERE YEAR='$V_PARYEAR'
		  AND MONTH='$V_PARMONTH'
		  AND DAY='$V_PARDAY'
		  AND SOURCE = 0
		  AND REGDATE >= '$V_30DAYS' AND REGDATE < '$V_TODAY'
		GROUP BY AREA, 
			  (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
					ELSE 2
					END)
		GROUPING SETS (AREA,
		               (CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
							ELSE 2
						END),
					   (AREA,(CASE WHEN CHANNEL >= 202 AND CHANNEL <= 204 THEN 1 
									ELSE 2
								END)),
						())
		) W
) E
ON 
(M.AREA=E.AREA AND M.CHANNEL=E.CHANNEL)
;"
/home/xiaoju/hadoop-1.0.4/bin/hadoop fs -touchz /user/xiaoju/data/bi/app/driverregonline/$V_PARYEAR/$V_PARMONTH/$V_PARDAY/_SUCCESS
