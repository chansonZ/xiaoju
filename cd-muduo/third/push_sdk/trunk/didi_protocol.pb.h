// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: didi_protocol.proto

#ifndef PROTOBUF_didi_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_didi_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace DidiPush {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_didi_5fprotocol_2eproto();
void protobuf_AssignDesc_didi_5fprotocol_2eproto();
void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

class UserAgent;
class Header;
class RspMsg;
class BinaryMsg;
class PushMsg;
class ConnSvrConnectReq;
class ConnSvrConnectRsp;
class ConnSvrDisconnectReq;
class ConnSvrHeartbeatReq;
class ConnSvrGetOnlineReq;
class ConnSvrGetOnlineRsp;
class ConnSvrGetOnlineCountReq;
class ConnSvrGetOnlineCountRsp;
class ConnSvrGetIfOnlineReq;
class ConnSvrGetIfOnlineRsp;
class ConnSvrKickNoRspReq;
class Address;
class ConnMasterKickReq;
class ConnMasterKickRsp;
class ConnMasterGetIfOnlineReq;
class ConnMasterGetIfOnlineRsp;
class ConnMasterGetRouteReq;
class ConnMasterGetRouteRsp;
class ConnMasterDelRouteReq;
class ConnMasterGetOnlineReq;
class ConnMasterGetOnlineRsp;
class ConnMasterGetOnlineCountReq;
class ConnMasterGetOnlineCountRsp;
class AuthSvrAddUserReq;
class AuthSvrDelUserReq;
class AuthSvrLoginReq;
class AuthSvrLoginRsp;
class AuthSvrQueryUserReq;
class AuthSvrQueryUserRsp;
class AuthSvrSignReq;
class AuthSvrSignRsp;
class Coordinate;
class CdntSvrUpReq;
class PeerCoordinateInfo;
class PeerCoordinateRelation;
class CdntSvrSetRelationReq;
class CdntSvrSetRelationRsp;
class CdntSvrAddRelationReq;
class CdntSvrAddRelationRsp;
class CdntSvrDelRelationReq;
class CdntSvrDelRelationRsp;
class CdntSvrGetRelationReq;
class CdntSvrGetRelationRsp;
class CollectSvrHeartbeatReq;
class CollectSvrHeartbeatRsp;
class CollectSvrDelayReq;
class PushSvrReq;
class PushSvrMultiReq;
class PushSvrMultiReq_UserId;
class PushSvrMultiRsp;
class PushSvrRetryReq;
class Param;
class DispatchSvrReq;
class DispatchSvrRsp;
class ConnSvrConnectChallenge;
class AppHeartbeatReq;
class CdntSvrDownReq;
class PushStatReq;
class PushStat;
class PushStatRsp;
class StatLogReq;

enum Constants {
  kMagic = 22612,
  kNodeTypeMask = 15,
  kNodeTypeShiftBits = 8
};
bool Constants_IsValid(int value);
const Constants Constants_MIN = kNodeTypeShiftBits;
const Constants Constants_MAX = kMagic;
const int Constants_ARRAYSIZE = Constants_MAX + 1;

const ::google::protobuf::EnumDescriptor* Constants_descriptor();
inline const ::std::string& Constants_Name(Constants value) {
  return ::google::protobuf::internal::NameOfEnum(
    Constants_descriptor(), value);
}
inline bool Constants_Parse(
    const ::std::string& name, Constants* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Constants>(
    Constants_descriptor(), name, value);
}
enum NodeType {
  kNodeTypeMin = 0,
  kNodeTypeApp = 1,
  kNodeTypeConnSvr = 2,
  kNodeTypeConnMasterSvr = 3,
  kNodeTypeCdntSvr = 4,
  kNodeTypeAuthSvr = 5,
  kNodeTypePushSvr = 6,
  kNodeTypeCollectSvr = 7,
  kNodeTypeDispatchSvr = 8,
  kNodeTypeMessageSvr = 9,
  kNodeTypeSessionSvr = 10,
  kNodeTypeFileSvr = 11,
  kNodeTypeRepushSvr = 12,
  kNodeTypeDbSvr = 13,
  kNodeTypeMax = 15
};
bool NodeType_IsValid(int value);
const NodeType NodeType_MIN = kNodeTypeMin;
const NodeType NodeType_MAX = kNodeTypeMax;
const int NodeType_ARRAYSIZE = NodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NodeType_descriptor();
inline const ::std::string& NodeType_Name(NodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NodeType_descriptor(), value);
}
inline bool NodeType_Parse(
    const ::std::string& name, NodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeType>(
    NodeType_descriptor(), name, value);
}
enum MsgType {
  kMsgTypeMin = 0,
  kMsgTypeAppTypeMin = 256,
  kMsgTypeConnSvrConnectChallenge = 257,
  kMsgTypeAppHeartbeatReq = 259,
  kMsgTypeAppHeartbeatRsp = 260,
  kMsgTypeCdntSvrDownReq = 261,
  kMsgTypeCdntSvrDownRsp = 262,
  kMsgTypeAppPushMessageReq = 263,
  kMsgTypeAppPushMessageRsp = 264,
  kMsgTypeAppTypeMax = 511,
  kMsgTypeConnSvrTypeMin = 512,
  kMsgTypeConnSvrConnectReq = 513,
  kMsgTypeConnSvrConnectRsp = 514,
  kMsgTypeConnSvrDisconnectReq = 515,
  kMsgTypeConnSvrDisconnectRsp = 516,
  kMsgTypeConnSvrGetOnlineReq = 517,
  kMsgTypeConnSvrGetOnlineRsp = 518,
  kMsgTypeConnSvrGetOnlineCountReq = 519,
  kMsgTypeConnSvrGetOnlineCountRsp = 520,
  kMsgTypeConnSvrHeartbeatReq = 521,
  kMsgTypeConnSvrHeartbeatRsp = 522,
  kMsgTypeConnSvrGetIfOnlineReq = 523,
  kMsgTypeConnSvrGetIfOnlineRsp = 524,
  kMsgTypeConnSvrKickNoRspReq = 525,
  kMsgTypeConnSvrTypeMax = 767,
  kMsgTypeConnMasterTypeMin = 768,
  kMsgTypeConnMasterGetRouteReq = 769,
  kMsgTypeConnMasterGetRouteRsp = 770,
  kMsgTypeConnMasterSetRouteReq = 771,
  kMsgTypeConnMasterSetRouteRsp = 772,
  kMsgTypeConnMasterDelRouteReq = 773,
  kMsgTypeConnMasterDelRouteRsp = 774,
  kMsgTypeConnMasterGetOnlineReq = 775,
  kMsgTypeConnMasterGetOnlineRsp = 776,
  kMsgTypeConnMasterGetOnlineCountReq = 777,
  kMsgTypeConnMasterGetOnlineCountRsp = 778,
  kMsgTypeConnMasterGetIfOnlineReq = 779,
  kMsgTypeConnMasterGetIfOnlineRsp = 780,
  kMsgTypeConnMasterKickReq = 781,
  kMsgTypeConnMasterKickRsp = 782,
  kMsgTypeConnMasterTypeMax = 1023,
  kMsgTypeCdntSvrTypeMin = 1024,
  kMsgTypeCdntSvrUpReq = 1025,
  kMsgTypeCdntSvrUpRsp = 1026,
  kMsgTypeCdntSvrSetRelationReq = 1027,
  kMsgTypeCdntSvrSetRelationRsp = 1028,
  kMsgTypeCdntSvrDelRelationReq = 1029,
  kMsgTypeCdntSvrDelRelationRsp = 1030,
  kMsgTypeCdntSvrGetRelationReq = 1031,
  kMsgTypeCdntSvrGetRelationRsp = 1032,
  kMsgTypeCdntSvrAddRelationReq = 1033,
  kMsgTypeCdntSvrAddRelationRsp = 1034,
  kMsgTypeCdntSvrTypeMax = 1279,
  kMsgTypeAuthSvrTypeMin = 1280,
  kMsgTypeAuthSvrAddUserReq = 1281,
  kMsgTypeAuthSvrAddUserRsp = 1282,
  kMsgTypeAuthSvrDelUserReq = 1283,
  kMsgTypeAuthSvrDelUserRsp = 1284,
  kMsgTypeAuthSvrLoginReq = 1285,
  kMsgTypeAuthSvrLoginRsp = 1286,
  kMsgTypeAuthSvrQueryUserReq = 1287,
  kMsgTypeAuthSvrQueryUserRsp = 1288,
  kMsgTypeAuthSvrSignReq = 1289,
  kMsgTypeAuthSvrSginRsp = 1290,
  kMsgTypeAuthSvrTypeMax = 1535,
  kMsgTypePushSvrTypeMin = 1536,
  kMsgTypePushSvrReq = 1537,
  kMsgTypePushSvrRsp = 1538,
  kMsgTypePushSvrMultiReq = 1539,
  kMsgTypePushSvrMultiRsp = 1540,
  kMsgTypePushSvrAppRspReq = 1541,
  kMsgTypePushSvrRetryReq = 1543,
  kMsgTypePushSvrRetryRsp = 1544,
  kMsgTypePushStatReq = 1545,
  kMsgTypePushStatRsp = 1552,
  kMsgTypePushSvrTypeMax = 1791,
  kMsgTypeCollectSvrTypeMin = 1792,
  kMsgTypeCollectSvrNoRspReq = 1793,
  kMsgTypeCollectSvrHeartbeatReq = 1795,
  kMsgTypeCollectSvrHeartbeatRsp = 1796,
  kMsgTypeCollectSvrDelayReq = 2046,
  kMsgTypeCollectSvrTypeMax = 2047,
  kMsgTypeDispatchSvrTypeMin = 2048,
  kMsgTypeDispatchSvrNoRspReq = 2049,
  kMsgTypeDispatchSvrReq = 2051,
  kMsgTypeDispatchSvrRsp = 2052,
  kMsgTypeDispatchSvrTypeMax = 2303,
  kMsgTypeMessageSvrTypeMin = 2304,
  kMsgTypeMessageSvrGetSessionsReq = 2305,
  kMsgTypeMessageSvrGetSessionsRsp = 2306,
  kMsgTypeMessageSvrGetMessagesReq = 2307,
  kMsgTypeMessageSvrGetMessagesRsp = 2308,
  kMsgTypeMessageSvrSendTextReq = 2309,
  kMsgTypeMessageSvrSendTextRsp = 2310,
  kMsgTypeMessageSvrNewObjectReq = 2311,
  kMsgTypeMessageSvrNewObjectRsp = 2312,
  kMsgTypeMessageSvrSendObjectReq = 2313,
  kMsgTypeMessageSvrSendObjectRsp = 2314,
  kMsgTypeMessageSvrNotification = 2315,
  kMsgTypeMessageSvrTypeMax = 2559,
  kMsgTypeSessionSvrTypeMin = 2560,
  kMsgTypeSessionSvrCreateReq = 2561,
  kMsgTypeSessionSvrCreateRsp = 2562,
  kMsgTypeSessionSvrFreezeReq = 2563,
  kMsgTypeSessionSvrFreezeRsp = 2564,
  kMsgTypeSessionSvrGetSessionsReq = 2565,
  kMsgTypeSessionSvrGetSessionsRsp = 2566,
  kMsgTypeSessionSvrNewMessageReq = 2567,
  kMsgTypeSessionSvrNewMessageRsp = 2568,
  kMsgTypeSessionSvrGetMessageReq = 2569,
  kMsgTypeSessionSvrGetMessageRsp = 2570,
  kMsgTypeSessionSvrNewObjectReq = 2571,
  kMsgTypeSessionSvrNewObjectRsp = 2572,
  kMsgTypeSessionSvrSendObjectReq = 2573,
  kMsgTypeSessionSvrSendObjectRsp = 2574,
  kMsgTypeSessionSvrCheckObjectReq = 2575,
  kMsgTypeSessionSvrCheckObjectRsp = 2576,
  kMsgTypeSessionSvrTypeMax = 2815,
  kMsgTypeFileSvrTypeMin = 2816,
  kMsgTypeFileSvrUploadReq = 2817,
  kMsgTypeFileSvrUploadRsp = 2818,
  kMsgTypeFileSvrDownloadReq = 2819,
  kMsgTypeFileSvrDownloadRsp = 2820,
  kMsgTypeFileSvrTypeMax = 3071,
  kMsgTypeRepushSvrTypeMin = 3072,
  kMsgTypeRepushSvrStageMsgReq = 3073,
  kMsgTypeRepushSvrStageMsgRsp = 3074,
  kMsgTypeRepushSvrTypeMax = 3327,
  kMsgTypeDbSvrTypeMin = 3328,
  kMsgTypeDbSvrSqlQueryReq = 3329,
  kMsgTypeDbSvrSqlQueryRsp = 3330,
  kMsgTypeDbSvrSqlExecReq = 3331,
  kMsgTypeDbSvrSqlExecRsp = 3332,
  kMsgTypeDbSvrSelectDbReq = 3333,
  kMsgTypeDbSvrSelectDbRsp = 3334,
  kMsgTypeDbSvrInvalidReqRsp = 3336,
  kMsgTypeDbSvrTypeMax = 3583
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = kMsgTypeMin;
const MsgType MsgType_MAX = kMsgTypeDbSvrTypeMax;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
enum OldRole {
  OldUnknown = 0,
  OldDriver = 1,
  OldPassenger = 2,
  OldPilot = 3
};
bool OldRole_IsValid(int value);
const OldRole OldRole_MIN = OldUnknown;
const OldRole OldRole_MAX = OldPilot;
const int OldRole_ARRAYSIZE = OldRole_MAX + 1;

const ::google::protobuf::EnumDescriptor* OldRole_descriptor();
inline const ::std::string& OldRole_Name(OldRole value) {
  return ::google::protobuf::internal::NameOfEnum(
    OldRole_descriptor(), value);
}
inline bool OldRole_Parse(
    const ::std::string& name, OldRole* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OldRole>(
    OldRole_descriptor(), name, value);
}
enum Role {
  Driver = 0,
  Passenger = 1,
  Pilot = 2
};
bool Role_IsValid(int value);
const Role Role_MIN = Driver;
const Role Role_MAX = Pilot;
const int Role_ARRAYSIZE = Role_MAX + 1;

const ::google::protobuf::EnumDescriptor* Role_descriptor();
inline const ::std::string& Role_Name(Role value) {
  return ::google::protobuf::internal::NameOfEnum(
    Role_descriptor(), value);
}
inline bool Role_Parse(
    const ::std::string& name, Role* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Role>(
    Role_descriptor(), name, value);
}
enum Business {
  Taxi = 0,
  GulfStream = 1
};
bool Business_IsValid(int value);
const Business Business_MIN = Taxi;
const Business Business_MAX = GulfStream;
const int Business_ARRAYSIZE = Business_MAX + 1;

const ::google::protobuf::EnumDescriptor* Business_descriptor();
inline const ::std::string& Business_Name(Business value) {
  return ::google::protobuf::internal::NameOfEnum(
    Business_descriptor(), value);
}
inline bool Business_Parse(
    const ::std::string& name, Business* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Business>(
    Business_descriptor(), name, value);
}
enum RspCode {
  kRspCodeConnSvrMin = 1,
  kRspCodeConnSvrTimedOut = 2,
  kRspCodeConnSvrInternalError = 3,
  kRspCodeConnSvrMax = 99,
  kRspCodeCdntSvrMin = 201,
  kRspCodeCdntSvrNotExist = 202,
  kRspCodeCdntSvrAccessCkvError = 203,
  kRspCodeCdntSvrArgsError = 204,
  kRspCodeCdntSvrMax = 299,
  kRspCodeConnMasterMin = 401,
  kRspCodeConnMasterKeyNotExist = 402,
  kRspCodeConnMasterTimedOut = 403,
  kRspCodeConnMasterAccessCkvTimedOut = 404,
  kRspCodeConnMasterPbDecodeError = 405,
  kRspCodeConnMasterCkvDecodeFailed = 406,
  kRspCodeConnMasterCkvCasNewer = 407,
  kRspCodeConnMasterKeyExistWhenAdd = 408,
  kRspCodeConnMasterIfOnlineOutRange = 409,
  kRspCodeConnMasterMax = 499,
  kRspCodeAuthSvrMin = 601,
  kRspCodeAuthSvrKeyNotExist = 602,
  kRspCodeAuthSvrParamError = 603,
  kRspCodeAuthSvrDelTokenError = 604,
  kRspCodeAuthSvrAddTokenError = 605,
  kRspCodeAuthSvrLoginError = 606,
  kRspCodeAuthSvrGetUserIdError = 607,
  kRspCodeAuthSvrDecodeError = 608,
  kRspCodeAuthSvrHmacEncodeError = 609,
  kRspCodeAuthSvrBase64EncodeError = 610,
  kRspCodeAuthSvrMax = 699,
  kRspCodePushSvrMin = 1536,
  kRspCodePushSvrInternalError = 1537,
  kRspCodePushSvrMsgStaged = 1538,
  kRspCodePushSvrInvalidArgs = 1539,
  kRspCodePushSvrKeyNotExist = 1540,
  kRspCodePushSvrSmsMsgSend = 1541,
  kRspCodePushSvrMax = 1791,
  kRspCodeMessageSvrMin = 2304,
  kRspCodeMessageSvrTimeOut = 2305,
  kRspCodeMessageSvrInvalidArgs = 2306,
  kRspCodeMessageSvrCkvError = 2307,
  kRspCodeMessageSvrGetServerError = 2308,
  kRspCodeMessageSvrToPushError = 2309,
  kRspCodeMessageSvrToSessionError = 2310,
  kRspCodeMessageSvrSessionInvalidArgs = 2311,
  kRspCodeMessageSvrDecodeError = 2312,
  kRspCodeMessageSvrMax = 2559,
  kRspCodeSessionSvrMin = 2560,
  kRspCodeSessionSvrTryAgain = 2561,
  kRspCodeSessionSvrInvalidArguments = 2562,
  kRspCodeSessionSvrNoSuchSession = 2563,
  kRspCodeSessionSvrFrozen = 2564,
  kRspCodeSessionSvrForbidden = 2565,
  kRspCodeSessionSvrMax = 2815,
  kRspCodeFileSvrMin = 2816,
  kRspCodeFileSvrTimedOut = 2817,
  kRspCodeFileSvrStateError = 2818,
  kRspCodeFileSvrNoSessionServer = 2819,
  kRspCodeFileSvrVerificationError = 2820,
  kRspCodeFileSvrNoCkvServer = 2821,
  kRspCodeFileSvrCkvSetError = 2822,
  kRspCodeFileSvrKeyNotExist = 2823,
  kRspCodeFileSvrSessionNotReturnToken = 2824,
  kRspCodeFileSvrKeyHasExist = 2825,
  kRspCodeFileSvrCkvDecodeFailed = 2826,
  kRspCodeFileSvrMax = 3071,
  kRspCodeRepushSvrMin = 3072,
  kRspCodeRepushSvrInvalidArgs = 3073,
  kRspCodeRepushSvrKeyNotExist = 3074,
  kRspCodeRepushSvrMax = 3327
};
bool RspCode_IsValid(int value);
const RspCode RspCode_MIN = kRspCodeConnSvrMin;
const RspCode RspCode_MAX = kRspCodeRepushSvrMax;
const int RspCode_ARRAYSIZE = RspCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* RspCode_descriptor();
inline const ::std::string& RspCode_Name(RspCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    RspCode_descriptor(), value);
}
inline bool RspCode_Parse(
    const ::std::string& name, RspCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RspCode>(
    RspCode_descriptor(), name, value);
}
enum CoordinateType {
  BD_09 = 1,
  GCJ_02 = 2,
  WGS_84 = 4
};
bool CoordinateType_IsValid(int value);
const CoordinateType CoordinateType_MIN = BD_09;
const CoordinateType CoordinateType_MAX = WGS_84;
const int CoordinateType_ARRAYSIZE = CoordinateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoordinateType_descriptor();
inline const ::std::string& CoordinateType_Name(CoordinateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoordinateType_descriptor(), value);
}
inline bool CoordinateType_Parse(
    const ::std::string& name, CoordinateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoordinateType>(
    CoordinateType_descriptor(), name, value);
}
enum RelationType {
  kRelationTypeRealTime = 0,
  kRelationTypeReservation = 1
};
bool RelationType_IsValid(int value);
const RelationType RelationType_MIN = kRelationTypeRealTime;
const RelationType RelationType_MAX = kRelationTypeReservation;
const int RelationType_ARRAYSIZE = RelationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RelationType_descriptor();
inline const ::std::string& RelationType_Name(RelationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RelationType_descriptor(), value);
}
inline bool RelationType_Parse(
    const ::std::string& name, RelationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RelationType>(
    RelationType_descriptor(), name, value);
}
enum PushStrategy {
  kPushStrategyNoResponse = 1,
  kPushStrategyStatResponse = 2,
  kPushStrategyTryBest = 3,
  kPushStrategyMobileMsg = 4
};
bool PushStrategy_IsValid(int value);
const PushStrategy PushStrategy_MIN = kPushStrategyNoResponse;
const PushStrategy PushStrategy_MAX = kPushStrategyMobileMsg;
const int PushStrategy_ARRAYSIZE = PushStrategy_MAX + 1;

const ::google::protobuf::EnumDescriptor* PushStrategy_descriptor();
inline const ::std::string& PushStrategy_Name(PushStrategy value) {
  return ::google::protobuf::internal::NameOfEnum(
    PushStrategy_descriptor(), value);
}
inline bool PushStrategy_Parse(
    const ::std::string& name, PushStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PushStrategy>(
    PushStrategy_descriptor(), name, value);
}
enum StatEvent {
  kStatEventSend = 0,
  kStatEventRecv = 1,
  kStatEventView = 2
};
bool StatEvent_IsValid(int value);
const StatEvent StatEvent_MIN = kStatEventSend;
const StatEvent StatEvent_MAX = kStatEventView;
const int StatEvent_ARRAYSIZE = StatEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatEvent_descriptor();
inline const ::std::string& StatEvent_Name(StatEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatEvent_descriptor(), value);
}
inline bool StatEvent_Parse(
    const ::std::string& name, StatEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatEvent>(
    StatEvent_descriptor(), name, value);
}
// ===================================================================

class UserAgent : public ::google::protobuf::Message {
 public:
  UserAgent();
  virtual ~UserAgent();

  UserAgent(const UserAgent& from);

  inline UserAgent& operator=(const UserAgent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAgent& default_instance();

  void Swap(UserAgent* other);

  // implements Message ----------------------------------------------

  UserAgent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAgent& from);
  void MergeFrom(const UserAgent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string os_type = 1;
  inline bool has_os_type() const;
  inline void clear_os_type();
  static const int kOsTypeFieldNumber = 1;
  inline const ::std::string& os_type() const;
  inline void set_os_type(const ::std::string& value);
  inline void set_os_type(const char* value);
  inline void set_os_type(const char* value, size_t size);
  inline ::std::string* mutable_os_type();
  inline ::std::string* release_os_type();
  inline void set_allocated_os_type(::std::string* os_type);

  // optional string os_ver = 2;
  inline bool has_os_ver() const;
  inline void clear_os_ver();
  static const int kOsVerFieldNumber = 2;
  inline const ::std::string& os_ver() const;
  inline void set_os_ver(const ::std::string& value);
  inline void set_os_ver(const char* value);
  inline void set_os_ver(const char* value, size_t size);
  inline ::std::string* mutable_os_ver();
  inline ::std::string* release_os_ver();
  inline void set_allocated_os_ver(::std::string* os_ver);

  // optional string model = 3;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 3;
  inline const ::std::string& model() const;
  inline void set_model(const ::std::string& value);
  inline void set_model(const char* value);
  inline void set_model(const char* value, size_t size);
  inline ::std::string* mutable_model();
  inline ::std::string* release_model();
  inline void set_allocated_model(::std::string* model);

  // optional string client_ver = 4;
  inline bool has_client_ver() const;
  inline void clear_client_ver();
  static const int kClientVerFieldNumber = 4;
  inline const ::std::string& client_ver() const;
  inline void set_client_ver(const ::std::string& value);
  inline void set_client_ver(const char* value);
  inline void set_client_ver(const char* value, size_t size);
  inline ::std::string* mutable_client_ver();
  inline ::std::string* release_client_ver();
  inline void set_allocated_client_ver(::std::string* client_ver);

  // optional string network = 5;
  inline bool has_network() const;
  inline void clear_network();
  static const int kNetworkFieldNumber = 5;
  inline const ::std::string& network() const;
  inline void set_network(const ::std::string& value);
  inline void set_network(const char* value);
  inline void set_network(const char* value, size_t size);
  inline ::std::string* mutable_network();
  inline ::std::string* release_network();
  inline void set_allocated_network(::std::string* network);

  // optional string location = 6;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 6;
  inline const ::std::string& location() const;
  inline void set_location(const ::std::string& value);
  inline void set_location(const char* value);
  inline void set_location(const char* value, size_t size);
  inline ::std::string* mutable_location();
  inline ::std::string* release_location();
  inline void set_allocated_location(::std::string* location);

  // optional string carrier_operator = 7;
  inline bool has_carrier_operator() const;
  inline void clear_carrier_operator();
  static const int kCarrierOperatorFieldNumber = 7;
  inline const ::std::string& carrier_operator() const;
  inline void set_carrier_operator(const ::std::string& value);
  inline void set_carrier_operator(const char* value);
  inline void set_carrier_operator(const char* value, size_t size);
  inline ::std::string* mutable_carrier_operator();
  inline ::std::string* release_carrier_operator();
  inline void set_allocated_carrier_operator(::std::string* carrier_operator);

  // @@protoc_insertion_point(class_scope:DidiPush.UserAgent)
 private:
  inline void set_has_os_type();
  inline void clear_has_os_type();
  inline void set_has_os_ver();
  inline void clear_has_os_ver();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_client_ver();
  inline void clear_has_client_ver();
  inline void set_has_network();
  inline void clear_has_network();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_carrier_operator();
  inline void clear_has_carrier_operator();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* os_type_;
  ::std::string* os_ver_;
  ::std::string* model_;
  ::std::string* client_ver_;
  ::std::string* network_;
  ::std::string* location_;
  ::std::string* carrier_operator_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static UserAgent* default_instance_;
};
// -------------------------------------------------------------------

class Header : public ::google::protobuf::Message {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  void Swap(Header* other);

  // implements Message ----------------------------------------------

  Header* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.MsgType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::DidiPush::MsgType type() const;
  inline void set_type(::DidiPush::MsgType value);

  // optional uint64 msg_id = 2;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  inline ::google::protobuf::uint64 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint64 value);

  // optional uint64 auth_user_id = 3;
  inline bool has_auth_user_id() const;
  inline void clear_auth_user_id();
  static const int kAuthUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 auth_user_id() const;
  inline void set_auth_user_id(::google::protobuf::uint64 value);

  // optional bytes log_id = 4;
  inline bool has_log_id() const;
  inline void clear_log_id();
  static const int kLogIdFieldNumber = 4;
  inline const ::std::string& log_id() const;
  inline void set_log_id(const ::std::string& value);
  inline void set_log_id(const char* value);
  inline void set_log_id(const void* value, size_t size);
  inline ::std::string* mutable_log_id();
  inline ::std::string* release_log_id();
  inline void set_allocated_log_id(::std::string* log_id);

  // optional .DidiPush.UserAgent user_agent = 5;
  inline bool has_user_agent() const;
  inline void clear_user_agent();
  static const int kUserAgentFieldNumber = 5;
  inline const ::DidiPush::UserAgent& user_agent() const;
  inline ::DidiPush::UserAgent* mutable_user_agent();
  inline ::DidiPush::UserAgent* release_user_agent();
  inline void set_allocated_user_agent(::DidiPush::UserAgent* user_agent);

  // @@protoc_insertion_point(class_scope:DidiPush.Header)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_auth_user_id();
  inline void clear_has_auth_user_id();
  inline void set_has_log_id();
  inline void clear_has_log_id();
  inline void set_has_user_agent();
  inline void clear_has_user_agent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 msg_id_;
  ::google::protobuf::uint64 auth_user_id_;
  ::std::string* log_id_;
  ::DidiPush::UserAgent* user_agent_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Header* default_instance_;
};
// -------------------------------------------------------------------

class RspMsg : public ::google::protobuf::Message {
 public:
  RspMsg();
  virtual ~RspMsg();

  RspMsg(const RspMsg& from);

  inline RspMsg& operator=(const RspMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspMsg& default_instance();

  void Swap(RspMsg* other);

  // implements Message ----------------------------------------------

  RspMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspMsg& from);
  void MergeFrom(const RspMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rsp_code = 1;
  inline bool has_rsp_code() const;
  inline void clear_rsp_code();
  static const int kRspCodeFieldNumber = 1;
  inline ::google::protobuf::int32 rsp_code() const;
  inline void set_rsp_code(::google::protobuf::int32 value);

  // optional string rsp_msg = 2;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 2;
  inline const ::std::string& rsp_msg() const;
  inline void set_rsp_msg(const ::std::string& value);
  inline void set_rsp_msg(const char* value);
  inline void set_rsp_msg(const char* value, size_t size);
  inline ::std::string* mutable_rsp_msg();
  inline ::std::string* release_rsp_msg();
  inline void set_allocated_rsp_msg(::std::string* rsp_msg);

  // @@protoc_insertion_point(class_scope:DidiPush.RspMsg)
 private:
  inline void set_has_rsp_code();
  inline void clear_has_rsp_code();
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rsp_msg_;
  ::google::protobuf::int32 rsp_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RspMsg* default_instance_;
};
// -------------------------------------------------------------------

class BinaryMsg : public ::google::protobuf::Message {
 public:
  BinaryMsg();
  virtual ~BinaryMsg();

  BinaryMsg(const BinaryMsg& from);

  inline BinaryMsg& operator=(const BinaryMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BinaryMsg& default_instance();

  void Swap(BinaryMsg* other);

  // implements Message ----------------------------------------------

  BinaryMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BinaryMsg& from);
  void MergeFrom(const BinaryMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional bytes payload = 2;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const void* value, size_t size);
  inline ::std::string* mutable_payload();
  inline ::std::string* release_payload();
  inline void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:DidiPush.BinaryMsg)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_payload();
  inline void clear_has_payload();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* payload_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BinaryMsg* default_instance_;
};
// -------------------------------------------------------------------

class PushMsg : public ::google::protobuf::Message {
 public:
  PushMsg();
  virtual ~PushMsg();

  PushMsg(const PushMsg& from);

  inline PushMsg& operator=(const PushMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMsg& default_instance();

  void Swap(PushMsg* other);

  // implements Message ----------------------------------------------

  PushMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMsg& from);
  void MergeFrom(const PushMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional bytes payload = 2;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 2;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const void* value, size_t size);
  inline ::std::string* mutable_payload();
  inline ::std::string* release_payload();
  inline void set_allocated_payload(::std::string* payload);

  // optional uint64 task_id = 3;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 3;
  inline ::google::protobuf::uint64 task_id() const;
  inline void set_task_id(::google::protobuf::uint64 value);

  // optional bytes msg_id = 4;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 4;
  inline const ::std::string& msg_id() const;
  inline void set_msg_id(const ::std::string& value);
  inline void set_msg_id(const char* value);
  inline void set_msg_id(const void* value, size_t size);
  inline ::std::string* mutable_msg_id();
  inline ::std::string* release_msg_id();
  inline void set_allocated_msg_id(::std::string* msg_id);

  // optional bool need_rsp = 5;
  inline bool has_need_rsp() const;
  inline void clear_need_rsp();
  static const int kNeedRspFieldNumber = 5;
  inline bool need_rsp() const;
  inline void set_need_rsp(bool value);

  // @@protoc_insertion_point(class_scope:DidiPush.PushMsg)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_payload();
  inline void clear_has_payload();
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_need_rsp();
  inline void clear_has_need_rsp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* payload_;
  ::google::protobuf::uint64 task_id_;
  ::google::protobuf::uint32 type_;
  bool need_rsp_;
  ::std::string* msg_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PushMsg* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrConnectReq : public ::google::protobuf::Message {
 public:
  ConnSvrConnectReq();
  virtual ~ConnSvrConnectReq();

  ConnSvrConnectReq(const ConnSvrConnectReq& from);

  inline ConnSvrConnectReq& operator=(const ConnSvrConnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrConnectReq& default_instance();

  void Swap(ConnSvrConnectReq* other);

  // implements Message ----------------------------------------------

  ConnSvrConnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrConnectReq& from);
  void MergeFrom(const ConnSvrConnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline const ::std::string& phone_num() const;
  inline void set_phone_num(const ::std::string& value);
  inline void set_phone_num(const char* value);
  inline void set_phone_num(const char* value, size_t size);
  inline ::std::string* mutable_phone_num();
  inline ::std::string* release_phone_num();
  inline void set_allocated_phone_num(::std::string* phone_num);

  // optional .DidiPush.OldRole old_role = 2;
  inline bool has_old_role() const;
  inline void clear_old_role();
  static const int kOldRoleFieldNumber = 2;
  inline ::DidiPush::OldRole old_role() const;
  inline void set_old_role(::DidiPush::OldRole value);

  // required bytes secret_chap = 3;
  inline bool has_secret_chap() const;
  inline void clear_secret_chap();
  static const int kSecretChapFieldNumber = 3;
  inline const ::std::string& secret_chap() const;
  inline void set_secret_chap(const ::std::string& value);
  inline void set_secret_chap(const char* value);
  inline void set_secret_chap(const void* value, size_t size);
  inline ::std::string* mutable_secret_chap();
  inline ::std::string* release_secret_chap();
  inline void set_allocated_secret_chap(::std::string* secret_chap);

  // optional bytes user_agent = 4;
  inline bool has_user_agent() const;
  inline void clear_user_agent();
  static const int kUserAgentFieldNumber = 4;
  inline const ::std::string& user_agent() const;
  inline void set_user_agent(const ::std::string& value);
  inline void set_user_agent(const char* value);
  inline void set_user_agent(const void* value, size_t size);
  inline ::std::string* mutable_user_agent();
  inline ::std::string* release_user_agent();
  inline void set_allocated_user_agent(::std::string* user_agent);

  // optional int32 role = 5;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 5;
  inline ::google::protobuf::int32 role() const;
  inline void set_role(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrConnectReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_old_role();
  inline void clear_has_old_role();
  inline void set_has_secret_chap();
  inline void clear_has_secret_chap();
  inline void set_has_user_agent();
  inline void clear_has_user_agent();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* phone_num_;
  ::std::string* secret_chap_;
  int old_role_;
  ::google::protobuf::int32 role_;
  ::std::string* user_agent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrConnectReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrConnectRsp : public ::google::protobuf::Message {
 public:
  ConnSvrConnectRsp();
  virtual ~ConnSvrConnectRsp();

  ConnSvrConnectRsp(const ConnSvrConnectRsp& from);

  inline ConnSvrConnectRsp& operator=(const ConnSvrConnectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrConnectRsp& default_instance();

  void Swap(ConnSvrConnectRsp* other);

  // implements Message ----------------------------------------------

  ConnSvrConnectRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrConnectRsp& from);
  void MergeFrom(const ConnSvrConnectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrConnectRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrConnectRsp* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrDisconnectReq : public ::google::protobuf::Message {
 public:
  ConnSvrDisconnectReq();
  virtual ~ConnSvrDisconnectReq();

  ConnSvrDisconnectReq(const ConnSvrDisconnectReq& from);

  inline ConnSvrDisconnectReq& operator=(const ConnSvrDisconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrDisconnectReq& default_instance();

  void Swap(ConnSvrDisconnectReq* other);

  // implements Message ----------------------------------------------

  ConnSvrDisconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrDisconnectReq& from);
  void MergeFrom(const ConnSvrDisconnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrDisconnectReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrDisconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrHeartbeatReq : public ::google::protobuf::Message {
 public:
  ConnSvrHeartbeatReq();
  virtual ~ConnSvrHeartbeatReq();

  ConnSvrHeartbeatReq(const ConnSvrHeartbeatReq& from);

  inline ConnSvrHeartbeatReq& operator=(const ConnSvrHeartbeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrHeartbeatReq& default_instance();

  void Swap(ConnSvrHeartbeatReq* other);

  // implements Message ----------------------------------------------

  ConnSvrHeartbeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrHeartbeatReq& from);
  void MergeFrom(const ConnSvrHeartbeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrHeartbeatReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrHeartbeatReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrGetOnlineReq : public ::google::protobuf::Message {
 public:
  ConnSvrGetOnlineReq();
  virtual ~ConnSvrGetOnlineReq();

  ConnSvrGetOnlineReq(const ConnSvrGetOnlineReq& from);

  inline ConnSvrGetOnlineReq& operator=(const ConnSvrGetOnlineReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrGetOnlineReq& default_instance();

  void Swap(ConnSvrGetOnlineReq* other);

  // implements Message ----------------------------------------------

  ConnSvrGetOnlineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrGetOnlineReq& from);
  void MergeFrom(const ConnSvrGetOnlineReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrGetOnlineReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrGetOnlineReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrGetOnlineRsp : public ::google::protobuf::Message {
 public:
  ConnSvrGetOnlineRsp();
  virtual ~ConnSvrGetOnlineRsp();

  ConnSvrGetOnlineRsp(const ConnSvrGetOnlineRsp& from);

  inline ConnSvrGetOnlineRsp& operator=(const ConnSvrGetOnlineRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrGetOnlineRsp& default_instance();

  void Swap(ConnSvrGetOnlineRsp* other);

  // implements Message ----------------------------------------------

  ConnSvrGetOnlineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrGetOnlineRsp& from);
  void MergeFrom(const ConnSvrGetOnlineRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // repeated uint64 user_id = 2;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrGetOnlineRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrGetOnlineRsp* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrGetOnlineCountReq : public ::google::protobuf::Message {
 public:
  ConnSvrGetOnlineCountReq();
  virtual ~ConnSvrGetOnlineCountReq();

  ConnSvrGetOnlineCountReq(const ConnSvrGetOnlineCountReq& from);

  inline ConnSvrGetOnlineCountReq& operator=(const ConnSvrGetOnlineCountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrGetOnlineCountReq& default_instance();

  void Swap(ConnSvrGetOnlineCountReq* other);

  // implements Message ----------------------------------------------

  ConnSvrGetOnlineCountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrGetOnlineCountReq& from);
  void MergeFrom(const ConnSvrGetOnlineCountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrGetOnlineCountReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrGetOnlineCountReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrGetOnlineCountRsp : public ::google::protobuf::Message {
 public:
  ConnSvrGetOnlineCountRsp();
  virtual ~ConnSvrGetOnlineCountRsp();

  ConnSvrGetOnlineCountRsp(const ConnSvrGetOnlineCountRsp& from);

  inline ConnSvrGetOnlineCountRsp& operator=(const ConnSvrGetOnlineCountRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrGetOnlineCountRsp& default_instance();

  void Swap(ConnSvrGetOnlineCountRsp* other);

  // implements Message ----------------------------------------------

  ConnSvrGetOnlineCountRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrGetOnlineCountRsp& from);
  void MergeFrom(const ConnSvrGetOnlineCountRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // required uint64 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint64 count() const;
  inline void set_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrGetOnlineCountRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::uint64 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrGetOnlineCountRsp* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrGetIfOnlineReq : public ::google::protobuf::Message {
 public:
  ConnSvrGetIfOnlineReq();
  virtual ~ConnSvrGetIfOnlineReq();

  ConnSvrGetIfOnlineReq(const ConnSvrGetIfOnlineReq& from);

  inline ConnSvrGetIfOnlineReq& operator=(const ConnSvrGetIfOnlineReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrGetIfOnlineReq& default_instance();

  void Swap(ConnSvrGetIfOnlineReq* other);

  // implements Message ----------------------------------------------

  ConnSvrGetIfOnlineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrGetIfOnlineReq& from);
  void MergeFrom(const ConnSvrGetIfOnlineReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 user_id = 1;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrGetIfOnlineReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrGetIfOnlineReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrGetIfOnlineRsp : public ::google::protobuf::Message {
 public:
  ConnSvrGetIfOnlineRsp();
  virtual ~ConnSvrGetIfOnlineRsp();

  ConnSvrGetIfOnlineRsp(const ConnSvrGetIfOnlineRsp& from);

  inline ConnSvrGetIfOnlineRsp& operator=(const ConnSvrGetIfOnlineRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrGetIfOnlineRsp& default_instance();

  void Swap(ConnSvrGetIfOnlineRsp* other);

  // implements Message ----------------------------------------------

  ConnSvrGetIfOnlineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrGetIfOnlineRsp& from);
  void MergeFrom(const ConnSvrGetIfOnlineRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 user_id = 1;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrGetIfOnlineRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrGetIfOnlineRsp* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrKickNoRspReq : public ::google::protobuf::Message {
 public:
  ConnSvrKickNoRspReq();
  virtual ~ConnSvrKickNoRspReq();

  ConnSvrKickNoRspReq(const ConnSvrKickNoRspReq& from);

  inline ConnSvrKickNoRspReq& operator=(const ConnSvrKickNoRspReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrKickNoRspReq& default_instance();

  void Swap(ConnSvrKickNoRspReq* other);

  // implements Message ----------------------------------------------

  ConnSvrKickNoRspReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrKickNoRspReq& from);
  void MergeFrom(const ConnSvrKickNoRspReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrKickNoRspReq)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 timestamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrKickNoRspReq* default_instance_;
};
// -------------------------------------------------------------------

class Address : public ::google::protobuf::Message {
 public:
  Address();
  virtual ~Address();

  Address(const Address& from);

  inline Address& operator=(const Address& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Address& default_instance();

  void Swap(Address* other);

  // implements Message ----------------------------------------------

  Address* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Address& from);
  void MergeFrom(const Address& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // required uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // optional uint64 timestamp = 3 [default = 0];
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // optional bool should_stat = 4 [default = false];
  inline bool has_should_stat() const;
  inline void clear_should_stat();
  static const int kShouldStatFieldNumber = 4;
  inline bool should_stat() const;
  inline void set_should_stat(bool value);

  // @@protoc_insertion_point(class_scope:DidiPush.Address)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_should_stat();
  inline void clear_has_should_stat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ip_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 port_;
  bool should_stat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Address* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterKickReq : public ::google::protobuf::Message {
 public:
  ConnMasterKickReq();
  virtual ~ConnMasterKickReq();

  ConnMasterKickReq(const ConnMasterKickReq& from);

  inline ConnMasterKickReq& operator=(const ConnMasterKickReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterKickReq& default_instance();

  void Swap(ConnMasterKickReq* other);

  // implements Message ----------------------------------------------

  ConnMasterKickReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterKickReq& from);
  void MergeFrom(const ConnMasterKickReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterKickReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterKickReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterKickRsp : public ::google::protobuf::Message {
 public:
  ConnMasterKickRsp();
  virtual ~ConnMasterKickRsp();

  ConnMasterKickRsp(const ConnMasterKickRsp& from);

  inline ConnMasterKickRsp& operator=(const ConnMasterKickRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterKickRsp& default_instance();

  void Swap(ConnMasterKickRsp* other);

  // implements Message ----------------------------------------------

  ConnMasterKickRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterKickRsp& from);
  void MergeFrom(const ConnMasterKickRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rc = 1;
  inline bool has_rc() const;
  inline void clear_rc();
  static const int kRcFieldNumber = 1;
  inline ::google::protobuf::int32 rc() const;
  inline void set_rc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterKickRsp)
 private:
  inline void set_has_rc();
  inline void clear_has_rc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterKickRsp* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterGetIfOnlineReq : public ::google::protobuf::Message {
 public:
  ConnMasterGetIfOnlineReq();
  virtual ~ConnMasterGetIfOnlineReq();

  ConnMasterGetIfOnlineReq(const ConnMasterGetIfOnlineReq& from);

  inline ConnMasterGetIfOnlineReq& operator=(const ConnMasterGetIfOnlineReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterGetIfOnlineReq& default_instance();

  void Swap(ConnMasterGetIfOnlineReq* other);

  // implements Message ----------------------------------------------

  ConnMasterGetIfOnlineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterGetIfOnlineReq& from);
  void MergeFrom(const ConnMasterGetIfOnlineReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 user_id = 1;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterGetIfOnlineReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterGetIfOnlineReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterGetIfOnlineRsp : public ::google::protobuf::Message {
 public:
  ConnMasterGetIfOnlineRsp();
  virtual ~ConnMasterGetIfOnlineRsp();

  ConnMasterGetIfOnlineRsp(const ConnMasterGetIfOnlineRsp& from);

  inline ConnMasterGetIfOnlineRsp& operator=(const ConnMasterGetIfOnlineRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterGetIfOnlineRsp& default_instance();

  void Swap(ConnMasterGetIfOnlineRsp* other);

  // implements Message ----------------------------------------------

  ConnMasterGetIfOnlineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterGetIfOnlineRsp& from);
  void MergeFrom(const ConnMasterGetIfOnlineRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // repeated uint64 user_id = 2;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterGetIfOnlineRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterGetIfOnlineRsp* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterGetRouteReq : public ::google::protobuf::Message {
 public:
  ConnMasterGetRouteReq();
  virtual ~ConnMasterGetRouteReq();

  ConnMasterGetRouteReq(const ConnMasterGetRouteReq& from);

  inline ConnMasterGetRouteReq& operator=(const ConnMasterGetRouteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterGetRouteReq& default_instance();

  void Swap(ConnMasterGetRouteReq* other);

  // implements Message ----------------------------------------------

  ConnMasterGetRouteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterGetRouteReq& from);
  void MergeFrom(const ConnMasterGetRouteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterGetRouteReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterGetRouteReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterGetRouteRsp : public ::google::protobuf::Message {
 public:
  ConnMasterGetRouteRsp();
  virtual ~ConnMasterGetRouteRsp();

  ConnMasterGetRouteRsp(const ConnMasterGetRouteRsp& from);

  inline ConnMasterGetRouteRsp& operator=(const ConnMasterGetRouteRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterGetRouteRsp& default_instance();

  void Swap(ConnMasterGetRouteRsp* other);

  // implements Message ----------------------------------------------

  ConnMasterGetRouteRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterGetRouteRsp& from);
  void MergeFrom(const ConnMasterGetRouteRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // optional .DidiPush.Address conn_svr = 2;
  inline bool has_conn_svr() const;
  inline void clear_conn_svr();
  static const int kConnSvrFieldNumber = 2;
  inline const ::DidiPush::Address& conn_svr() const;
  inline ::DidiPush::Address* mutable_conn_svr();
  inline ::DidiPush::Address* release_conn_svr();
  inline void set_allocated_conn_svr(::DidiPush::Address* conn_svr);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterGetRouteRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();
  inline void set_has_conn_svr();
  inline void clear_has_conn_svr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::DidiPush::Address* conn_svr_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterGetRouteRsp* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterDelRouteReq : public ::google::protobuf::Message {
 public:
  ConnMasterDelRouteReq();
  virtual ~ConnMasterDelRouteReq();

  ConnMasterDelRouteReq(const ConnMasterDelRouteReq& from);

  inline ConnMasterDelRouteReq& operator=(const ConnMasterDelRouteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterDelRouteReq& default_instance();

  void Swap(ConnMasterDelRouteReq* other);

  // implements Message ----------------------------------------------

  ConnMasterDelRouteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterDelRouteReq& from);
  void MergeFrom(const ConnMasterDelRouteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint64 timestamp = 2 [default = 0];
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterDelRouteReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint64 timestamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterDelRouteReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterGetOnlineReq : public ::google::protobuf::Message {
 public:
  ConnMasterGetOnlineReq();
  virtual ~ConnMasterGetOnlineReq();

  ConnMasterGetOnlineReq(const ConnMasterGetOnlineReq& from);

  inline ConnMasterGetOnlineReq& operator=(const ConnMasterGetOnlineReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterGetOnlineReq& default_instance();

  void Swap(ConnMasterGetOnlineReq* other);

  // implements Message ----------------------------------------------

  ConnMasterGetOnlineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterGetOnlineReq& from);
  void MergeFrom(const ConnMasterGetOnlineReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterGetOnlineReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterGetOnlineReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterGetOnlineRsp : public ::google::protobuf::Message {
 public:
  ConnMasterGetOnlineRsp();
  virtual ~ConnMasterGetOnlineRsp();

  ConnMasterGetOnlineRsp(const ConnMasterGetOnlineRsp& from);

  inline ConnMasterGetOnlineRsp& operator=(const ConnMasterGetOnlineRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterGetOnlineRsp& default_instance();

  void Swap(ConnMasterGetOnlineRsp* other);

  // implements Message ----------------------------------------------

  ConnMasterGetOnlineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterGetOnlineRsp& from);
  void MergeFrom(const ConnMasterGetOnlineRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // repeated uint64 user_id = 2;
  inline int user_id_size() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id(int index) const;
  inline void set_user_id(int index, ::google::protobuf::uint64 value);
  inline void add_user_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_user_id();

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterGetOnlineRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterGetOnlineRsp* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterGetOnlineCountReq : public ::google::protobuf::Message {
 public:
  ConnMasterGetOnlineCountReq();
  virtual ~ConnMasterGetOnlineCountReq();

  ConnMasterGetOnlineCountReq(const ConnMasterGetOnlineCountReq& from);

  inline ConnMasterGetOnlineCountReq& operator=(const ConnMasterGetOnlineCountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterGetOnlineCountReq& default_instance();

  void Swap(ConnMasterGetOnlineCountReq* other);

  // implements Message ----------------------------------------------

  ConnMasterGetOnlineCountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterGetOnlineCountReq& from);
  void MergeFrom(const ConnMasterGetOnlineCountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterGetOnlineCountReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterGetOnlineCountReq* default_instance_;
};
// -------------------------------------------------------------------

class ConnMasterGetOnlineCountRsp : public ::google::protobuf::Message {
 public:
  ConnMasterGetOnlineCountRsp();
  virtual ~ConnMasterGetOnlineCountRsp();

  ConnMasterGetOnlineCountRsp(const ConnMasterGetOnlineCountRsp& from);

  inline ConnMasterGetOnlineCountRsp& operator=(const ConnMasterGetOnlineCountRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnMasterGetOnlineCountRsp& default_instance();

  void Swap(ConnMasterGetOnlineCountRsp* other);

  // implements Message ----------------------------------------------

  ConnMasterGetOnlineCountRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnMasterGetOnlineCountRsp& from);
  void MergeFrom(const ConnMasterGetOnlineCountRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // required uint64 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint64 count() const;
  inline void set_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnMasterGetOnlineCountRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::uint64 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnMasterGetOnlineCountRsp* default_instance_;
};
// -------------------------------------------------------------------

class AuthSvrAddUserReq : public ::google::protobuf::Message {
 public:
  AuthSvrAddUserReq();
  virtual ~AuthSvrAddUserReq();

  AuthSvrAddUserReq(const AuthSvrAddUserReq& from);

  inline AuthSvrAddUserReq& operator=(const AuthSvrAddUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthSvrAddUserReq& default_instance();

  void Swap(AuthSvrAddUserReq* other);

  // implements Message ----------------------------------------------

  AuthSvrAddUserReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthSvrAddUserReq& from);
  void MergeFrom(const AuthSvrAddUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required bytes token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const void* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // required string phone_num = 3;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 3;
  inline const ::std::string& phone_num() const;
  inline void set_phone_num(const ::std::string& value);
  inline void set_phone_num(const char* value);
  inline void set_phone_num(const char* value, size_t size);
  inline ::std::string* mutable_phone_num();
  inline ::std::string* release_phone_num();
  inline void set_allocated_phone_num(::std::string* phone_num);

  // @@protoc_insertion_point(class_scope:DidiPush.AuthSvrAddUserReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::std::string* token_;
  ::std::string* phone_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AuthSvrAddUserReq* default_instance_;
};
// -------------------------------------------------------------------

class AuthSvrDelUserReq : public ::google::protobuf::Message {
 public:
  AuthSvrDelUserReq();
  virtual ~AuthSvrDelUserReq();

  AuthSvrDelUserReq(const AuthSvrDelUserReq& from);

  inline AuthSvrDelUserReq& operator=(const AuthSvrDelUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthSvrDelUserReq& default_instance();

  void Swap(AuthSvrDelUserReq* other);

  // implements Message ----------------------------------------------

  AuthSvrDelUserReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthSvrDelUserReq& from);
  void MergeFrom(const AuthSvrDelUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.AuthSvrDelUserReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AuthSvrDelUserReq* default_instance_;
};
// -------------------------------------------------------------------

class AuthSvrLoginReq : public ::google::protobuf::Message {
 public:
  AuthSvrLoginReq();
  virtual ~AuthSvrLoginReq();

  AuthSvrLoginReq(const AuthSvrLoginReq& from);

  inline AuthSvrLoginReq& operator=(const AuthSvrLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthSvrLoginReq& default_instance();

  void Swap(AuthSvrLoginReq* other);

  // implements Message ----------------------------------------------

  AuthSvrLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthSvrLoginReq& from);
  void MergeFrom(const AuthSvrLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline const ::std::string& phone_num() const;
  inline void set_phone_num(const ::std::string& value);
  inline void set_phone_num(const char* value);
  inline void set_phone_num(const char* value, size_t size);
  inline ::std::string* mutable_phone_num();
  inline ::std::string* release_phone_num();
  inline void set_allocated_phone_num(::std::string* phone_num);

  // required bytes secret_chap = 3;
  inline bool has_secret_chap() const;
  inline void clear_secret_chap();
  static const int kSecretChapFieldNumber = 3;
  inline const ::std::string& secret_chap() const;
  inline void set_secret_chap(const ::std::string& value);
  inline void set_secret_chap(const char* value);
  inline void set_secret_chap(const void* value, size_t size);
  inline ::std::string* mutable_secret_chap();
  inline ::std::string* release_secret_chap();
  inline void set_allocated_secret_chap(::std::string* secret_chap);

  // required bytes random_msg = 4;
  inline bool has_random_msg() const;
  inline void clear_random_msg();
  static const int kRandomMsgFieldNumber = 4;
  inline const ::std::string& random_msg() const;
  inline void set_random_msg(const ::std::string& value);
  inline void set_random_msg(const char* value);
  inline void set_random_msg(const void* value, size_t size);
  inline ::std::string* mutable_random_msg();
  inline ::std::string* release_random_msg();
  inline void set_allocated_random_msg(::std::string* random_msg);

  // required int32 role = 5;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 5;
  inline ::google::protobuf::int32 role() const;
  inline void set_role(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DidiPush.AuthSvrLoginReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_secret_chap();
  inline void clear_has_secret_chap();
  inline void set_has_random_msg();
  inline void clear_has_random_msg();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* phone_num_;
  ::std::string* secret_chap_;
  ::std::string* random_msg_;
  ::google::protobuf::int32 role_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AuthSvrLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class AuthSvrLoginRsp : public ::google::protobuf::Message {
 public:
  AuthSvrLoginRsp();
  virtual ~AuthSvrLoginRsp();

  AuthSvrLoginRsp(const AuthSvrLoginRsp& from);

  inline AuthSvrLoginRsp& operator=(const AuthSvrLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthSvrLoginRsp& default_instance();

  void Swap(AuthSvrLoginRsp* other);

  // implements Message ----------------------------------------------

  AuthSvrLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthSvrLoginRsp& from);
  void MergeFrom(const AuthSvrLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // required uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.AuthSvrLoginRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::uint64 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AuthSvrLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class AuthSvrQueryUserReq : public ::google::protobuf::Message {
 public:
  AuthSvrQueryUserReq();
  virtual ~AuthSvrQueryUserReq();

  AuthSvrQueryUserReq(const AuthSvrQueryUserReq& from);

  inline AuthSvrQueryUserReq& operator=(const AuthSvrQueryUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthSvrQueryUserReq& default_instance();

  void Swap(AuthSvrQueryUserReq* other);

  // implements Message ----------------------------------------------

  AuthSvrQueryUserReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthSvrQueryUserReq& from);
  void MergeFrom(const AuthSvrQueryUserReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string phone_num = 1;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 1;
  inline const ::std::string& phone_num() const;
  inline void set_phone_num(const ::std::string& value);
  inline void set_phone_num(const char* value);
  inline void set_phone_num(const char* value, size_t size);
  inline ::std::string* mutable_phone_num();
  inline ::std::string* release_phone_num();
  inline void set_allocated_phone_num(::std::string* phone_num);

  // required int32 role = 3;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 3;
  inline ::google::protobuf::int32 role() const;
  inline void set_role(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DidiPush.AuthSvrQueryUserReq)
 private:
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* phone_num_;
  ::google::protobuf::int32 role_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AuthSvrQueryUserReq* default_instance_;
};
// -------------------------------------------------------------------

class AuthSvrQueryUserRsp : public ::google::protobuf::Message {
 public:
  AuthSvrQueryUserRsp();
  virtual ~AuthSvrQueryUserRsp();

  AuthSvrQueryUserRsp(const AuthSvrQueryUserRsp& from);

  inline AuthSvrQueryUserRsp& operator=(const AuthSvrQueryUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthSvrQueryUserRsp& default_instance();

  void Swap(AuthSvrQueryUserRsp* other);

  // implements Message ----------------------------------------------

  AuthSvrQueryUserRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthSvrQueryUserRsp& from);
  void MergeFrom(const AuthSvrQueryUserRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // optional uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.AuthSvrQueryUserRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::uint64 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AuthSvrQueryUserRsp* default_instance_;
};
// -------------------------------------------------------------------

class AuthSvrSignReq : public ::google::protobuf::Message {
 public:
  AuthSvrSignReq();
  virtual ~AuthSvrSignReq();

  AuthSvrSignReq(const AuthSvrSignReq& from);

  inline AuthSvrSignReq& operator=(const AuthSvrSignReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthSvrSignReq& default_instance();

  void Swap(AuthSvrSignReq* other);

  // implements Message ----------------------------------------------

  AuthSvrSignReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthSvrSignReq& from);
  void MergeFrom(const AuthSvrSignReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:DidiPush.AuthSvrSignReq)
 private:
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* content_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AuthSvrSignReq* default_instance_;
};
// -------------------------------------------------------------------

class AuthSvrSignRsp : public ::google::protobuf::Message {
 public:
  AuthSvrSignRsp();
  virtual ~AuthSvrSignRsp();

  AuthSvrSignRsp(const AuthSvrSignRsp& from);

  inline AuthSvrSignRsp& operator=(const AuthSvrSignRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthSvrSignRsp& default_instance();

  void Swap(AuthSvrSignRsp* other);

  // implements Message ----------------------------------------------

  AuthSvrSignRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthSvrSignRsp& from);
  void MergeFrom(const AuthSvrSignRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // optional string hmac = 2;
  inline bool has_hmac() const;
  inline void clear_hmac();
  static const int kHmacFieldNumber = 2;
  inline const ::std::string& hmac() const;
  inline void set_hmac(const ::std::string& value);
  inline void set_hmac(const char* value);
  inline void set_hmac(const char* value, size_t size);
  inline ::std::string* mutable_hmac();
  inline ::std::string* release_hmac();
  inline void set_allocated_hmac(::std::string* hmac);

  // @@protoc_insertion_point(class_scope:DidiPush.AuthSvrSignRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();
  inline void set_has_hmac();
  inline void clear_has_hmac();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::std::string* hmac_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AuthSvrSignRsp* default_instance_;
};
// -------------------------------------------------------------------

class Coordinate : public ::google::protobuf::Message {
 public:
  Coordinate();
  virtual ~Coordinate();

  Coordinate(const Coordinate& from);

  inline Coordinate& operator=(const Coordinate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Coordinate& default_instance();

  void Swap(Coordinate* other);

  // implements Message ----------------------------------------------

  Coordinate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Coordinate& from);
  void MergeFrom(const Coordinate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline double x() const;
  inline void set_x(double value);

  // required double y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline double y() const;
  inline void set_y(double value);

  // required .DidiPush.CoordinateType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::DidiPush::CoordinateType type() const;
  inline void set_type(::DidiPush::CoordinateType value);

  // optional uint32 timestamp = 4;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional double dx = 5;
  inline bool has_dx() const;
  inline void clear_dx();
  static const int kDxFieldNumber = 5;
  inline double dx() const;
  inline void set_dx(double value);

  // optional double dy = 6;
  inline bool has_dy() const;
  inline void clear_dy();
  static const int kDyFieldNumber = 6;
  inline double dy() const;
  inline void set_dy(double value);

  // @@protoc_insertion_point(class_scope:DidiPush.Coordinate)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_dx();
  inline void clear_has_dx();
  inline void set_has_dy();
  inline void clear_has_dy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double x_;
  double y_;
  int type_;
  ::google::protobuf::uint32 timestamp_;
  double dx_;
  double dy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Coordinate* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrUpReq : public ::google::protobuf::Message {
 public:
  CdntSvrUpReq();
  virtual ~CdntSvrUpReq();

  CdntSvrUpReq(const CdntSvrUpReq& from);

  inline CdntSvrUpReq& operator=(const CdntSvrUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrUpReq& default_instance();

  void Swap(CdntSvrUpReq* other);

  // implements Message ----------------------------------------------

  CdntSvrUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrUpReq& from);
  void MergeFrom(const CdntSvrUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline double x() const;
  inline void set_x(double value);

  // required double y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline double y() const;
  inline void set_y(double value);

  // required .DidiPush.CoordinateType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::DidiPush::CoordinateType type() const;
  inline void set_type(::DidiPush::CoordinateType value);

  // optional uint32 timestamp = 4;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional bool pull_peer = 5;
  inline bool has_pull_peer() const;
  inline void clear_pull_peer();
  static const int kPullPeerFieldNumber = 5;
  inline bool pull_peer() const;
  inline void set_pull_peer(bool value);

  // optional double dx = 6;
  inline bool has_dx() const;
  inline void clear_dx();
  static const int kDxFieldNumber = 6;
  inline double dx() const;
  inline void set_dx(double value);

  // optional double dy = 7;
  inline bool has_dy() const;
  inline void clear_dy();
  static const int kDyFieldNumber = 7;
  inline double dy() const;
  inline void set_dy(double value);

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrUpReq)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_pull_peer();
  inline void clear_has_pull_peer();
  inline void set_has_dx();
  inline void clear_has_dx();
  inline void set_has_dy();
  inline void clear_has_dy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double x_;
  double y_;
  int type_;
  ::google::protobuf::uint32 timestamp_;
  double dx_;
  double dy_;
  bool pull_peer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrUpReq* default_instance_;
};
// -------------------------------------------------------------------

class PeerCoordinateInfo : public ::google::protobuf::Message {
 public:
  PeerCoordinateInfo();
  virtual ~PeerCoordinateInfo();

  PeerCoordinateInfo(const PeerCoordinateInfo& from);

  inline PeerCoordinateInfo& operator=(const PeerCoordinateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PeerCoordinateInfo& default_instance();

  void Swap(PeerCoordinateInfo* other);

  // implements Message ----------------------------------------------

  PeerCoordinateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PeerCoordinateInfo& from);
  void MergeFrom(const PeerCoordinateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string local_id = 1;
  inline bool has_local_id() const;
  inline void clear_local_id();
  static const int kLocalIdFieldNumber = 1;
  inline const ::std::string& local_id() const;
  inline void set_local_id(const ::std::string& value);
  inline void set_local_id(const char* value);
  inline void set_local_id(const char* value, size_t size);
  inline ::std::string* mutable_local_id();
  inline ::std::string* release_local_id();
  inline void set_allocated_local_id(::std::string* local_id);

  // required .DidiPush.Coordinate coordinate = 2;
  inline bool has_coordinate() const;
  inline void clear_coordinate();
  static const int kCoordinateFieldNumber = 2;
  inline const ::DidiPush::Coordinate& coordinate() const;
  inline ::DidiPush::Coordinate* mutable_coordinate();
  inline ::DidiPush::Coordinate* release_coordinate();
  inline void set_allocated_coordinate(::DidiPush::Coordinate* coordinate);

  // required uint32 distance = 3;
  inline bool has_distance() const;
  inline void clear_distance();
  static const int kDistanceFieldNumber = 3;
  inline ::google::protobuf::uint32 distance() const;
  inline void set_distance(::google::protobuf::uint32 value);

  // required uint32 wait_time = 4;
  inline bool has_wait_time() const;
  inline void clear_wait_time();
  static const int kWaitTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 wait_time() const;
  inline void set_wait_time(::google::protobuf::uint32 value);

  // optional bool is_arrived_limited = 5;
  inline bool has_is_arrived_limited() const;
  inline void clear_is_arrived_limited();
  static const int kIsArrivedLimitedFieldNumber = 5;
  inline bool is_arrived_limited() const;
  inline void set_is_arrived_limited(bool value);

  // @@protoc_insertion_point(class_scope:DidiPush.PeerCoordinateInfo)
 private:
  inline void set_has_local_id();
  inline void clear_has_local_id();
  inline void set_has_coordinate();
  inline void clear_has_coordinate();
  inline void set_has_distance();
  inline void clear_has_distance();
  inline void set_has_wait_time();
  inline void clear_has_wait_time();
  inline void set_has_is_arrived_limited();
  inline void clear_has_is_arrived_limited();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* local_id_;
  ::DidiPush::Coordinate* coordinate_;
  ::google::protobuf::uint32 distance_;
  ::google::protobuf::uint32 wait_time_;
  bool is_arrived_limited_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PeerCoordinateInfo* default_instance_;
};
// -------------------------------------------------------------------

class PeerCoordinateRelation : public ::google::protobuf::Message {
 public:
  PeerCoordinateRelation();
  virtual ~PeerCoordinateRelation();

  PeerCoordinateRelation(const PeerCoordinateRelation& from);

  inline PeerCoordinateRelation& operator=(const PeerCoordinateRelation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PeerCoordinateRelation& default_instance();

  void Swap(PeerCoordinateRelation* other);

  // implements Message ----------------------------------------------

  PeerCoordinateRelation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PeerCoordinateRelation& from);
  void MergeFrom(const PeerCoordinateRelation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string local_id = 1;
  inline bool has_local_id() const;
  inline void clear_local_id();
  static const int kLocalIdFieldNumber = 1;
  inline const ::std::string& local_id() const;
  inline void set_local_id(const ::std::string& value);
  inline void set_local_id(const char* value);
  inline void set_local_id(const char* value, size_t size);
  inline ::std::string* mutable_local_id();
  inline ::std::string* release_local_id();
  inline void set_allocated_local_id(::std::string* local_id);

  // required uint64 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // required uint32 inactive_expire_seconds = 3;
  inline bool has_inactive_expire_seconds() const;
  inline void clear_inactive_expire_seconds();
  static const int kInactiveExpireSecondsFieldNumber = 3;
  inline ::google::protobuf::uint32 inactive_expire_seconds() const;
  inline void set_inactive_expire_seconds(::google::protobuf::uint32 value);

  // optional uint32 last_active_timestamp = 4;
  inline bool has_last_active_timestamp() const;
  inline void clear_last_active_timestamp();
  static const int kLastActiveTimestampFieldNumber = 4;
  inline ::google::protobuf::uint32 last_active_timestamp() const;
  inline void set_last_active_timestamp(::google::protobuf::uint32 value);

  // optional uint32 create_time = 5;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 create_time() const;
  inline void set_create_time(::google::protobuf::uint32 value);

  // optional .DidiPush.RelationType type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::DidiPush::RelationType type() const;
  inline void set_type(::DidiPush::RelationType value);

  // optional uint32 biz_type = 7;
  inline bool has_biz_type() const;
  inline void clear_biz_type();
  static const int kBizTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 biz_type() const;
  inline void set_biz_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DidiPush.PeerCoordinateRelation)
 private:
  inline void set_has_local_id();
  inline void clear_has_local_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_inactive_expire_seconds();
  inline void clear_has_inactive_expire_seconds();
  inline void set_has_last_active_timestamp();
  inline void clear_has_last_active_timestamp();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_biz_type();
  inline void clear_has_biz_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* local_id_;
  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::uint32 inactive_expire_seconds_;
  ::google::protobuf::uint32 last_active_timestamp_;
  ::google::protobuf::uint32 create_time_;
  int type_;
  ::google::protobuf::uint32 biz_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PeerCoordinateRelation* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrSetRelationReq : public ::google::protobuf::Message {
 public:
  CdntSvrSetRelationReq();
  virtual ~CdntSvrSetRelationReq();

  CdntSvrSetRelationReq(const CdntSvrSetRelationReq& from);

  inline CdntSvrSetRelationReq& operator=(const CdntSvrSetRelationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrSetRelationReq& default_instance();

  void Swap(CdntSvrSetRelationReq* other);

  // implements Message ----------------------------------------------

  CdntSvrSetRelationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrSetRelationReq& from);
  void MergeFrom(const CdntSvrSetRelationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .DidiPush.PeerCoordinateRelation relations = 2;
  inline int relations_size() const;
  inline void clear_relations();
  static const int kRelationsFieldNumber = 2;
  inline const ::DidiPush::PeerCoordinateRelation& relations(int index) const;
  inline ::DidiPush::PeerCoordinateRelation* mutable_relations(int index);
  inline ::DidiPush::PeerCoordinateRelation* add_relations();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
      relations() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
      mutable_relations();

  // optional .DidiPush.CoordinateType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::DidiPush::CoordinateType type() const;
  inline void set_type(::DidiPush::CoordinateType value);

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrSetRelationReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation > relations_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrSetRelationReq* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrSetRelationRsp : public ::google::protobuf::Message {
 public:
  CdntSvrSetRelationRsp();
  virtual ~CdntSvrSetRelationRsp();

  CdntSvrSetRelationRsp(const CdntSvrSetRelationRsp& from);

  inline CdntSvrSetRelationRsp& operator=(const CdntSvrSetRelationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrSetRelationRsp& default_instance();

  void Swap(CdntSvrSetRelationRsp* other);

  // implements Message ----------------------------------------------

  CdntSvrSetRelationRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrSetRelationRsp& from);
  void MergeFrom(const CdntSvrSetRelationRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // repeated .DidiPush.PeerCoordinateRelation relations = 2;
  inline int relations_size() const;
  inline void clear_relations();
  static const int kRelationsFieldNumber = 2;
  inline const ::DidiPush::PeerCoordinateRelation& relations(int index) const;
  inline ::DidiPush::PeerCoordinateRelation* mutable_relations(int index);
  inline ::DidiPush::PeerCoordinateRelation* add_relations();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
      relations() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
      mutable_relations();

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrSetRelationRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation > relations_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrSetRelationRsp* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrAddRelationReq : public ::google::protobuf::Message {
 public:
  CdntSvrAddRelationReq();
  virtual ~CdntSvrAddRelationReq();

  CdntSvrAddRelationReq(const CdntSvrAddRelationReq& from);

  inline CdntSvrAddRelationReq& operator=(const CdntSvrAddRelationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrAddRelationReq& default_instance();

  void Swap(CdntSvrAddRelationReq* other);

  // implements Message ----------------------------------------------

  CdntSvrAddRelationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrAddRelationReq& from);
  void MergeFrom(const CdntSvrAddRelationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated .DidiPush.PeerCoordinateRelation relations = 2;
  inline int relations_size() const;
  inline void clear_relations();
  static const int kRelationsFieldNumber = 2;
  inline const ::DidiPush::PeerCoordinateRelation& relations(int index) const;
  inline ::DidiPush::PeerCoordinateRelation* mutable_relations(int index);
  inline ::DidiPush::PeerCoordinateRelation* add_relations();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
      relations() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
      mutable_relations();

  // optional .DidiPush.CoordinateType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::DidiPush::CoordinateType type() const;
  inline void set_type(::DidiPush::CoordinateType value);

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrAddRelationReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation > relations_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrAddRelationReq* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrAddRelationRsp : public ::google::protobuf::Message {
 public:
  CdntSvrAddRelationRsp();
  virtual ~CdntSvrAddRelationRsp();

  CdntSvrAddRelationRsp(const CdntSvrAddRelationRsp& from);

  inline CdntSvrAddRelationRsp& operator=(const CdntSvrAddRelationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrAddRelationRsp& default_instance();

  void Swap(CdntSvrAddRelationRsp* other);

  // implements Message ----------------------------------------------

  CdntSvrAddRelationRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrAddRelationRsp& from);
  void MergeFrom(const CdntSvrAddRelationRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // repeated .DidiPush.PeerCoordinateRelation relations = 2;
  inline int relations_size() const;
  inline void clear_relations();
  static const int kRelationsFieldNumber = 2;
  inline const ::DidiPush::PeerCoordinateRelation& relations(int index) const;
  inline ::DidiPush::PeerCoordinateRelation* mutable_relations(int index);
  inline ::DidiPush::PeerCoordinateRelation* add_relations();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
      relations() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
      mutable_relations();

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrAddRelationRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation > relations_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrAddRelationRsp* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrDelRelationReq : public ::google::protobuf::Message {
 public:
  CdntSvrDelRelationReq();
  virtual ~CdntSvrDelRelationReq();

  CdntSvrDelRelationReq(const CdntSvrDelRelationReq& from);

  inline CdntSvrDelRelationReq& operator=(const CdntSvrDelRelationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrDelRelationReq& default_instance();

  void Swap(CdntSvrDelRelationReq* other);

  // implements Message ----------------------------------------------

  CdntSvrDelRelationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrDelRelationReq& from);
  void MergeFrom(const CdntSvrDelRelationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // repeated string local_ids = 2;
  inline int local_ids_size() const;
  inline void clear_local_ids();
  static const int kLocalIdsFieldNumber = 2;
  inline const ::std::string& local_ids(int index) const;
  inline ::std::string* mutable_local_ids(int index);
  inline void set_local_ids(int index, const ::std::string& value);
  inline void set_local_ids(int index, const char* value);
  inline void set_local_ids(int index, const char* value, size_t size);
  inline ::std::string* add_local_ids();
  inline void add_local_ids(const ::std::string& value);
  inline void add_local_ids(const char* value);
  inline void add_local_ids(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& local_ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_local_ids();

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrDelRelationReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> local_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrDelRelationReq* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrDelRelationRsp : public ::google::protobuf::Message {
 public:
  CdntSvrDelRelationRsp();
  virtual ~CdntSvrDelRelationRsp();

  CdntSvrDelRelationRsp(const CdntSvrDelRelationRsp& from);

  inline CdntSvrDelRelationRsp& operator=(const CdntSvrDelRelationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrDelRelationRsp& default_instance();

  void Swap(CdntSvrDelRelationRsp* other);

  // implements Message ----------------------------------------------

  CdntSvrDelRelationRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrDelRelationRsp& from);
  void MergeFrom(const CdntSvrDelRelationRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // repeated .DidiPush.PeerCoordinateRelation relations = 2;
  inline int relations_size() const;
  inline void clear_relations();
  static const int kRelationsFieldNumber = 2;
  inline const ::DidiPush::PeerCoordinateRelation& relations(int index) const;
  inline ::DidiPush::PeerCoordinateRelation* mutable_relations(int index);
  inline ::DidiPush::PeerCoordinateRelation* add_relations();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
      relations() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
      mutable_relations();

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrDelRelationRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation > relations_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrDelRelationRsp* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrGetRelationReq : public ::google::protobuf::Message {
 public:
  CdntSvrGetRelationReq();
  virtual ~CdntSvrGetRelationReq();

  CdntSvrGetRelationReq(const CdntSvrGetRelationReq& from);

  inline CdntSvrGetRelationReq& operator=(const CdntSvrGetRelationReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrGetRelationReq& default_instance();

  void Swap(CdntSvrGetRelationReq* other);

  // implements Message ----------------------------------------------

  CdntSvrGetRelationReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrGetRelationReq& from);
  void MergeFrom(const CdntSvrGetRelationReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrGetRelationReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrGetRelationReq* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrGetRelationRsp : public ::google::protobuf::Message {
 public:
  CdntSvrGetRelationRsp();
  virtual ~CdntSvrGetRelationRsp();

  CdntSvrGetRelationRsp(const CdntSvrGetRelationRsp& from);

  inline CdntSvrGetRelationRsp& operator=(const CdntSvrGetRelationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrGetRelationRsp& default_instance();

  void Swap(CdntSvrGetRelationRsp* other);

  // implements Message ----------------------------------------------

  CdntSvrGetRelationRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrGetRelationRsp& from);
  void MergeFrom(const CdntSvrGetRelationRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.RspMsg rsp_msg = 1;
  inline bool has_rsp_msg() const;
  inline void clear_rsp_msg();
  static const int kRspMsgFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsp_msg() const;
  inline ::DidiPush::RspMsg* mutable_rsp_msg();
  inline ::DidiPush::RspMsg* release_rsp_msg();
  inline void set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg);

  // repeated .DidiPush.PeerCoordinateRelation relations = 2;
  inline int relations_size() const;
  inline void clear_relations();
  static const int kRelationsFieldNumber = 2;
  inline const ::DidiPush::PeerCoordinateRelation& relations(int index) const;
  inline ::DidiPush::PeerCoordinateRelation* mutable_relations(int index);
  inline ::DidiPush::PeerCoordinateRelation* add_relations();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
      relations() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
      mutable_relations();

  // optional .DidiPush.CoordinateType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::DidiPush::CoordinateType type() const;
  inline void set_type(::DidiPush::CoordinateType value);

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrGetRelationRsp)
 private:
  inline void set_has_rsp_msg();
  inline void clear_has_rsp_msg();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::RspMsg* rsp_msg_;
  ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation > relations_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrGetRelationRsp* default_instance_;
};
// -------------------------------------------------------------------

class CollectSvrHeartbeatReq : public ::google::protobuf::Message {
 public:
  CollectSvrHeartbeatReq();
  virtual ~CollectSvrHeartbeatReq();

  CollectSvrHeartbeatReq(const CollectSvrHeartbeatReq& from);

  inline CollectSvrHeartbeatReq& operator=(const CollectSvrHeartbeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectSvrHeartbeatReq& default_instance();

  void Swap(CollectSvrHeartbeatReq* other);

  // implements Message ----------------------------------------------

  CollectSvrHeartbeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectSvrHeartbeatReq& from);
  void MergeFrom(const CollectSvrHeartbeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DidiPush.CollectSvrHeartbeatReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CollectSvrHeartbeatReq* default_instance_;
};
// -------------------------------------------------------------------

class CollectSvrHeartbeatRsp : public ::google::protobuf::Message {
 public:
  CollectSvrHeartbeatRsp();
  virtual ~CollectSvrHeartbeatRsp();

  CollectSvrHeartbeatRsp(const CollectSvrHeartbeatRsp& from);

  inline CollectSvrHeartbeatRsp& operator=(const CollectSvrHeartbeatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectSvrHeartbeatRsp& default_instance();

  void Swap(CollectSvrHeartbeatRsp* other);

  // implements Message ----------------------------------------------

  CollectSvrHeartbeatRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectSvrHeartbeatRsp& from);
  void MergeFrom(const CollectSvrHeartbeatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DidiPush.CollectSvrHeartbeatRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CollectSvrHeartbeatRsp* default_instance_;
};
// -------------------------------------------------------------------

class CollectSvrDelayReq : public ::google::protobuf::Message {
 public:
  CollectSvrDelayReq();
  virtual ~CollectSvrDelayReq();

  CollectSvrDelayReq(const CollectSvrDelayReq& from);

  inline CollectSvrDelayReq& operator=(const CollectSvrDelayReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectSvrDelayReq& default_instance();

  void Swap(CollectSvrDelayReq* other);

  // implements Message ----------------------------------------------

  CollectSvrDelayReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectSvrDelayReq& from);
  void MergeFrom(const CollectSvrDelayReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.CollectSvrDelayReq)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CollectSvrDelayReq* default_instance_;
};
// -------------------------------------------------------------------

class PushSvrReq : public ::google::protobuf::Message {
 public:
  PushSvrReq();
  virtual ~PushSvrReq();

  PushSvrReq(const PushSvrReq& from);

  inline PushSvrReq& operator=(const PushSvrReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushSvrReq& default_instance();

  void Swap(PushSvrReq* other);

  // implements Message ----------------------------------------------

  PushSvrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushSvrReq& from);
  void MergeFrom(const PushSvrReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DidiPush.OldRole old_role = 1;
  inline bool has_old_role() const;
  inline void clear_old_role();
  static const int kOldRoleFieldNumber = 1;
  inline ::DidiPush::OldRole old_role() const;
  inline void set_old_role(::DidiPush::OldRole value);

  // optional string phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline const ::std::string& phone_num() const;
  inline void set_phone_num(const ::std::string& value);
  inline void set_phone_num(const char* value);
  inline void set_phone_num(const char* value, size_t size);
  inline ::std::string* mutable_phone_num();
  inline ::std::string* release_phone_num();
  inline void set_allocated_phone_num(::std::string* phone_num);

  // required .DidiPush.PushMsg push_msg = 3;
  inline bool has_push_msg() const;
  inline void clear_push_msg();
  static const int kPushMsgFieldNumber = 3;
  inline const ::DidiPush::PushMsg& push_msg() const;
  inline ::DidiPush::PushMsg* mutable_push_msg();
  inline ::DidiPush::PushMsg* release_push_msg();
  inline void set_allocated_push_msg(::DidiPush::PushMsg* push_msg);

  // required .DidiPush.PushStrategy push_strategy = 4;
  inline bool has_push_strategy() const;
  inline void clear_push_strategy();
  static const int kPushStrategyFieldNumber = 4;
  inline ::DidiPush::PushStrategy push_strategy() const;
  inline void set_push_strategy(::DidiPush::PushStrategy value);

  // optional uint64 user_id = 5;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 5;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional uint32 expire_seconds = 6;
  inline bool has_expire_seconds() const;
  inline void clear_expire_seconds();
  static const int kExpireSecondsFieldNumber = 6;
  inline ::google::protobuf::uint32 expire_seconds() const;
  inline void set_expire_seconds(::google::protobuf::uint32 value);

  // optional string log_str = 7;
  inline bool has_log_str() const;
  inline void clear_log_str();
  static const int kLogStrFieldNumber = 7;
  inline const ::std::string& log_str() const;
  inline void set_log_str(const ::std::string& value);
  inline void set_log_str(const char* value);
  inline void set_log_str(const char* value, size_t size);
  inline ::std::string* mutable_log_str();
  inline ::std::string* release_log_str();
  inline void set_allocated_log_str(::std::string* log_str);

  // optional int32 role = 8;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 8;
  inline ::google::protobuf::int32 role() const;
  inline void set_role(::google::protobuf::int32 value);

  // optional string sms_msg = 9;
  inline bool has_sms_msg() const;
  inline void clear_sms_msg();
  static const int kSmsMsgFieldNumber = 9;
  inline const ::std::string& sms_msg() const;
  inline void set_sms_msg(const ::std::string& value);
  inline void set_sms_msg(const char* value);
  inline void set_sms_msg(const char* value, size_t size);
  inline ::std::string* mutable_sms_msg();
  inline ::std::string* release_sms_msg();
  inline void set_allocated_sms_msg(::std::string* sms_msg);

  // optional uint32 timeout_to_sms = 10;
  inline bool has_timeout_to_sms() const;
  inline void clear_timeout_to_sms();
  static const int kTimeoutToSmsFieldNumber = 10;
  inline ::google::protobuf::uint32 timeout_to_sms() const;
  inline void set_timeout_to_sms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DidiPush.PushSvrReq)
 private:
  inline void set_has_old_role();
  inline void clear_has_old_role();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_push_msg();
  inline void clear_has_push_msg();
  inline void set_has_push_strategy();
  inline void clear_has_push_strategy();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_expire_seconds();
  inline void clear_has_expire_seconds();
  inline void set_has_log_str();
  inline void clear_has_log_str();
  inline void set_has_role();
  inline void clear_has_role();
  inline void set_has_sms_msg();
  inline void clear_has_sms_msg();
  inline void set_has_timeout_to_sms();
  inline void clear_has_timeout_to_sms();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* phone_num_;
  int old_role_;
  int push_strategy_;
  ::DidiPush::PushMsg* push_msg_;
  ::google::protobuf::uint64 user_id_;
  ::std::string* log_str_;
  ::google::protobuf::uint32 expire_seconds_;
  ::google::protobuf::int32 role_;
  ::std::string* sms_msg_;
  ::google::protobuf::uint32 timeout_to_sms_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PushSvrReq* default_instance_;
};
// -------------------------------------------------------------------

class PushSvrMultiReq_UserId : public ::google::protobuf::Message {
 public:
  PushSvrMultiReq_UserId();
  virtual ~PushSvrMultiReq_UserId();

  PushSvrMultiReq_UserId(const PushSvrMultiReq_UserId& from);

  inline PushSvrMultiReq_UserId& operator=(const PushSvrMultiReq_UserId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushSvrMultiReq_UserId& default_instance();

  void Swap(PushSvrMultiReq_UserId* other);

  // implements Message ----------------------------------------------

  PushSvrMultiReq_UserId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushSvrMultiReq_UserId& from);
  void MergeFrom(const PushSvrMultiReq_UserId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DidiPush.OldRole old_role = 1;
  inline bool has_old_role() const;
  inline void clear_old_role();
  static const int kOldRoleFieldNumber = 1;
  inline ::DidiPush::OldRole old_role() const;
  inline void set_old_role(::DidiPush::OldRole value);

  // optional string phone_num = 2;
  inline bool has_phone_num() const;
  inline void clear_phone_num();
  static const int kPhoneNumFieldNumber = 2;
  inline const ::std::string& phone_num() const;
  inline void set_phone_num(const ::std::string& value);
  inline void set_phone_num(const char* value);
  inline void set_phone_num(const char* value, size_t size);
  inline ::std::string* mutable_phone_num();
  inline ::std::string* release_phone_num();
  inline void set_allocated_phone_num(::std::string* phone_num);

  // optional uint64 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::uint64 user_id() const;
  inline void set_user_id(::google::protobuf::uint64 value);

  // optional int32 role = 4;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 4;
  inline ::google::protobuf::int32 role() const;
  inline void set_role(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DidiPush.PushSvrMultiReq.UserId)
 private:
  inline void set_has_old_role();
  inline void clear_has_old_role();
  inline void set_has_phone_num();
  inline void clear_has_phone_num();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* phone_num_;
  int old_role_;
  ::google::protobuf::int32 role_;
  ::google::protobuf::uint64 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PushSvrMultiReq_UserId* default_instance_;
};
// -------------------------------------------------------------------

class PushSvrMultiReq : public ::google::protobuf::Message {
 public:
  PushSvrMultiReq();
  virtual ~PushSvrMultiReq();

  PushSvrMultiReq(const PushSvrMultiReq& from);

  inline PushSvrMultiReq& operator=(const PushSvrMultiReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushSvrMultiReq& default_instance();

  void Swap(PushSvrMultiReq* other);

  // implements Message ----------------------------------------------

  PushSvrMultiReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushSvrMultiReq& from);
  void MergeFrom(const PushSvrMultiReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PushSvrMultiReq_UserId UserId;

  // accessors -------------------------------------------------------

  // repeated .DidiPush.PushSvrMultiReq.UserId users = 1;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 1;
  inline const ::DidiPush::PushSvrMultiReq_UserId& users(int index) const;
  inline ::DidiPush::PushSvrMultiReq_UserId* mutable_users(int index);
  inline ::DidiPush::PushSvrMultiReq_UserId* add_users();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PushSvrMultiReq_UserId >&
      users() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PushSvrMultiReq_UserId >*
      mutable_users();

  // required .DidiPush.PushMsg push_msg = 2;
  inline bool has_push_msg() const;
  inline void clear_push_msg();
  static const int kPushMsgFieldNumber = 2;
  inline const ::DidiPush::PushMsg& push_msg() const;
  inline ::DidiPush::PushMsg* mutable_push_msg();
  inline ::DidiPush::PushMsg* release_push_msg();
  inline void set_allocated_push_msg(::DidiPush::PushMsg* push_msg);

  // required .DidiPush.PushStrategy push_strategy = 3;
  inline bool has_push_strategy() const;
  inline void clear_push_strategy();
  static const int kPushStrategyFieldNumber = 3;
  inline ::DidiPush::PushStrategy push_strategy() const;
  inline void set_push_strategy(::DidiPush::PushStrategy value);

  // optional uint32 expire_seconds = 4;
  inline bool has_expire_seconds() const;
  inline void clear_expire_seconds();
  static const int kExpireSecondsFieldNumber = 4;
  inline ::google::protobuf::uint32 expire_seconds() const;
  inline void set_expire_seconds(::google::protobuf::uint32 value);

  // optional string log_str = 5;
  inline bool has_log_str() const;
  inline void clear_log_str();
  static const int kLogStrFieldNumber = 5;
  inline const ::std::string& log_str() const;
  inline void set_log_str(const ::std::string& value);
  inline void set_log_str(const char* value);
  inline void set_log_str(const char* value, size_t size);
  inline ::std::string* mutable_log_str();
  inline ::std::string* release_log_str();
  inline void set_allocated_log_str(::std::string* log_str);

  // optional string sms_msg = 6;
  inline bool has_sms_msg() const;
  inline void clear_sms_msg();
  static const int kSmsMsgFieldNumber = 6;
  inline const ::std::string& sms_msg() const;
  inline void set_sms_msg(const ::std::string& value);
  inline void set_sms_msg(const char* value);
  inline void set_sms_msg(const char* value, size_t size);
  inline ::std::string* mutable_sms_msg();
  inline ::std::string* release_sms_msg();
  inline void set_allocated_sms_msg(::std::string* sms_msg);

  // optional uint32 timeout_to_sms = 7;
  inline bool has_timeout_to_sms() const;
  inline void clear_timeout_to_sms();
  static const int kTimeoutToSmsFieldNumber = 7;
  inline ::google::protobuf::uint32 timeout_to_sms() const;
  inline void set_timeout_to_sms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DidiPush.PushSvrMultiReq)
 private:
  inline void set_has_push_msg();
  inline void clear_has_push_msg();
  inline void set_has_push_strategy();
  inline void clear_has_push_strategy();
  inline void set_has_expire_seconds();
  inline void clear_has_expire_seconds();
  inline void set_has_log_str();
  inline void clear_has_log_str();
  inline void set_has_sms_msg();
  inline void clear_has_sms_msg();
  inline void set_has_timeout_to_sms();
  inline void clear_has_timeout_to_sms();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DidiPush::PushSvrMultiReq_UserId > users_;
  ::DidiPush::PushMsg* push_msg_;
  int push_strategy_;
  ::google::protobuf::uint32 expire_seconds_;
  ::std::string* log_str_;
  ::std::string* sms_msg_;
  ::google::protobuf::uint32 timeout_to_sms_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PushSvrMultiReq* default_instance_;
};
// -------------------------------------------------------------------

class PushSvrMultiRsp : public ::google::protobuf::Message {
 public:
  PushSvrMultiRsp();
  virtual ~PushSvrMultiRsp();

  PushSvrMultiRsp(const PushSvrMultiRsp& from);

  inline PushSvrMultiRsp& operator=(const PushSvrMultiRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushSvrMultiRsp& default_instance();

  void Swap(PushSvrMultiRsp* other);

  // implements Message ----------------------------------------------

  PushSvrMultiRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushSvrMultiRsp& from);
  void MergeFrom(const PushSvrMultiRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DidiPush.RspMsg rsps = 1;
  inline int rsps_size() const;
  inline void clear_rsps();
  static const int kRspsFieldNumber = 1;
  inline const ::DidiPush::RspMsg& rsps(int index) const;
  inline ::DidiPush::RspMsg* mutable_rsps(int index);
  inline ::DidiPush::RspMsg* add_rsps();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::RspMsg >&
      rsps() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::RspMsg >*
      mutable_rsps();

  // @@protoc_insertion_point(class_scope:DidiPush.PushSvrMultiRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DidiPush::RspMsg > rsps_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PushSvrMultiRsp* default_instance_;
};
// -------------------------------------------------------------------

class PushSvrRetryReq : public ::google::protobuf::Message {
 public:
  PushSvrRetryReq();
  virtual ~PushSvrRetryReq();

  PushSvrRetryReq(const PushSvrRetryReq& from);

  inline PushSvrRetryReq& operator=(const PushSvrRetryReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushSvrRetryReq& default_instance();

  void Swap(PushSvrRetryReq* other);

  // implements Message ----------------------------------------------

  PushSvrRetryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushSvrRetryReq& from);
  void MergeFrom(const PushSvrRetryReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DidiPush.PushSvrReq msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::DidiPush::PushSvrReq& msg() const;
  inline ::DidiPush::PushSvrReq* mutable_msg();
  inline ::DidiPush::PushSvrReq* release_msg();
  inline void set_allocated_msg(::DidiPush::PushSvrReq* msg);

  // required uint64 message_id = 2;
  inline bool has_message_id() const;
  inline void clear_message_id();
  static const int kMessageIdFieldNumber = 2;
  inline ::google::protobuf::uint64 message_id() const;
  inline void set_message_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.PushSvrRetryReq)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_message_id();
  inline void clear_has_message_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DidiPush::PushSvrReq* msg_;
  ::google::protobuf::uint64 message_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PushSvrRetryReq* default_instance_;
};
// -------------------------------------------------------------------

class Param : public ::google::protobuf::Message {
 public:
  Param();
  virtual ~Param();

  Param(const Param& from);

  inline Param& operator=(const Param& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Param& default_instance();

  void Swap(Param* other);

  // implements Message ----------------------------------------------

  Param* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Param& from);
  void MergeFrom(const Param& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:DidiPush.Param)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::std::string* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Param* default_instance_;
};
// -------------------------------------------------------------------

class DispatchSvrReq : public ::google::protobuf::Message {
 public:
  DispatchSvrReq();
  virtual ~DispatchSvrReq();

  DispatchSvrReq(const DispatchSvrReq& from);

  inline DispatchSvrReq& operator=(const DispatchSvrReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DispatchSvrReq& default_instance();

  void Swap(DispatchSvrReq* other);

  // implements Message ----------------------------------------------

  DispatchSvrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DispatchSvrReq& from);
  void MergeFrom(const DispatchSvrReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 1;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  inline void set_allocated_path(::std::string* path);

  // repeated .DidiPush.Param query_params = 2;
  inline int query_params_size() const;
  inline void clear_query_params();
  static const int kQueryParamsFieldNumber = 2;
  inline const ::DidiPush::Param& query_params(int index) const;
  inline ::DidiPush::Param* mutable_query_params(int index);
  inline ::DidiPush::Param* add_query_params();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::Param >&
      query_params() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::Param >*
      mutable_query_params();

  // optional string content_type = 3;
  inline bool has_content_type() const;
  inline void clear_content_type();
  static const int kContentTypeFieldNumber = 3;
  inline const ::std::string& content_type() const;
  inline void set_content_type(const ::std::string& value);
  inline void set_content_type(const char* value);
  inline void set_content_type(const char* value, size_t size);
  inline ::std::string* mutable_content_type();
  inline ::std::string* release_content_type();
  inline void set_allocated_content_type(::std::string* content_type);

  // optional bytes post_data = 4;
  inline bool has_post_data() const;
  inline void clear_post_data();
  static const int kPostDataFieldNumber = 4;
  inline const ::std::string& post_data() const;
  inline void set_post_data(const ::std::string& value);
  inline void set_post_data(const char* value);
  inline void set_post_data(const void* value, size_t size);
  inline ::std::string* mutable_post_data();
  inline ::std::string* release_post_data();
  inline void set_allocated_post_data(::std::string* post_data);

  // @@protoc_insertion_point(class_scope:DidiPush.DispatchSvrReq)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_content_type();
  inline void clear_has_content_type();
  inline void set_has_post_data();
  inline void clear_has_post_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* path_;
  ::google::protobuf::RepeatedPtrField< ::DidiPush::Param > query_params_;
  ::std::string* content_type_;
  ::std::string* post_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DispatchSvrReq* default_instance_;
};
// -------------------------------------------------------------------

class DispatchSvrRsp : public ::google::protobuf::Message {
 public:
  DispatchSvrRsp();
  virtual ~DispatchSvrRsp();

  DispatchSvrRsp(const DispatchSvrRsp& from);

  inline DispatchSvrRsp& operator=(const DispatchSvrRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DispatchSvrRsp& default_instance();

  void Swap(DispatchSvrRsp* other);

  // implements Message ----------------------------------------------

  DispatchSvrRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DispatchSvrRsp& from);
  void MergeFrom(const DispatchSvrRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sys_code = 1;
  inline bool has_sys_code() const;
  inline void clear_sys_code();
  static const int kSysCodeFieldNumber = 1;
  inline ::google::protobuf::int32 sys_code() const;
  inline void set_sys_code(::google::protobuf::int32 value);

  // optional int32 http_status_code = 2;
  inline bool has_http_status_code() const;
  inline void clear_http_status_code();
  static const int kHttpStatusCodeFieldNumber = 2;
  inline ::google::protobuf::int32 http_status_code() const;
  inline void set_http_status_code(::google::protobuf::int32 value);

  // optional bytes body = 3;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 3;
  inline const ::std::string& body() const;
  inline void set_body(const ::std::string& value);
  inline void set_body(const char* value);
  inline void set_body(const void* value, size_t size);
  inline ::std::string* mutable_body();
  inline ::std::string* release_body();
  inline void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:DidiPush.DispatchSvrRsp)
 private:
  inline void set_has_sys_code();
  inline void clear_has_sys_code();
  inline void set_has_http_status_code();
  inline void clear_has_http_status_code();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sys_code_;
  ::google::protobuf::int32 http_status_code_;
  ::std::string* body_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DispatchSvrRsp* default_instance_;
};
// -------------------------------------------------------------------

class ConnSvrConnectChallenge : public ::google::protobuf::Message {
 public:
  ConnSvrConnectChallenge();
  virtual ~ConnSvrConnectChallenge();

  ConnSvrConnectChallenge(const ConnSvrConnectChallenge& from);

  inline ConnSvrConnectChallenge& operator=(const ConnSvrConnectChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnSvrConnectChallenge& default_instance();

  void Swap(ConnSvrConnectChallenge* other);

  // implements Message ----------------------------------------------

  ConnSvrConnectChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnSvrConnectChallenge& from);
  void MergeFrom(const ConnSvrConnectChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes random_msg = 1;
  inline bool has_random_msg() const;
  inline void clear_random_msg();
  static const int kRandomMsgFieldNumber = 1;
  inline const ::std::string& random_msg() const;
  inline void set_random_msg(const ::std::string& value);
  inline void set_random_msg(const char* value);
  inline void set_random_msg(const void* value, size_t size);
  inline ::std::string* mutable_random_msg();
  inline ::std::string* release_random_msg();
  inline void set_allocated_random_msg(::std::string* random_msg);

  // @@protoc_insertion_point(class_scope:DidiPush.ConnSvrConnectChallenge)
 private:
  inline void set_has_random_msg();
  inline void clear_has_random_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* random_msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ConnSvrConnectChallenge* default_instance_;
};
// -------------------------------------------------------------------

class AppHeartbeatReq : public ::google::protobuf::Message {
 public:
  AppHeartbeatReq();
  virtual ~AppHeartbeatReq();

  AppHeartbeatReq(const AppHeartbeatReq& from);

  inline AppHeartbeatReq& operator=(const AppHeartbeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppHeartbeatReq& default_instance();

  void Swap(AppHeartbeatReq* other);

  // implements Message ----------------------------------------------

  AppHeartbeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppHeartbeatReq& from);
  void MergeFrom(const AppHeartbeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DidiPush.AppHeartbeatReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AppHeartbeatReq* default_instance_;
};
// -------------------------------------------------------------------

class CdntSvrDownReq : public ::google::protobuf::Message {
 public:
  CdntSvrDownReq();
  virtual ~CdntSvrDownReq();

  CdntSvrDownReq(const CdntSvrDownReq& from);

  inline CdntSvrDownReq& operator=(const CdntSvrDownReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CdntSvrDownReq& default_instance();

  void Swap(CdntSvrDownReq* other);

  // implements Message ----------------------------------------------

  CdntSvrDownReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CdntSvrDownReq& from);
  void MergeFrom(const CdntSvrDownReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DidiPush.PeerCoordinateInfo peer_coordinate_infos = 1;
  inline int peer_coordinate_infos_size() const;
  inline void clear_peer_coordinate_infos();
  static const int kPeerCoordinateInfosFieldNumber = 1;
  inline const ::DidiPush::PeerCoordinateInfo& peer_coordinate_infos(int index) const;
  inline ::DidiPush::PeerCoordinateInfo* mutable_peer_coordinate_infos(int index);
  inline ::DidiPush::PeerCoordinateInfo* add_peer_coordinate_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateInfo >&
      peer_coordinate_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateInfo >*
      mutable_peer_coordinate_infos();

  // @@protoc_insertion_point(class_scope:DidiPush.CdntSvrDownReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateInfo > peer_coordinate_infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CdntSvrDownReq* default_instance_;
};
// -------------------------------------------------------------------

class PushStatReq : public ::google::protobuf::Message {
 public:
  PushStatReq();
  virtual ~PushStatReq();

  PushStatReq(const PushStatReq& from);

  inline PushStatReq& operator=(const PushStatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushStatReq& default_instance();

  void Swap(PushStatReq* other);

  // implements Message ----------------------------------------------

  PushStatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushStatReq& from);
  void MergeFrom(const PushStatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 task_ids = 1;
  inline int task_ids_size() const;
  inline void clear_task_ids();
  static const int kTaskIdsFieldNumber = 1;
  inline ::google::protobuf::uint64 task_ids(int index) const;
  inline void set_task_ids(int index, ::google::protobuf::uint64 value);
  inline void add_task_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      task_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_task_ids();

  // @@protoc_insertion_point(class_scope:DidiPush.PushStatReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > task_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PushStatReq* default_instance_;
};
// -------------------------------------------------------------------

class PushStat : public ::google::protobuf::Message {
 public:
  PushStat();
  virtual ~PushStat();

  PushStat(const PushStat& from);

  inline PushStat& operator=(const PushStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushStat& default_instance();

  void Swap(PushStat* other);

  // implements Message ----------------------------------------------

  PushStat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushStat& from);
  void MergeFrom(const PushStat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint64 task_id() const;
  inline void set_task_id(::google::protobuf::uint64 value);

  // optional uint32 send_cnt = 2;
  inline bool has_send_cnt() const;
  inline void clear_send_cnt();
  static const int kSendCntFieldNumber = 2;
  inline ::google::protobuf::uint32 send_cnt() const;
  inline void set_send_cnt(::google::protobuf::uint32 value);

  // optional uint32 recv_cnt = 3;
  inline bool has_recv_cnt() const;
  inline void clear_recv_cnt();
  static const int kRecvCntFieldNumber = 3;
  inline ::google::protobuf::uint32 recv_cnt() const;
  inline void set_recv_cnt(::google::protobuf::uint32 value);

  // optional uint32 in1s_recv_cnt = 4;
  inline bool has_in1s_recv_cnt() const;
  inline void clear_in1s_recv_cnt();
  static const int kIn1SRecvCntFieldNumber = 4;
  inline ::google::protobuf::uint32 in1s_recv_cnt() const;
  inline void set_in1s_recv_cnt(::google::protobuf::uint32 value);

  // optional uint32 in3s_recv_cnt = 5;
  inline bool has_in3s_recv_cnt() const;
  inline void clear_in3s_recv_cnt();
  static const int kIn3SRecvCntFieldNumber = 5;
  inline ::google::protobuf::uint32 in3s_recv_cnt() const;
  inline void set_in3s_recv_cnt(::google::protobuf::uint32 value);

  // optional uint32 in6s_recv_cnt = 6;
  inline bool has_in6s_recv_cnt() const;
  inline void clear_in6s_recv_cnt();
  static const int kIn6SRecvCntFieldNumber = 6;
  inline ::google::protobuf::uint32 in6s_recv_cnt() const;
  inline void set_in6s_recv_cnt(::google::protobuf::uint32 value);

  // optional uint32 in10s_recv_cnt = 7;
  inline bool has_in10s_recv_cnt() const;
  inline void clear_in10s_recv_cnt();
  static const int kIn10SRecvCntFieldNumber = 7;
  inline ::google::protobuf::uint32 in10s_recv_cnt() const;
  inline void set_in10s_recv_cnt(::google::protobuf::uint32 value);

  // optional uint32 in30s_recv_cnt = 8;
  inline bool has_in30s_recv_cnt() const;
  inline void clear_in30s_recv_cnt();
  static const int kIn30SRecvCntFieldNumber = 8;
  inline ::google::protobuf::uint32 in30s_recv_cnt() const;
  inline void set_in30s_recv_cnt(::google::protobuf::uint32 value);

  // optional uint32 in60s_recv_cnt = 9;
  inline bool has_in60s_recv_cnt() const;
  inline void clear_in60s_recv_cnt();
  static const int kIn60SRecvCntFieldNumber = 9;
  inline ::google::protobuf::uint32 in60s_recv_cnt() const;
  inline void set_in60s_recv_cnt(::google::protobuf::uint32 value);

  // optional uint32 gt60s_recv_cnt = 10;
  inline bool has_gt60s_recv_cnt() const;
  inline void clear_gt60s_recv_cnt();
  static const int kGt60SRecvCntFieldNumber = 10;
  inline ::google::protobuf::uint32 gt60s_recv_cnt() const;
  inline void set_gt60s_recv_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DidiPush.PushStat)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_send_cnt();
  inline void clear_has_send_cnt();
  inline void set_has_recv_cnt();
  inline void clear_has_recv_cnt();
  inline void set_has_in1s_recv_cnt();
  inline void clear_has_in1s_recv_cnt();
  inline void set_has_in3s_recv_cnt();
  inline void clear_has_in3s_recv_cnt();
  inline void set_has_in6s_recv_cnt();
  inline void clear_has_in6s_recv_cnt();
  inline void set_has_in10s_recv_cnt();
  inline void clear_has_in10s_recv_cnt();
  inline void set_has_in30s_recv_cnt();
  inline void clear_has_in30s_recv_cnt();
  inline void set_has_in60s_recv_cnt();
  inline void clear_has_in60s_recv_cnt();
  inline void set_has_gt60s_recv_cnt();
  inline void clear_has_gt60s_recv_cnt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_id_;
  ::google::protobuf::uint32 send_cnt_;
  ::google::protobuf::uint32 recv_cnt_;
  ::google::protobuf::uint32 in1s_recv_cnt_;
  ::google::protobuf::uint32 in3s_recv_cnt_;
  ::google::protobuf::uint32 in6s_recv_cnt_;
  ::google::protobuf::uint32 in10s_recv_cnt_;
  ::google::protobuf::uint32 in30s_recv_cnt_;
  ::google::protobuf::uint32 in60s_recv_cnt_;
  ::google::protobuf::uint32 gt60s_recv_cnt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PushStat* default_instance_;
};
// -------------------------------------------------------------------

class PushStatRsp : public ::google::protobuf::Message {
 public:
  PushStatRsp();
  virtual ~PushStatRsp();

  PushStatRsp(const PushStatRsp& from);

  inline PushStatRsp& operator=(const PushStatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushStatRsp& default_instance();

  void Swap(PushStatRsp* other);

  // implements Message ----------------------------------------------

  PushStatRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushStatRsp& from);
  void MergeFrom(const PushStatRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DidiPush.PushStat stats = 1;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 1;
  inline const ::DidiPush::PushStat& stats(int index) const;
  inline ::DidiPush::PushStat* mutable_stats(int index);
  inline ::DidiPush::PushStat* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PushStat >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PushStat >*
      mutable_stats();

  // @@protoc_insertion_point(class_scope:DidiPush.PushStatRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DidiPush::PushStat > stats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static PushStatRsp* default_instance_;
};
// -------------------------------------------------------------------

class StatLogReq : public ::google::protobuf::Message {
 public:
  StatLogReq();
  virtual ~StatLogReq();

  StatLogReq(const StatLogReq& from);

  inline StatLogReq& operator=(const StatLogReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatLogReq& default_instance();

  void Swap(StatLogReq* other);

  // implements Message ----------------------------------------------

  StatLogReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StatLogReq& from);
  void MergeFrom(const StatLogReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 event = 1;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 1;
  inline ::google::protobuf::uint32 event() const;
  inline void set_event(::google::protobuf::uint32 value);

  // required uint64 task_id = 2;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  inline ::google::protobuf::uint64 task_id() const;
  inline void set_task_id(::google::protobuf::uint64 value);

  // optional uint32 msg_type = 3;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_type() const;
  inline void set_msg_type(::google::protobuf::uint32 value);

  // optional uint64 gap_us = 4;
  inline bool has_gap_us() const;
  inline void clear_gap_us();
  static const int kGapUsFieldNumber = 4;
  inline ::google::protobuf::uint64 gap_us() const;
  inline void set_gap_us(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:DidiPush.StatLogReq)
 private:
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_gap_us();
  inline void clear_has_gap_us();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 task_id_;
  ::google::protobuf::uint32 event_;
  ::google::protobuf::uint32 msg_type_;
  ::google::protobuf::uint64 gap_us_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_didi_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_didi_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_didi_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StatLogReq* default_instance_;
};
// ===================================================================


// ===================================================================

// UserAgent

// optional string os_type = 1;
inline bool UserAgent::has_os_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserAgent::set_has_os_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserAgent::clear_has_os_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserAgent::clear_os_type() {
  if (os_type_ != &::google::protobuf::internal::kEmptyString) {
    os_type_->clear();
  }
  clear_has_os_type();
}
inline const ::std::string& UserAgent::os_type() const {
  return *os_type_;
}
inline void UserAgent::set_os_type(const ::std::string& value) {
  set_has_os_type();
  if (os_type_ == &::google::protobuf::internal::kEmptyString) {
    os_type_ = new ::std::string;
  }
  os_type_->assign(value);
}
inline void UserAgent::set_os_type(const char* value) {
  set_has_os_type();
  if (os_type_ == &::google::protobuf::internal::kEmptyString) {
    os_type_ = new ::std::string;
  }
  os_type_->assign(value);
}
inline void UserAgent::set_os_type(const char* value, size_t size) {
  set_has_os_type();
  if (os_type_ == &::google::protobuf::internal::kEmptyString) {
    os_type_ = new ::std::string;
  }
  os_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserAgent::mutable_os_type() {
  set_has_os_type();
  if (os_type_ == &::google::protobuf::internal::kEmptyString) {
    os_type_ = new ::std::string;
  }
  return os_type_;
}
inline ::std::string* UserAgent::release_os_type() {
  clear_has_os_type();
  if (os_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = os_type_;
    os_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserAgent::set_allocated_os_type(::std::string* os_type) {
  if (os_type_ != &::google::protobuf::internal::kEmptyString) {
    delete os_type_;
  }
  if (os_type) {
    set_has_os_type();
    os_type_ = os_type;
  } else {
    clear_has_os_type();
    os_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string os_ver = 2;
inline bool UserAgent::has_os_ver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserAgent::set_has_os_ver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserAgent::clear_has_os_ver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserAgent::clear_os_ver() {
  if (os_ver_ != &::google::protobuf::internal::kEmptyString) {
    os_ver_->clear();
  }
  clear_has_os_ver();
}
inline const ::std::string& UserAgent::os_ver() const {
  return *os_ver_;
}
inline void UserAgent::set_os_ver(const ::std::string& value) {
  set_has_os_ver();
  if (os_ver_ == &::google::protobuf::internal::kEmptyString) {
    os_ver_ = new ::std::string;
  }
  os_ver_->assign(value);
}
inline void UserAgent::set_os_ver(const char* value) {
  set_has_os_ver();
  if (os_ver_ == &::google::protobuf::internal::kEmptyString) {
    os_ver_ = new ::std::string;
  }
  os_ver_->assign(value);
}
inline void UserAgent::set_os_ver(const char* value, size_t size) {
  set_has_os_ver();
  if (os_ver_ == &::google::protobuf::internal::kEmptyString) {
    os_ver_ = new ::std::string;
  }
  os_ver_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserAgent::mutable_os_ver() {
  set_has_os_ver();
  if (os_ver_ == &::google::protobuf::internal::kEmptyString) {
    os_ver_ = new ::std::string;
  }
  return os_ver_;
}
inline ::std::string* UserAgent::release_os_ver() {
  clear_has_os_ver();
  if (os_ver_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = os_ver_;
    os_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserAgent::set_allocated_os_ver(::std::string* os_ver) {
  if (os_ver_ != &::google::protobuf::internal::kEmptyString) {
    delete os_ver_;
  }
  if (os_ver) {
    set_has_os_ver();
    os_ver_ = os_ver;
  } else {
    clear_has_os_ver();
    os_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string model = 3;
inline bool UserAgent::has_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserAgent::set_has_model() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserAgent::clear_has_model() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserAgent::clear_model() {
  if (model_ != &::google::protobuf::internal::kEmptyString) {
    model_->clear();
  }
  clear_has_model();
}
inline const ::std::string& UserAgent::model() const {
  return *model_;
}
inline void UserAgent::set_model(const ::std::string& value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void UserAgent::set_model(const char* value) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  model_->assign(value);
}
inline void UserAgent::set_model(const char* value, size_t size) {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserAgent::mutable_model() {
  set_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    model_ = new ::std::string;
  }
  return model_;
}
inline ::std::string* UserAgent::release_model() {
  clear_has_model();
  if (model_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = model_;
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserAgent::set_allocated_model(::std::string* model) {
  if (model_ != &::google::protobuf::internal::kEmptyString) {
    delete model_;
  }
  if (model) {
    set_has_model();
    model_ = model;
  } else {
    clear_has_model();
    model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string client_ver = 4;
inline bool UserAgent::has_client_ver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserAgent::set_has_client_ver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserAgent::clear_has_client_ver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserAgent::clear_client_ver() {
  if (client_ver_ != &::google::protobuf::internal::kEmptyString) {
    client_ver_->clear();
  }
  clear_has_client_ver();
}
inline const ::std::string& UserAgent::client_ver() const {
  return *client_ver_;
}
inline void UserAgent::set_client_ver(const ::std::string& value) {
  set_has_client_ver();
  if (client_ver_ == &::google::protobuf::internal::kEmptyString) {
    client_ver_ = new ::std::string;
  }
  client_ver_->assign(value);
}
inline void UserAgent::set_client_ver(const char* value) {
  set_has_client_ver();
  if (client_ver_ == &::google::protobuf::internal::kEmptyString) {
    client_ver_ = new ::std::string;
  }
  client_ver_->assign(value);
}
inline void UserAgent::set_client_ver(const char* value, size_t size) {
  set_has_client_ver();
  if (client_ver_ == &::google::protobuf::internal::kEmptyString) {
    client_ver_ = new ::std::string;
  }
  client_ver_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserAgent::mutable_client_ver() {
  set_has_client_ver();
  if (client_ver_ == &::google::protobuf::internal::kEmptyString) {
    client_ver_ = new ::std::string;
  }
  return client_ver_;
}
inline ::std::string* UserAgent::release_client_ver() {
  clear_has_client_ver();
  if (client_ver_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = client_ver_;
    client_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserAgent::set_allocated_client_ver(::std::string* client_ver) {
  if (client_ver_ != &::google::protobuf::internal::kEmptyString) {
    delete client_ver_;
  }
  if (client_ver) {
    set_has_client_ver();
    client_ver_ = client_ver;
  } else {
    clear_has_client_ver();
    client_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string network = 5;
inline bool UserAgent::has_network() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserAgent::set_has_network() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserAgent::clear_has_network() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserAgent::clear_network() {
  if (network_ != &::google::protobuf::internal::kEmptyString) {
    network_->clear();
  }
  clear_has_network();
}
inline const ::std::string& UserAgent::network() const {
  return *network_;
}
inline void UserAgent::set_network(const ::std::string& value) {
  set_has_network();
  if (network_ == &::google::protobuf::internal::kEmptyString) {
    network_ = new ::std::string;
  }
  network_->assign(value);
}
inline void UserAgent::set_network(const char* value) {
  set_has_network();
  if (network_ == &::google::protobuf::internal::kEmptyString) {
    network_ = new ::std::string;
  }
  network_->assign(value);
}
inline void UserAgent::set_network(const char* value, size_t size) {
  set_has_network();
  if (network_ == &::google::protobuf::internal::kEmptyString) {
    network_ = new ::std::string;
  }
  network_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserAgent::mutable_network() {
  set_has_network();
  if (network_ == &::google::protobuf::internal::kEmptyString) {
    network_ = new ::std::string;
  }
  return network_;
}
inline ::std::string* UserAgent::release_network() {
  clear_has_network();
  if (network_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = network_;
    network_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserAgent::set_allocated_network(::std::string* network) {
  if (network_ != &::google::protobuf::internal::kEmptyString) {
    delete network_;
  }
  if (network) {
    set_has_network();
    network_ = network;
  } else {
    clear_has_network();
    network_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string location = 6;
inline bool UserAgent::has_location() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserAgent::set_has_location() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserAgent::clear_has_location() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserAgent::clear_location() {
  if (location_ != &::google::protobuf::internal::kEmptyString) {
    location_->clear();
  }
  clear_has_location();
}
inline const ::std::string& UserAgent::location() const {
  return *location_;
}
inline void UserAgent::set_location(const ::std::string& value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  location_->assign(value);
}
inline void UserAgent::set_location(const char* value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  location_->assign(value);
}
inline void UserAgent::set_location(const char* value, size_t size) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  location_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserAgent::mutable_location() {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  return location_;
}
inline ::std::string* UserAgent::release_location() {
  clear_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = location_;
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserAgent::set_allocated_location(::std::string* location) {
  if (location_ != &::google::protobuf::internal::kEmptyString) {
    delete location_;
  }
  if (location) {
    set_has_location();
    location_ = location;
  } else {
    clear_has_location();
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string carrier_operator = 7;
inline bool UserAgent::has_carrier_operator() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserAgent::set_has_carrier_operator() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserAgent::clear_has_carrier_operator() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserAgent::clear_carrier_operator() {
  if (carrier_operator_ != &::google::protobuf::internal::kEmptyString) {
    carrier_operator_->clear();
  }
  clear_has_carrier_operator();
}
inline const ::std::string& UserAgent::carrier_operator() const {
  return *carrier_operator_;
}
inline void UserAgent::set_carrier_operator(const ::std::string& value) {
  set_has_carrier_operator();
  if (carrier_operator_ == &::google::protobuf::internal::kEmptyString) {
    carrier_operator_ = new ::std::string;
  }
  carrier_operator_->assign(value);
}
inline void UserAgent::set_carrier_operator(const char* value) {
  set_has_carrier_operator();
  if (carrier_operator_ == &::google::protobuf::internal::kEmptyString) {
    carrier_operator_ = new ::std::string;
  }
  carrier_operator_->assign(value);
}
inline void UserAgent::set_carrier_operator(const char* value, size_t size) {
  set_has_carrier_operator();
  if (carrier_operator_ == &::google::protobuf::internal::kEmptyString) {
    carrier_operator_ = new ::std::string;
  }
  carrier_operator_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserAgent::mutable_carrier_operator() {
  set_has_carrier_operator();
  if (carrier_operator_ == &::google::protobuf::internal::kEmptyString) {
    carrier_operator_ = new ::std::string;
  }
  return carrier_operator_;
}
inline ::std::string* UserAgent::release_carrier_operator() {
  clear_has_carrier_operator();
  if (carrier_operator_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = carrier_operator_;
    carrier_operator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UserAgent::set_allocated_carrier_operator(::std::string* carrier_operator) {
  if (carrier_operator_ != &::google::protobuf::internal::kEmptyString) {
    delete carrier_operator_;
  }
  if (carrier_operator) {
    set_has_carrier_operator();
    carrier_operator_ = carrier_operator;
  } else {
    clear_has_carrier_operator();
    carrier_operator_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Header

// required .DidiPush.MsgType type = 1;
inline bool Header::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Header::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Header::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Header::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::DidiPush::MsgType Header::type() const {
  return static_cast< ::DidiPush::MsgType >(type_);
}
inline void Header::set_type(::DidiPush::MsgType value) {
  assert(::DidiPush::MsgType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional uint64 msg_id = 2;
inline bool Header::has_msg_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Header::set_has_msg_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Header::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Header::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
  clear_has_msg_id();
}
inline ::google::protobuf::uint64 Header::msg_id() const {
  return msg_id_;
}
inline void Header::set_msg_id(::google::protobuf::uint64 value) {
  set_has_msg_id();
  msg_id_ = value;
}

// optional uint64 auth_user_id = 3;
inline bool Header::has_auth_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Header::set_has_auth_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Header::clear_has_auth_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Header::clear_auth_user_id() {
  auth_user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_auth_user_id();
}
inline ::google::protobuf::uint64 Header::auth_user_id() const {
  return auth_user_id_;
}
inline void Header::set_auth_user_id(::google::protobuf::uint64 value) {
  set_has_auth_user_id();
  auth_user_id_ = value;
}

// optional bytes log_id = 4;
inline bool Header::has_log_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Header::set_has_log_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Header::clear_has_log_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Header::clear_log_id() {
  if (log_id_ != &::google::protobuf::internal::kEmptyString) {
    log_id_->clear();
  }
  clear_has_log_id();
}
inline const ::std::string& Header::log_id() const {
  return *log_id_;
}
inline void Header::set_log_id(const ::std::string& value) {
  set_has_log_id();
  if (log_id_ == &::google::protobuf::internal::kEmptyString) {
    log_id_ = new ::std::string;
  }
  log_id_->assign(value);
}
inline void Header::set_log_id(const char* value) {
  set_has_log_id();
  if (log_id_ == &::google::protobuf::internal::kEmptyString) {
    log_id_ = new ::std::string;
  }
  log_id_->assign(value);
}
inline void Header::set_log_id(const void* value, size_t size) {
  set_has_log_id();
  if (log_id_ == &::google::protobuf::internal::kEmptyString) {
    log_id_ = new ::std::string;
  }
  log_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Header::mutable_log_id() {
  set_has_log_id();
  if (log_id_ == &::google::protobuf::internal::kEmptyString) {
    log_id_ = new ::std::string;
  }
  return log_id_;
}
inline ::std::string* Header::release_log_id() {
  clear_has_log_id();
  if (log_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = log_id_;
    log_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Header::set_allocated_log_id(::std::string* log_id) {
  if (log_id_ != &::google::protobuf::internal::kEmptyString) {
    delete log_id_;
  }
  if (log_id) {
    set_has_log_id();
    log_id_ = log_id;
  } else {
    clear_has_log_id();
    log_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .DidiPush.UserAgent user_agent = 5;
inline bool Header::has_user_agent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Header::set_has_user_agent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Header::clear_has_user_agent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Header::clear_user_agent() {
  if (user_agent_ != NULL) user_agent_->::DidiPush::UserAgent::Clear();
  clear_has_user_agent();
}
inline const ::DidiPush::UserAgent& Header::user_agent() const {
  return user_agent_ != NULL ? *user_agent_ : *default_instance_->user_agent_;
}
inline ::DidiPush::UserAgent* Header::mutable_user_agent() {
  set_has_user_agent();
  if (user_agent_ == NULL) user_agent_ = new ::DidiPush::UserAgent;
  return user_agent_;
}
inline ::DidiPush::UserAgent* Header::release_user_agent() {
  clear_has_user_agent();
  ::DidiPush::UserAgent* temp = user_agent_;
  user_agent_ = NULL;
  return temp;
}
inline void Header::set_allocated_user_agent(::DidiPush::UserAgent* user_agent) {
  delete user_agent_;
  user_agent_ = user_agent;
  if (user_agent) {
    set_has_user_agent();
  } else {
    clear_has_user_agent();
  }
}

// -------------------------------------------------------------------

// RspMsg

// required int32 rsp_code = 1;
inline bool RspMsg::has_rsp_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspMsg::set_has_rsp_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspMsg::clear_has_rsp_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspMsg::clear_rsp_code() {
  rsp_code_ = 0;
  clear_has_rsp_code();
}
inline ::google::protobuf::int32 RspMsg::rsp_code() const {
  return rsp_code_;
}
inline void RspMsg::set_rsp_code(::google::protobuf::int32 value) {
  set_has_rsp_code();
  rsp_code_ = value;
}

// optional string rsp_msg = 2;
inline bool RspMsg::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspMsg::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspMsg::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspMsg::clear_rsp_msg() {
  if (rsp_msg_ != &::google::protobuf::internal::kEmptyString) {
    rsp_msg_->clear();
  }
  clear_has_rsp_msg();
}
inline const ::std::string& RspMsg::rsp_msg() const {
  return *rsp_msg_;
}
inline void RspMsg::set_rsp_msg(const ::std::string& value) {
  set_has_rsp_msg();
  if (rsp_msg_ == &::google::protobuf::internal::kEmptyString) {
    rsp_msg_ = new ::std::string;
  }
  rsp_msg_->assign(value);
}
inline void RspMsg::set_rsp_msg(const char* value) {
  set_has_rsp_msg();
  if (rsp_msg_ == &::google::protobuf::internal::kEmptyString) {
    rsp_msg_ = new ::std::string;
  }
  rsp_msg_->assign(value);
}
inline void RspMsg::set_rsp_msg(const char* value, size_t size) {
  set_has_rsp_msg();
  if (rsp_msg_ == &::google::protobuf::internal::kEmptyString) {
    rsp_msg_ = new ::std::string;
  }
  rsp_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RspMsg::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == &::google::protobuf::internal::kEmptyString) {
    rsp_msg_ = new ::std::string;
  }
  return rsp_msg_;
}
inline ::std::string* RspMsg::release_rsp_msg() {
  clear_has_rsp_msg();
  if (rsp_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rsp_msg_;
    rsp_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RspMsg::set_allocated_rsp_msg(::std::string* rsp_msg) {
  if (rsp_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete rsp_msg_;
  }
  if (rsp_msg) {
    set_has_rsp_msg();
    rsp_msg_ = rsp_msg;
  } else {
    clear_has_rsp_msg();
    rsp_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// BinaryMsg

// required uint32 type = 1;
inline bool BinaryMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BinaryMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BinaryMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BinaryMsg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BinaryMsg::type() const {
  return type_;
}
inline void BinaryMsg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional bytes payload = 2;
inline bool BinaryMsg::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BinaryMsg::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BinaryMsg::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BinaryMsg::clear_payload() {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    payload_->clear();
  }
  clear_has_payload();
}
inline const ::std::string& BinaryMsg::payload() const {
  return *payload_;
}
inline void BinaryMsg::set_payload(const ::std::string& value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void BinaryMsg::set_payload(const char* value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void BinaryMsg::set_payload(const void* value, size_t size) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BinaryMsg::mutable_payload() {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  return payload_;
}
inline ::std::string* BinaryMsg::release_payload() {
  clear_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = payload_;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BinaryMsg::set_allocated_payload(::std::string* payload) {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    delete payload_;
  }
  if (payload) {
    set_has_payload();
    payload_ = payload;
  } else {
    clear_has_payload();
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// PushMsg

// required uint32 type = 1;
inline bool PushMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushMsg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PushMsg::type() const {
  return type_;
}
inline void PushMsg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional bytes payload = 2;
inline bool PushMsg::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushMsg::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushMsg::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushMsg::clear_payload() {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    payload_->clear();
  }
  clear_has_payload();
}
inline const ::std::string& PushMsg::payload() const {
  return *payload_;
}
inline void PushMsg::set_payload(const ::std::string& value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void PushMsg::set_payload(const char* value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void PushMsg::set_payload(const void* value, size_t size) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PushMsg::mutable_payload() {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  return payload_;
}
inline ::std::string* PushMsg::release_payload() {
  clear_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = payload_;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PushMsg::set_allocated_payload(::std::string* payload) {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    delete payload_;
  }
  if (payload) {
    set_has_payload();
    payload_ = payload;
  } else {
    clear_has_payload();
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 task_id = 3;
inline bool PushMsg::has_task_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PushMsg::set_has_task_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PushMsg::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PushMsg::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::uint64 PushMsg::task_id() const {
  return task_id_;
}
inline void PushMsg::set_task_id(::google::protobuf::uint64 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional bytes msg_id = 4;
inline bool PushMsg::has_msg_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PushMsg::set_has_msg_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PushMsg::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PushMsg::clear_msg_id() {
  if (msg_id_ != &::google::protobuf::internal::kEmptyString) {
    msg_id_->clear();
  }
  clear_has_msg_id();
}
inline const ::std::string& PushMsg::msg_id() const {
  return *msg_id_;
}
inline void PushMsg::set_msg_id(const ::std::string& value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::kEmptyString) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
}
inline void PushMsg::set_msg_id(const char* value) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::kEmptyString) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(value);
}
inline void PushMsg::set_msg_id(const void* value, size_t size) {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::kEmptyString) {
    msg_id_ = new ::std::string;
  }
  msg_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PushMsg::mutable_msg_id() {
  set_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::kEmptyString) {
    msg_id_ = new ::std::string;
  }
  return msg_id_;
}
inline ::std::string* PushMsg::release_msg_id() {
  clear_has_msg_id();
  if (msg_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_id_;
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PushMsg::set_allocated_msg_id(::std::string* msg_id) {
  if (msg_id_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_id_;
  }
  if (msg_id) {
    set_has_msg_id();
    msg_id_ = msg_id;
  } else {
    clear_has_msg_id();
    msg_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool need_rsp = 5;
inline bool PushMsg::has_need_rsp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PushMsg::set_has_need_rsp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PushMsg::clear_has_need_rsp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PushMsg::clear_need_rsp() {
  need_rsp_ = false;
  clear_has_need_rsp();
}
inline bool PushMsg::need_rsp() const {
  return need_rsp_;
}
inline void PushMsg::set_need_rsp(bool value) {
  set_has_need_rsp();
  need_rsp_ = value;
}

// -------------------------------------------------------------------

// ConnSvrConnectReq

// required string phone_num = 1;
inline bool ConnSvrConnectReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnSvrConnectReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnSvrConnectReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnSvrConnectReq::clear_phone_num() {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    phone_num_->clear();
  }
  clear_has_phone_num();
}
inline const ::std::string& ConnSvrConnectReq::phone_num() const {
  return *phone_num_;
}
inline void ConnSvrConnectReq::set_phone_num(const ::std::string& value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void ConnSvrConnectReq::set_phone_num(const char* value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void ConnSvrConnectReq::set_phone_num(const char* value, size_t size) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConnSvrConnectReq::mutable_phone_num() {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  return phone_num_;
}
inline ::std::string* ConnSvrConnectReq::release_phone_num() {
  clear_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_num_;
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConnSvrConnectReq::set_allocated_phone_num(::std::string* phone_num) {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_num_;
  }
  if (phone_num) {
    set_has_phone_num();
    phone_num_ = phone_num;
  } else {
    clear_has_phone_num();
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .DidiPush.OldRole old_role = 2;
inline bool ConnSvrConnectReq::has_old_role() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnSvrConnectReq::set_has_old_role() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnSvrConnectReq::clear_has_old_role() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnSvrConnectReq::clear_old_role() {
  old_role_ = 0;
  clear_has_old_role();
}
inline ::DidiPush::OldRole ConnSvrConnectReq::old_role() const {
  return static_cast< ::DidiPush::OldRole >(old_role_);
}
inline void ConnSvrConnectReq::set_old_role(::DidiPush::OldRole value) {
  assert(::DidiPush::OldRole_IsValid(value));
  set_has_old_role();
  old_role_ = value;
}

// required bytes secret_chap = 3;
inline bool ConnSvrConnectReq::has_secret_chap() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConnSvrConnectReq::set_has_secret_chap() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConnSvrConnectReq::clear_has_secret_chap() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConnSvrConnectReq::clear_secret_chap() {
  if (secret_chap_ != &::google::protobuf::internal::kEmptyString) {
    secret_chap_->clear();
  }
  clear_has_secret_chap();
}
inline const ::std::string& ConnSvrConnectReq::secret_chap() const {
  return *secret_chap_;
}
inline void ConnSvrConnectReq::set_secret_chap(const ::std::string& value) {
  set_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    secret_chap_ = new ::std::string;
  }
  secret_chap_->assign(value);
}
inline void ConnSvrConnectReq::set_secret_chap(const char* value) {
  set_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    secret_chap_ = new ::std::string;
  }
  secret_chap_->assign(value);
}
inline void ConnSvrConnectReq::set_secret_chap(const void* value, size_t size) {
  set_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    secret_chap_ = new ::std::string;
  }
  secret_chap_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConnSvrConnectReq::mutable_secret_chap() {
  set_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    secret_chap_ = new ::std::string;
  }
  return secret_chap_;
}
inline ::std::string* ConnSvrConnectReq::release_secret_chap() {
  clear_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = secret_chap_;
    secret_chap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConnSvrConnectReq::set_allocated_secret_chap(::std::string* secret_chap) {
  if (secret_chap_ != &::google::protobuf::internal::kEmptyString) {
    delete secret_chap_;
  }
  if (secret_chap) {
    set_has_secret_chap();
    secret_chap_ = secret_chap;
  } else {
    clear_has_secret_chap();
    secret_chap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes user_agent = 4;
inline bool ConnSvrConnectReq::has_user_agent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConnSvrConnectReq::set_has_user_agent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConnSvrConnectReq::clear_has_user_agent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConnSvrConnectReq::clear_user_agent() {
  if (user_agent_ != &::google::protobuf::internal::kEmptyString) {
    user_agent_->clear();
  }
  clear_has_user_agent();
}
inline const ::std::string& ConnSvrConnectReq::user_agent() const {
  return *user_agent_;
}
inline void ConnSvrConnectReq::set_user_agent(const ::std::string& value) {
  set_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::kEmptyString) {
    user_agent_ = new ::std::string;
  }
  user_agent_->assign(value);
}
inline void ConnSvrConnectReq::set_user_agent(const char* value) {
  set_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::kEmptyString) {
    user_agent_ = new ::std::string;
  }
  user_agent_->assign(value);
}
inline void ConnSvrConnectReq::set_user_agent(const void* value, size_t size) {
  set_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::kEmptyString) {
    user_agent_ = new ::std::string;
  }
  user_agent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConnSvrConnectReq::mutable_user_agent() {
  set_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::kEmptyString) {
    user_agent_ = new ::std::string;
  }
  return user_agent_;
}
inline ::std::string* ConnSvrConnectReq::release_user_agent() {
  clear_has_user_agent();
  if (user_agent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_agent_;
    user_agent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConnSvrConnectReq::set_allocated_user_agent(::std::string* user_agent) {
  if (user_agent_ != &::google::protobuf::internal::kEmptyString) {
    delete user_agent_;
  }
  if (user_agent) {
    set_has_user_agent();
    user_agent_ = user_agent;
  } else {
    clear_has_user_agent();
    user_agent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 role = 5;
inline bool ConnSvrConnectReq::has_role() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConnSvrConnectReq::set_has_role() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConnSvrConnectReq::clear_has_role() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConnSvrConnectReq::clear_role() {
  role_ = 0;
  clear_has_role();
}
inline ::google::protobuf::int32 ConnSvrConnectReq::role() const {
  return role_;
}
inline void ConnSvrConnectReq::set_role(::google::protobuf::int32 value) {
  set_has_role();
  role_ = value;
}

// -------------------------------------------------------------------

// ConnSvrConnectRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool ConnSvrConnectRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnSvrConnectRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnSvrConnectRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnSvrConnectRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& ConnSvrConnectRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnSvrConnectRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnSvrConnectRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void ConnSvrConnectRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// -------------------------------------------------------------------

// ConnSvrDisconnectReq

// -------------------------------------------------------------------

// ConnSvrHeartbeatReq

// -------------------------------------------------------------------

// ConnSvrGetOnlineReq

// -------------------------------------------------------------------

// ConnSvrGetOnlineRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool ConnSvrGetOnlineRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnSvrGetOnlineRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnSvrGetOnlineRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnSvrGetOnlineRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& ConnSvrGetOnlineRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnSvrGetOnlineRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnSvrGetOnlineRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void ConnSvrGetOnlineRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// repeated uint64 user_id = 2;
inline int ConnSvrGetOnlineRsp::user_id_size() const {
  return user_id_.size();
}
inline void ConnSvrGetOnlineRsp::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 ConnSvrGetOnlineRsp::user_id(int index) const {
  return user_id_.Get(index);
}
inline void ConnSvrGetOnlineRsp::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
}
inline void ConnSvrGetOnlineRsp::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ConnSvrGetOnlineRsp::user_id() const {
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ConnSvrGetOnlineRsp::mutable_user_id() {
  return &user_id_;
}

// -------------------------------------------------------------------

// ConnSvrGetOnlineCountReq

// -------------------------------------------------------------------

// ConnSvrGetOnlineCountRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool ConnSvrGetOnlineCountRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnSvrGetOnlineCountRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnSvrGetOnlineCountRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnSvrGetOnlineCountRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& ConnSvrGetOnlineCountRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnSvrGetOnlineCountRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnSvrGetOnlineCountRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void ConnSvrGetOnlineCountRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// required uint64 count = 2;
inline bool ConnSvrGetOnlineCountRsp::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnSvrGetOnlineCountRsp::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnSvrGetOnlineCountRsp::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnSvrGetOnlineCountRsp::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
  clear_has_count();
}
inline ::google::protobuf::uint64 ConnSvrGetOnlineCountRsp::count() const {
  return count_;
}
inline void ConnSvrGetOnlineCountRsp::set_count(::google::protobuf::uint64 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// ConnSvrGetIfOnlineReq

// repeated uint64 user_id = 1;
inline int ConnSvrGetIfOnlineReq::user_id_size() const {
  return user_id_.size();
}
inline void ConnSvrGetIfOnlineReq::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 ConnSvrGetIfOnlineReq::user_id(int index) const {
  return user_id_.Get(index);
}
inline void ConnSvrGetIfOnlineReq::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
}
inline void ConnSvrGetIfOnlineReq::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ConnSvrGetIfOnlineReq::user_id() const {
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ConnSvrGetIfOnlineReq::mutable_user_id() {
  return &user_id_;
}

// -------------------------------------------------------------------

// ConnSvrGetIfOnlineRsp

// repeated uint64 user_id = 1;
inline int ConnSvrGetIfOnlineRsp::user_id_size() const {
  return user_id_.size();
}
inline void ConnSvrGetIfOnlineRsp::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 ConnSvrGetIfOnlineRsp::user_id(int index) const {
  return user_id_.Get(index);
}
inline void ConnSvrGetIfOnlineRsp::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
}
inline void ConnSvrGetIfOnlineRsp::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ConnSvrGetIfOnlineRsp::user_id() const {
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ConnSvrGetIfOnlineRsp::mutable_user_id() {
  return &user_id_;
}

// -------------------------------------------------------------------

// ConnSvrKickNoRspReq

// optional uint64 timestamp = 1;
inline bool ConnSvrKickNoRspReq::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnSvrKickNoRspReq::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnSvrKickNoRspReq::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnSvrKickNoRspReq::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 ConnSvrKickNoRspReq::timestamp() const {
  return timestamp_;
}
inline void ConnSvrKickNoRspReq::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// -------------------------------------------------------------------

// Address

// required string ip = 1;
inline bool Address::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Address::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Address::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Address::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& Address::ip() const {
  return *ip_;
}
inline void Address::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void Address::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void Address::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Address::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* Address::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Address::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 port = 2;
inline bool Address::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Address::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Address::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Address::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 Address::port() const {
  return port_;
}
inline void Address::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// optional uint64 timestamp = 3 [default = 0];
inline bool Address::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Address::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Address::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Address::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 Address::timestamp() const {
  return timestamp_;
}
inline void Address::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional bool should_stat = 4 [default = false];
inline bool Address::has_should_stat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Address::set_has_should_stat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Address::clear_has_should_stat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Address::clear_should_stat() {
  should_stat_ = false;
  clear_has_should_stat();
}
inline bool Address::should_stat() const {
  return should_stat_;
}
inline void Address::set_should_stat(bool value) {
  set_has_should_stat();
  should_stat_ = value;
}

// -------------------------------------------------------------------

// ConnMasterKickReq

// required uint64 user_id = 1;
inline bool ConnMasterKickReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnMasterKickReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnMasterKickReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnMasterKickReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 ConnMasterKickReq::user_id() const {
  return user_id_;
}
inline void ConnMasterKickReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// ConnMasterKickRsp

// required int32 rc = 1;
inline bool ConnMasterKickRsp::has_rc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnMasterKickRsp::set_has_rc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnMasterKickRsp::clear_has_rc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnMasterKickRsp::clear_rc() {
  rc_ = 0;
  clear_has_rc();
}
inline ::google::protobuf::int32 ConnMasterKickRsp::rc() const {
  return rc_;
}
inline void ConnMasterKickRsp::set_rc(::google::protobuf::int32 value) {
  set_has_rc();
  rc_ = value;
}

// -------------------------------------------------------------------

// ConnMasterGetIfOnlineReq

// repeated uint64 user_id = 1;
inline int ConnMasterGetIfOnlineReq::user_id_size() const {
  return user_id_.size();
}
inline void ConnMasterGetIfOnlineReq::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 ConnMasterGetIfOnlineReq::user_id(int index) const {
  return user_id_.Get(index);
}
inline void ConnMasterGetIfOnlineReq::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
}
inline void ConnMasterGetIfOnlineReq::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ConnMasterGetIfOnlineReq::user_id() const {
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ConnMasterGetIfOnlineReq::mutable_user_id() {
  return &user_id_;
}

// -------------------------------------------------------------------

// ConnMasterGetIfOnlineRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool ConnMasterGetIfOnlineRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnMasterGetIfOnlineRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnMasterGetIfOnlineRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnMasterGetIfOnlineRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& ConnMasterGetIfOnlineRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnMasterGetIfOnlineRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnMasterGetIfOnlineRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void ConnMasterGetIfOnlineRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// repeated uint64 user_id = 2;
inline int ConnMasterGetIfOnlineRsp::user_id_size() const {
  return user_id_.size();
}
inline void ConnMasterGetIfOnlineRsp::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 ConnMasterGetIfOnlineRsp::user_id(int index) const {
  return user_id_.Get(index);
}
inline void ConnMasterGetIfOnlineRsp::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
}
inline void ConnMasterGetIfOnlineRsp::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ConnMasterGetIfOnlineRsp::user_id() const {
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ConnMasterGetIfOnlineRsp::mutable_user_id() {
  return &user_id_;
}

// -------------------------------------------------------------------

// ConnMasterGetRouteReq

// required uint64 user_id = 1;
inline bool ConnMasterGetRouteReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnMasterGetRouteReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnMasterGetRouteReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnMasterGetRouteReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 ConnMasterGetRouteReq::user_id() const {
  return user_id_;
}
inline void ConnMasterGetRouteReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// ConnMasterGetRouteRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool ConnMasterGetRouteRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnMasterGetRouteRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnMasterGetRouteRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnMasterGetRouteRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& ConnMasterGetRouteRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnMasterGetRouteRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnMasterGetRouteRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void ConnMasterGetRouteRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// optional .DidiPush.Address conn_svr = 2;
inline bool ConnMasterGetRouteRsp::has_conn_svr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnMasterGetRouteRsp::set_has_conn_svr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnMasterGetRouteRsp::clear_has_conn_svr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnMasterGetRouteRsp::clear_conn_svr() {
  if (conn_svr_ != NULL) conn_svr_->::DidiPush::Address::Clear();
  clear_has_conn_svr();
}
inline const ::DidiPush::Address& ConnMasterGetRouteRsp::conn_svr() const {
  return conn_svr_ != NULL ? *conn_svr_ : *default_instance_->conn_svr_;
}
inline ::DidiPush::Address* ConnMasterGetRouteRsp::mutable_conn_svr() {
  set_has_conn_svr();
  if (conn_svr_ == NULL) conn_svr_ = new ::DidiPush::Address;
  return conn_svr_;
}
inline ::DidiPush::Address* ConnMasterGetRouteRsp::release_conn_svr() {
  clear_has_conn_svr();
  ::DidiPush::Address* temp = conn_svr_;
  conn_svr_ = NULL;
  return temp;
}
inline void ConnMasterGetRouteRsp::set_allocated_conn_svr(::DidiPush::Address* conn_svr) {
  delete conn_svr_;
  conn_svr_ = conn_svr;
  if (conn_svr) {
    set_has_conn_svr();
  } else {
    clear_has_conn_svr();
  }
}

// -------------------------------------------------------------------

// ConnMasterDelRouteReq

// required uint64 user_id = 1;
inline bool ConnMasterDelRouteReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnMasterDelRouteReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnMasterDelRouteReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnMasterDelRouteReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 ConnMasterDelRouteReq::user_id() const {
  return user_id_;
}
inline void ConnMasterDelRouteReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint64 timestamp = 2 [default = 0];
inline bool ConnMasterDelRouteReq::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnMasterDelRouteReq::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnMasterDelRouteReq::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnMasterDelRouteReq::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 ConnMasterDelRouteReq::timestamp() const {
  return timestamp_;
}
inline void ConnMasterDelRouteReq::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// -------------------------------------------------------------------

// ConnMasterGetOnlineReq

// -------------------------------------------------------------------

// ConnMasterGetOnlineRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool ConnMasterGetOnlineRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnMasterGetOnlineRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnMasterGetOnlineRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnMasterGetOnlineRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& ConnMasterGetOnlineRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnMasterGetOnlineRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnMasterGetOnlineRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void ConnMasterGetOnlineRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// repeated uint64 user_id = 2;
inline int ConnMasterGetOnlineRsp::user_id_size() const {
  return user_id_.size();
}
inline void ConnMasterGetOnlineRsp::clear_user_id() {
  user_id_.Clear();
}
inline ::google::protobuf::uint64 ConnMasterGetOnlineRsp::user_id(int index) const {
  return user_id_.Get(index);
}
inline void ConnMasterGetOnlineRsp::set_user_id(int index, ::google::protobuf::uint64 value) {
  user_id_.Set(index, value);
}
inline void ConnMasterGetOnlineRsp::add_user_id(::google::protobuf::uint64 value) {
  user_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ConnMasterGetOnlineRsp::user_id() const {
  return user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ConnMasterGetOnlineRsp::mutable_user_id() {
  return &user_id_;
}

// -------------------------------------------------------------------

// ConnMasterGetOnlineCountReq

// -------------------------------------------------------------------

// ConnMasterGetOnlineCountRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool ConnMasterGetOnlineCountRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnMasterGetOnlineCountRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnMasterGetOnlineCountRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnMasterGetOnlineCountRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& ConnMasterGetOnlineCountRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnMasterGetOnlineCountRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* ConnMasterGetOnlineCountRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void ConnMasterGetOnlineCountRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// required uint64 count = 2;
inline bool ConnMasterGetOnlineCountRsp::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConnMasterGetOnlineCountRsp::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConnMasterGetOnlineCountRsp::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConnMasterGetOnlineCountRsp::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
  clear_has_count();
}
inline ::google::protobuf::uint64 ConnMasterGetOnlineCountRsp::count() const {
  return count_;
}
inline void ConnMasterGetOnlineCountRsp::set_count(::google::protobuf::uint64 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// AuthSvrAddUserReq

// required uint64 user_id = 1;
inline bool AuthSvrAddUserReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthSvrAddUserReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthSvrAddUserReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthSvrAddUserReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AuthSvrAddUserReq::user_id() const {
  return user_id_;
}
inline void AuthSvrAddUserReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// required bytes token = 2;
inline bool AuthSvrAddUserReq::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthSvrAddUserReq::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthSvrAddUserReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthSvrAddUserReq::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& AuthSvrAddUserReq::token() const {
  return *token_;
}
inline void AuthSvrAddUserReq::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void AuthSvrAddUserReq::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void AuthSvrAddUserReq::set_token(const void* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthSvrAddUserReq::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* AuthSvrAddUserReq::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AuthSvrAddUserReq::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string phone_num = 3;
inline bool AuthSvrAddUserReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthSvrAddUserReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthSvrAddUserReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthSvrAddUserReq::clear_phone_num() {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    phone_num_->clear();
  }
  clear_has_phone_num();
}
inline const ::std::string& AuthSvrAddUserReq::phone_num() const {
  return *phone_num_;
}
inline void AuthSvrAddUserReq::set_phone_num(const ::std::string& value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void AuthSvrAddUserReq::set_phone_num(const char* value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void AuthSvrAddUserReq::set_phone_num(const char* value, size_t size) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthSvrAddUserReq::mutable_phone_num() {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  return phone_num_;
}
inline ::std::string* AuthSvrAddUserReq::release_phone_num() {
  clear_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_num_;
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AuthSvrAddUserReq::set_allocated_phone_num(::std::string* phone_num) {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_num_;
  }
  if (phone_num) {
    set_has_phone_num();
    phone_num_ = phone_num;
  } else {
    clear_has_phone_num();
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AuthSvrDelUserReq

// required uint64 user_id = 1;
inline bool AuthSvrDelUserReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthSvrDelUserReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthSvrDelUserReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthSvrDelUserReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AuthSvrDelUserReq::user_id() const {
  return user_id_;
}
inline void AuthSvrDelUserReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// AuthSvrLoginReq

// required string phone_num = 1;
inline bool AuthSvrLoginReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthSvrLoginReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthSvrLoginReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthSvrLoginReq::clear_phone_num() {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    phone_num_->clear();
  }
  clear_has_phone_num();
}
inline const ::std::string& AuthSvrLoginReq::phone_num() const {
  return *phone_num_;
}
inline void AuthSvrLoginReq::set_phone_num(const ::std::string& value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void AuthSvrLoginReq::set_phone_num(const char* value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void AuthSvrLoginReq::set_phone_num(const char* value, size_t size) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthSvrLoginReq::mutable_phone_num() {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  return phone_num_;
}
inline ::std::string* AuthSvrLoginReq::release_phone_num() {
  clear_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_num_;
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AuthSvrLoginReq::set_allocated_phone_num(::std::string* phone_num) {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_num_;
  }
  if (phone_num) {
    set_has_phone_num();
    phone_num_ = phone_num;
  } else {
    clear_has_phone_num();
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes secret_chap = 3;
inline bool AuthSvrLoginReq::has_secret_chap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthSvrLoginReq::set_has_secret_chap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthSvrLoginReq::clear_has_secret_chap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthSvrLoginReq::clear_secret_chap() {
  if (secret_chap_ != &::google::protobuf::internal::kEmptyString) {
    secret_chap_->clear();
  }
  clear_has_secret_chap();
}
inline const ::std::string& AuthSvrLoginReq::secret_chap() const {
  return *secret_chap_;
}
inline void AuthSvrLoginReq::set_secret_chap(const ::std::string& value) {
  set_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    secret_chap_ = new ::std::string;
  }
  secret_chap_->assign(value);
}
inline void AuthSvrLoginReq::set_secret_chap(const char* value) {
  set_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    secret_chap_ = new ::std::string;
  }
  secret_chap_->assign(value);
}
inline void AuthSvrLoginReq::set_secret_chap(const void* value, size_t size) {
  set_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    secret_chap_ = new ::std::string;
  }
  secret_chap_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthSvrLoginReq::mutable_secret_chap() {
  set_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    secret_chap_ = new ::std::string;
  }
  return secret_chap_;
}
inline ::std::string* AuthSvrLoginReq::release_secret_chap() {
  clear_has_secret_chap();
  if (secret_chap_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = secret_chap_;
    secret_chap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AuthSvrLoginReq::set_allocated_secret_chap(::std::string* secret_chap) {
  if (secret_chap_ != &::google::protobuf::internal::kEmptyString) {
    delete secret_chap_;
  }
  if (secret_chap) {
    set_has_secret_chap();
    secret_chap_ = secret_chap;
  } else {
    clear_has_secret_chap();
    secret_chap_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes random_msg = 4;
inline bool AuthSvrLoginReq::has_random_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthSvrLoginReq::set_has_random_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthSvrLoginReq::clear_has_random_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthSvrLoginReq::clear_random_msg() {
  if (random_msg_ != &::google::protobuf::internal::kEmptyString) {
    random_msg_->clear();
  }
  clear_has_random_msg();
}
inline const ::std::string& AuthSvrLoginReq::random_msg() const {
  return *random_msg_;
}
inline void AuthSvrLoginReq::set_random_msg(const ::std::string& value) {
  set_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    random_msg_ = new ::std::string;
  }
  random_msg_->assign(value);
}
inline void AuthSvrLoginReq::set_random_msg(const char* value) {
  set_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    random_msg_ = new ::std::string;
  }
  random_msg_->assign(value);
}
inline void AuthSvrLoginReq::set_random_msg(const void* value, size_t size) {
  set_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    random_msg_ = new ::std::string;
  }
  random_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthSvrLoginReq::mutable_random_msg() {
  set_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    random_msg_ = new ::std::string;
  }
  return random_msg_;
}
inline ::std::string* AuthSvrLoginReq::release_random_msg() {
  clear_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = random_msg_;
    random_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AuthSvrLoginReq::set_allocated_random_msg(::std::string* random_msg) {
  if (random_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete random_msg_;
  }
  if (random_msg) {
    set_has_random_msg();
    random_msg_ = random_msg;
  } else {
    clear_has_random_msg();
    random_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 role = 5;
inline bool AuthSvrLoginReq::has_role() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuthSvrLoginReq::set_has_role() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuthSvrLoginReq::clear_has_role() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuthSvrLoginReq::clear_role() {
  role_ = 0;
  clear_has_role();
}
inline ::google::protobuf::int32 AuthSvrLoginReq::role() const {
  return role_;
}
inline void AuthSvrLoginReq::set_role(::google::protobuf::int32 value) {
  set_has_role();
  role_ = value;
}

// -------------------------------------------------------------------

// AuthSvrLoginRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool AuthSvrLoginRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthSvrLoginRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthSvrLoginRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthSvrLoginRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& AuthSvrLoginRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* AuthSvrLoginRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* AuthSvrLoginRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void AuthSvrLoginRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// required uint64 user_id = 2;
inline bool AuthSvrLoginRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthSvrLoginRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthSvrLoginRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthSvrLoginRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AuthSvrLoginRsp::user_id() const {
  return user_id_;
}
inline void AuthSvrLoginRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// AuthSvrQueryUserReq

// required string phone_num = 1;
inline bool AuthSvrQueryUserReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthSvrQueryUserReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthSvrQueryUserReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthSvrQueryUserReq::clear_phone_num() {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    phone_num_->clear();
  }
  clear_has_phone_num();
}
inline const ::std::string& AuthSvrQueryUserReq::phone_num() const {
  return *phone_num_;
}
inline void AuthSvrQueryUserReq::set_phone_num(const ::std::string& value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void AuthSvrQueryUserReq::set_phone_num(const char* value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void AuthSvrQueryUserReq::set_phone_num(const char* value, size_t size) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthSvrQueryUserReq::mutable_phone_num() {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  return phone_num_;
}
inline ::std::string* AuthSvrQueryUserReq::release_phone_num() {
  clear_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_num_;
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AuthSvrQueryUserReq::set_allocated_phone_num(::std::string* phone_num) {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_num_;
  }
  if (phone_num) {
    set_has_phone_num();
    phone_num_ = phone_num;
  } else {
    clear_has_phone_num();
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 role = 3;
inline bool AuthSvrQueryUserReq::has_role() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthSvrQueryUserReq::set_has_role() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthSvrQueryUserReq::clear_has_role() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthSvrQueryUserReq::clear_role() {
  role_ = 0;
  clear_has_role();
}
inline ::google::protobuf::int32 AuthSvrQueryUserReq::role() const {
  return role_;
}
inline void AuthSvrQueryUserReq::set_role(::google::protobuf::int32 value) {
  set_has_role();
  role_ = value;
}

// -------------------------------------------------------------------

// AuthSvrQueryUserRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool AuthSvrQueryUserRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthSvrQueryUserRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthSvrQueryUserRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthSvrQueryUserRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& AuthSvrQueryUserRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* AuthSvrQueryUserRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* AuthSvrQueryUserRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void AuthSvrQueryUserRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// optional uint64 user_id = 2;
inline bool AuthSvrQueryUserRsp::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthSvrQueryUserRsp::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthSvrQueryUserRsp::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthSvrQueryUserRsp::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 AuthSvrQueryUserRsp::user_id() const {
  return user_id_;
}
inline void AuthSvrQueryUserRsp::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// AuthSvrSignReq

// required bytes content = 1;
inline bool AuthSvrSignReq::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthSvrSignReq::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthSvrSignReq::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthSvrSignReq::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& AuthSvrSignReq::content() const {
  return *content_;
}
inline void AuthSvrSignReq::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void AuthSvrSignReq::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void AuthSvrSignReq::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthSvrSignReq::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* AuthSvrSignReq::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AuthSvrSignReq::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AuthSvrSignRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool AuthSvrSignRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthSvrSignRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthSvrSignRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthSvrSignRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& AuthSvrSignRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* AuthSvrSignRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* AuthSvrSignRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void AuthSvrSignRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// optional string hmac = 2;
inline bool AuthSvrSignRsp::has_hmac() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthSvrSignRsp::set_has_hmac() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthSvrSignRsp::clear_has_hmac() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthSvrSignRsp::clear_hmac() {
  if (hmac_ != &::google::protobuf::internal::kEmptyString) {
    hmac_->clear();
  }
  clear_has_hmac();
}
inline const ::std::string& AuthSvrSignRsp::hmac() const {
  return *hmac_;
}
inline void AuthSvrSignRsp::set_hmac(const ::std::string& value) {
  set_has_hmac();
  if (hmac_ == &::google::protobuf::internal::kEmptyString) {
    hmac_ = new ::std::string;
  }
  hmac_->assign(value);
}
inline void AuthSvrSignRsp::set_hmac(const char* value) {
  set_has_hmac();
  if (hmac_ == &::google::protobuf::internal::kEmptyString) {
    hmac_ = new ::std::string;
  }
  hmac_->assign(value);
}
inline void AuthSvrSignRsp::set_hmac(const char* value, size_t size) {
  set_has_hmac();
  if (hmac_ == &::google::protobuf::internal::kEmptyString) {
    hmac_ = new ::std::string;
  }
  hmac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuthSvrSignRsp::mutable_hmac() {
  set_has_hmac();
  if (hmac_ == &::google::protobuf::internal::kEmptyString) {
    hmac_ = new ::std::string;
  }
  return hmac_;
}
inline ::std::string* AuthSvrSignRsp::release_hmac() {
  clear_has_hmac();
  if (hmac_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hmac_;
    hmac_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AuthSvrSignRsp::set_allocated_hmac(::std::string* hmac) {
  if (hmac_ != &::google::protobuf::internal::kEmptyString) {
    delete hmac_;
  }
  if (hmac) {
    set_has_hmac();
    hmac_ = hmac;
  } else {
    clear_has_hmac();
    hmac_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Coordinate

// required double x = 1;
inline bool Coordinate::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Coordinate::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Coordinate::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Coordinate::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double Coordinate::x() const {
  return x_;
}
inline void Coordinate::set_x(double value) {
  set_has_x();
  x_ = value;
}

// required double y = 2;
inline bool Coordinate::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Coordinate::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Coordinate::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Coordinate::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double Coordinate::y() const {
  return y_;
}
inline void Coordinate::set_y(double value) {
  set_has_y();
  y_ = value;
}

// required .DidiPush.CoordinateType type = 3;
inline bool Coordinate::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Coordinate::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Coordinate::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Coordinate::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::DidiPush::CoordinateType Coordinate::type() const {
  return static_cast< ::DidiPush::CoordinateType >(type_);
}
inline void Coordinate::set_type(::DidiPush::CoordinateType value) {
  assert(::DidiPush::CoordinateType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional uint32 timestamp = 4;
inline bool Coordinate::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Coordinate::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Coordinate::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Coordinate::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 Coordinate::timestamp() const {
  return timestamp_;
}
inline void Coordinate::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional double dx = 5;
inline bool Coordinate::has_dx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Coordinate::set_has_dx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Coordinate::clear_has_dx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Coordinate::clear_dx() {
  dx_ = 0;
  clear_has_dx();
}
inline double Coordinate::dx() const {
  return dx_;
}
inline void Coordinate::set_dx(double value) {
  set_has_dx();
  dx_ = value;
}

// optional double dy = 6;
inline bool Coordinate::has_dy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Coordinate::set_has_dy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Coordinate::clear_has_dy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Coordinate::clear_dy() {
  dy_ = 0;
  clear_has_dy();
}
inline double Coordinate::dy() const {
  return dy_;
}
inline void Coordinate::set_dy(double value) {
  set_has_dy();
  dy_ = value;
}

// -------------------------------------------------------------------

// CdntSvrUpReq

// required double x = 1;
inline bool CdntSvrUpReq::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CdntSvrUpReq::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CdntSvrUpReq::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CdntSvrUpReq::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double CdntSvrUpReq::x() const {
  return x_;
}
inline void CdntSvrUpReq::set_x(double value) {
  set_has_x();
  x_ = value;
}

// required double y = 2;
inline bool CdntSvrUpReq::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CdntSvrUpReq::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CdntSvrUpReq::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CdntSvrUpReq::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double CdntSvrUpReq::y() const {
  return y_;
}
inline void CdntSvrUpReq::set_y(double value) {
  set_has_y();
  y_ = value;
}

// required .DidiPush.CoordinateType type = 3;
inline bool CdntSvrUpReq::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CdntSvrUpReq::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CdntSvrUpReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CdntSvrUpReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::DidiPush::CoordinateType CdntSvrUpReq::type() const {
  return static_cast< ::DidiPush::CoordinateType >(type_);
}
inline void CdntSvrUpReq::set_type(::DidiPush::CoordinateType value) {
  assert(::DidiPush::CoordinateType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional uint32 timestamp = 4;
inline bool CdntSvrUpReq::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CdntSvrUpReq::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CdntSvrUpReq::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CdntSvrUpReq::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CdntSvrUpReq::timestamp() const {
  return timestamp_;
}
inline void CdntSvrUpReq::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional bool pull_peer = 5;
inline bool CdntSvrUpReq::has_pull_peer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CdntSvrUpReq::set_has_pull_peer() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CdntSvrUpReq::clear_has_pull_peer() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CdntSvrUpReq::clear_pull_peer() {
  pull_peer_ = false;
  clear_has_pull_peer();
}
inline bool CdntSvrUpReq::pull_peer() const {
  return pull_peer_;
}
inline void CdntSvrUpReq::set_pull_peer(bool value) {
  set_has_pull_peer();
  pull_peer_ = value;
}

// optional double dx = 6;
inline bool CdntSvrUpReq::has_dx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CdntSvrUpReq::set_has_dx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CdntSvrUpReq::clear_has_dx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CdntSvrUpReq::clear_dx() {
  dx_ = 0;
  clear_has_dx();
}
inline double CdntSvrUpReq::dx() const {
  return dx_;
}
inline void CdntSvrUpReq::set_dx(double value) {
  set_has_dx();
  dx_ = value;
}

// optional double dy = 7;
inline bool CdntSvrUpReq::has_dy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CdntSvrUpReq::set_has_dy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CdntSvrUpReq::clear_has_dy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CdntSvrUpReq::clear_dy() {
  dy_ = 0;
  clear_has_dy();
}
inline double CdntSvrUpReq::dy() const {
  return dy_;
}
inline void CdntSvrUpReq::set_dy(double value) {
  set_has_dy();
  dy_ = value;
}

// -------------------------------------------------------------------

// PeerCoordinateInfo

// required string local_id = 1;
inline bool PeerCoordinateInfo::has_local_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PeerCoordinateInfo::set_has_local_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PeerCoordinateInfo::clear_has_local_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PeerCoordinateInfo::clear_local_id() {
  if (local_id_ != &::google::protobuf::internal::kEmptyString) {
    local_id_->clear();
  }
  clear_has_local_id();
}
inline const ::std::string& PeerCoordinateInfo::local_id() const {
  return *local_id_;
}
inline void PeerCoordinateInfo::set_local_id(const ::std::string& value) {
  set_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    local_id_ = new ::std::string;
  }
  local_id_->assign(value);
}
inline void PeerCoordinateInfo::set_local_id(const char* value) {
  set_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    local_id_ = new ::std::string;
  }
  local_id_->assign(value);
}
inline void PeerCoordinateInfo::set_local_id(const char* value, size_t size) {
  set_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    local_id_ = new ::std::string;
  }
  local_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PeerCoordinateInfo::mutable_local_id() {
  set_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    local_id_ = new ::std::string;
  }
  return local_id_;
}
inline ::std::string* PeerCoordinateInfo::release_local_id() {
  clear_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = local_id_;
    local_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PeerCoordinateInfo::set_allocated_local_id(::std::string* local_id) {
  if (local_id_ != &::google::protobuf::internal::kEmptyString) {
    delete local_id_;
  }
  if (local_id) {
    set_has_local_id();
    local_id_ = local_id;
  } else {
    clear_has_local_id();
    local_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .DidiPush.Coordinate coordinate = 2;
inline bool PeerCoordinateInfo::has_coordinate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PeerCoordinateInfo::set_has_coordinate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PeerCoordinateInfo::clear_has_coordinate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PeerCoordinateInfo::clear_coordinate() {
  if (coordinate_ != NULL) coordinate_->::DidiPush::Coordinate::Clear();
  clear_has_coordinate();
}
inline const ::DidiPush::Coordinate& PeerCoordinateInfo::coordinate() const {
  return coordinate_ != NULL ? *coordinate_ : *default_instance_->coordinate_;
}
inline ::DidiPush::Coordinate* PeerCoordinateInfo::mutable_coordinate() {
  set_has_coordinate();
  if (coordinate_ == NULL) coordinate_ = new ::DidiPush::Coordinate;
  return coordinate_;
}
inline ::DidiPush::Coordinate* PeerCoordinateInfo::release_coordinate() {
  clear_has_coordinate();
  ::DidiPush::Coordinate* temp = coordinate_;
  coordinate_ = NULL;
  return temp;
}
inline void PeerCoordinateInfo::set_allocated_coordinate(::DidiPush::Coordinate* coordinate) {
  delete coordinate_;
  coordinate_ = coordinate;
  if (coordinate) {
    set_has_coordinate();
  } else {
    clear_has_coordinate();
  }
}

// required uint32 distance = 3;
inline bool PeerCoordinateInfo::has_distance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PeerCoordinateInfo::set_has_distance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PeerCoordinateInfo::clear_has_distance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PeerCoordinateInfo::clear_distance() {
  distance_ = 0u;
  clear_has_distance();
}
inline ::google::protobuf::uint32 PeerCoordinateInfo::distance() const {
  return distance_;
}
inline void PeerCoordinateInfo::set_distance(::google::protobuf::uint32 value) {
  set_has_distance();
  distance_ = value;
}

// required uint32 wait_time = 4;
inline bool PeerCoordinateInfo::has_wait_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PeerCoordinateInfo::set_has_wait_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PeerCoordinateInfo::clear_has_wait_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PeerCoordinateInfo::clear_wait_time() {
  wait_time_ = 0u;
  clear_has_wait_time();
}
inline ::google::protobuf::uint32 PeerCoordinateInfo::wait_time() const {
  return wait_time_;
}
inline void PeerCoordinateInfo::set_wait_time(::google::protobuf::uint32 value) {
  set_has_wait_time();
  wait_time_ = value;
}

// optional bool is_arrived_limited = 5;
inline bool PeerCoordinateInfo::has_is_arrived_limited() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PeerCoordinateInfo::set_has_is_arrived_limited() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PeerCoordinateInfo::clear_has_is_arrived_limited() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PeerCoordinateInfo::clear_is_arrived_limited() {
  is_arrived_limited_ = false;
  clear_has_is_arrived_limited();
}
inline bool PeerCoordinateInfo::is_arrived_limited() const {
  return is_arrived_limited_;
}
inline void PeerCoordinateInfo::set_is_arrived_limited(bool value) {
  set_has_is_arrived_limited();
  is_arrived_limited_ = value;
}

// -------------------------------------------------------------------

// PeerCoordinateRelation

// required string local_id = 1;
inline bool PeerCoordinateRelation::has_local_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PeerCoordinateRelation::set_has_local_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PeerCoordinateRelation::clear_has_local_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PeerCoordinateRelation::clear_local_id() {
  if (local_id_ != &::google::protobuf::internal::kEmptyString) {
    local_id_->clear();
  }
  clear_has_local_id();
}
inline const ::std::string& PeerCoordinateRelation::local_id() const {
  return *local_id_;
}
inline void PeerCoordinateRelation::set_local_id(const ::std::string& value) {
  set_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    local_id_ = new ::std::string;
  }
  local_id_->assign(value);
}
inline void PeerCoordinateRelation::set_local_id(const char* value) {
  set_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    local_id_ = new ::std::string;
  }
  local_id_->assign(value);
}
inline void PeerCoordinateRelation::set_local_id(const char* value, size_t size) {
  set_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    local_id_ = new ::std::string;
  }
  local_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PeerCoordinateRelation::mutable_local_id() {
  set_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    local_id_ = new ::std::string;
  }
  return local_id_;
}
inline ::std::string* PeerCoordinateRelation::release_local_id() {
  clear_has_local_id();
  if (local_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = local_id_;
    local_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PeerCoordinateRelation::set_allocated_local_id(::std::string* local_id) {
  if (local_id_ != &::google::protobuf::internal::kEmptyString) {
    delete local_id_;
  }
  if (local_id) {
    set_has_local_id();
    local_id_ = local_id;
  } else {
    clear_has_local_id();
    local_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint64 user_id = 2;
inline bool PeerCoordinateRelation::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PeerCoordinateRelation::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PeerCoordinateRelation::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PeerCoordinateRelation::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 PeerCoordinateRelation::user_id() const {
  return user_id_;
}
inline void PeerCoordinateRelation::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// required uint32 inactive_expire_seconds = 3;
inline bool PeerCoordinateRelation::has_inactive_expire_seconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PeerCoordinateRelation::set_has_inactive_expire_seconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PeerCoordinateRelation::clear_has_inactive_expire_seconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PeerCoordinateRelation::clear_inactive_expire_seconds() {
  inactive_expire_seconds_ = 0u;
  clear_has_inactive_expire_seconds();
}
inline ::google::protobuf::uint32 PeerCoordinateRelation::inactive_expire_seconds() const {
  return inactive_expire_seconds_;
}
inline void PeerCoordinateRelation::set_inactive_expire_seconds(::google::protobuf::uint32 value) {
  set_has_inactive_expire_seconds();
  inactive_expire_seconds_ = value;
}

// optional uint32 last_active_timestamp = 4;
inline bool PeerCoordinateRelation::has_last_active_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PeerCoordinateRelation::set_has_last_active_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PeerCoordinateRelation::clear_has_last_active_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PeerCoordinateRelation::clear_last_active_timestamp() {
  last_active_timestamp_ = 0u;
  clear_has_last_active_timestamp();
}
inline ::google::protobuf::uint32 PeerCoordinateRelation::last_active_timestamp() const {
  return last_active_timestamp_;
}
inline void PeerCoordinateRelation::set_last_active_timestamp(::google::protobuf::uint32 value) {
  set_has_last_active_timestamp();
  last_active_timestamp_ = value;
}

// optional uint32 create_time = 5;
inline bool PeerCoordinateRelation::has_create_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PeerCoordinateRelation::set_has_create_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PeerCoordinateRelation::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PeerCoordinateRelation::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 PeerCoordinateRelation::create_time() const {
  return create_time_;
}
inline void PeerCoordinateRelation::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional .DidiPush.RelationType type = 6;
inline bool PeerCoordinateRelation::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PeerCoordinateRelation::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PeerCoordinateRelation::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PeerCoordinateRelation::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::DidiPush::RelationType PeerCoordinateRelation::type() const {
  return static_cast< ::DidiPush::RelationType >(type_);
}
inline void PeerCoordinateRelation::set_type(::DidiPush::RelationType value) {
  assert(::DidiPush::RelationType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional uint32 biz_type = 7;
inline bool PeerCoordinateRelation::has_biz_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PeerCoordinateRelation::set_has_biz_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PeerCoordinateRelation::clear_has_biz_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PeerCoordinateRelation::clear_biz_type() {
  biz_type_ = 0u;
  clear_has_biz_type();
}
inline ::google::protobuf::uint32 PeerCoordinateRelation::biz_type() const {
  return biz_type_;
}
inline void PeerCoordinateRelation::set_biz_type(::google::protobuf::uint32 value) {
  set_has_biz_type();
  biz_type_ = value;
}

// -------------------------------------------------------------------

// CdntSvrSetRelationReq

// required uint64 user_id = 1;
inline bool CdntSvrSetRelationReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CdntSvrSetRelationReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CdntSvrSetRelationReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CdntSvrSetRelationReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 CdntSvrSetRelationReq::user_id() const {
  return user_id_;
}
inline void CdntSvrSetRelationReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// repeated .DidiPush.PeerCoordinateRelation relations = 2;
inline int CdntSvrSetRelationReq::relations_size() const {
  return relations_.size();
}
inline void CdntSvrSetRelationReq::clear_relations() {
  relations_.Clear();
}
inline const ::DidiPush::PeerCoordinateRelation& CdntSvrSetRelationReq::relations(int index) const {
  return relations_.Get(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrSetRelationReq::mutable_relations(int index) {
  return relations_.Mutable(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrSetRelationReq::add_relations() {
  return relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
CdntSvrSetRelationReq::relations() const {
  return relations_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
CdntSvrSetRelationReq::mutable_relations() {
  return &relations_;
}

// optional .DidiPush.CoordinateType type = 3;
inline bool CdntSvrSetRelationReq::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CdntSvrSetRelationReq::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CdntSvrSetRelationReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CdntSvrSetRelationReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::DidiPush::CoordinateType CdntSvrSetRelationReq::type() const {
  return static_cast< ::DidiPush::CoordinateType >(type_);
}
inline void CdntSvrSetRelationReq::set_type(::DidiPush::CoordinateType value) {
  assert(::DidiPush::CoordinateType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CdntSvrSetRelationRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool CdntSvrSetRelationRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CdntSvrSetRelationRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CdntSvrSetRelationRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CdntSvrSetRelationRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& CdntSvrSetRelationRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* CdntSvrSetRelationRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* CdntSvrSetRelationRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void CdntSvrSetRelationRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// repeated .DidiPush.PeerCoordinateRelation relations = 2;
inline int CdntSvrSetRelationRsp::relations_size() const {
  return relations_.size();
}
inline void CdntSvrSetRelationRsp::clear_relations() {
  relations_.Clear();
}
inline const ::DidiPush::PeerCoordinateRelation& CdntSvrSetRelationRsp::relations(int index) const {
  return relations_.Get(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrSetRelationRsp::mutable_relations(int index) {
  return relations_.Mutable(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrSetRelationRsp::add_relations() {
  return relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
CdntSvrSetRelationRsp::relations() const {
  return relations_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
CdntSvrSetRelationRsp::mutable_relations() {
  return &relations_;
}

// -------------------------------------------------------------------

// CdntSvrAddRelationReq

// required uint64 user_id = 1;
inline bool CdntSvrAddRelationReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CdntSvrAddRelationReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CdntSvrAddRelationReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CdntSvrAddRelationReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 CdntSvrAddRelationReq::user_id() const {
  return user_id_;
}
inline void CdntSvrAddRelationReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// repeated .DidiPush.PeerCoordinateRelation relations = 2;
inline int CdntSvrAddRelationReq::relations_size() const {
  return relations_.size();
}
inline void CdntSvrAddRelationReq::clear_relations() {
  relations_.Clear();
}
inline const ::DidiPush::PeerCoordinateRelation& CdntSvrAddRelationReq::relations(int index) const {
  return relations_.Get(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrAddRelationReq::mutable_relations(int index) {
  return relations_.Mutable(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrAddRelationReq::add_relations() {
  return relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
CdntSvrAddRelationReq::relations() const {
  return relations_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
CdntSvrAddRelationReq::mutable_relations() {
  return &relations_;
}

// optional .DidiPush.CoordinateType type = 3;
inline bool CdntSvrAddRelationReq::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CdntSvrAddRelationReq::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CdntSvrAddRelationReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CdntSvrAddRelationReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::DidiPush::CoordinateType CdntSvrAddRelationReq::type() const {
  return static_cast< ::DidiPush::CoordinateType >(type_);
}
inline void CdntSvrAddRelationReq::set_type(::DidiPush::CoordinateType value) {
  assert(::DidiPush::CoordinateType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CdntSvrAddRelationRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool CdntSvrAddRelationRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CdntSvrAddRelationRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CdntSvrAddRelationRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CdntSvrAddRelationRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& CdntSvrAddRelationRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* CdntSvrAddRelationRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* CdntSvrAddRelationRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void CdntSvrAddRelationRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// repeated .DidiPush.PeerCoordinateRelation relations = 2;
inline int CdntSvrAddRelationRsp::relations_size() const {
  return relations_.size();
}
inline void CdntSvrAddRelationRsp::clear_relations() {
  relations_.Clear();
}
inline const ::DidiPush::PeerCoordinateRelation& CdntSvrAddRelationRsp::relations(int index) const {
  return relations_.Get(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrAddRelationRsp::mutable_relations(int index) {
  return relations_.Mutable(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrAddRelationRsp::add_relations() {
  return relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
CdntSvrAddRelationRsp::relations() const {
  return relations_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
CdntSvrAddRelationRsp::mutable_relations() {
  return &relations_;
}

// -------------------------------------------------------------------

// CdntSvrDelRelationReq

// required uint64 user_id = 1;
inline bool CdntSvrDelRelationReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CdntSvrDelRelationReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CdntSvrDelRelationReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CdntSvrDelRelationReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 CdntSvrDelRelationReq::user_id() const {
  return user_id_;
}
inline void CdntSvrDelRelationReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// repeated string local_ids = 2;
inline int CdntSvrDelRelationReq::local_ids_size() const {
  return local_ids_.size();
}
inline void CdntSvrDelRelationReq::clear_local_ids() {
  local_ids_.Clear();
}
inline const ::std::string& CdntSvrDelRelationReq::local_ids(int index) const {
  return local_ids_.Get(index);
}
inline ::std::string* CdntSvrDelRelationReq::mutable_local_ids(int index) {
  return local_ids_.Mutable(index);
}
inline void CdntSvrDelRelationReq::set_local_ids(int index, const ::std::string& value) {
  local_ids_.Mutable(index)->assign(value);
}
inline void CdntSvrDelRelationReq::set_local_ids(int index, const char* value) {
  local_ids_.Mutable(index)->assign(value);
}
inline void CdntSvrDelRelationReq::set_local_ids(int index, const char* value, size_t size) {
  local_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CdntSvrDelRelationReq::add_local_ids() {
  return local_ids_.Add();
}
inline void CdntSvrDelRelationReq::add_local_ids(const ::std::string& value) {
  local_ids_.Add()->assign(value);
}
inline void CdntSvrDelRelationReq::add_local_ids(const char* value) {
  local_ids_.Add()->assign(value);
}
inline void CdntSvrDelRelationReq::add_local_ids(const char* value, size_t size) {
  local_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CdntSvrDelRelationReq::local_ids() const {
  return local_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CdntSvrDelRelationReq::mutable_local_ids() {
  return &local_ids_;
}

// -------------------------------------------------------------------

// CdntSvrDelRelationRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool CdntSvrDelRelationRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CdntSvrDelRelationRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CdntSvrDelRelationRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CdntSvrDelRelationRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& CdntSvrDelRelationRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* CdntSvrDelRelationRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* CdntSvrDelRelationRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void CdntSvrDelRelationRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// repeated .DidiPush.PeerCoordinateRelation relations = 2;
inline int CdntSvrDelRelationRsp::relations_size() const {
  return relations_.size();
}
inline void CdntSvrDelRelationRsp::clear_relations() {
  relations_.Clear();
}
inline const ::DidiPush::PeerCoordinateRelation& CdntSvrDelRelationRsp::relations(int index) const {
  return relations_.Get(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrDelRelationRsp::mutable_relations(int index) {
  return relations_.Mutable(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrDelRelationRsp::add_relations() {
  return relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
CdntSvrDelRelationRsp::relations() const {
  return relations_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
CdntSvrDelRelationRsp::mutable_relations() {
  return &relations_;
}

// -------------------------------------------------------------------

// CdntSvrGetRelationReq

// required uint64 user_id = 1;
inline bool CdntSvrGetRelationReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CdntSvrGetRelationReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CdntSvrGetRelationReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CdntSvrGetRelationReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 CdntSvrGetRelationReq::user_id() const {
  return user_id_;
}
inline void CdntSvrGetRelationReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// CdntSvrGetRelationRsp

// required .DidiPush.RspMsg rsp_msg = 1;
inline bool CdntSvrGetRelationRsp::has_rsp_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CdntSvrGetRelationRsp::set_has_rsp_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CdntSvrGetRelationRsp::clear_has_rsp_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CdntSvrGetRelationRsp::clear_rsp_msg() {
  if (rsp_msg_ != NULL) rsp_msg_->::DidiPush::RspMsg::Clear();
  clear_has_rsp_msg();
}
inline const ::DidiPush::RspMsg& CdntSvrGetRelationRsp::rsp_msg() const {
  return rsp_msg_ != NULL ? *rsp_msg_ : *default_instance_->rsp_msg_;
}
inline ::DidiPush::RspMsg* CdntSvrGetRelationRsp::mutable_rsp_msg() {
  set_has_rsp_msg();
  if (rsp_msg_ == NULL) rsp_msg_ = new ::DidiPush::RspMsg;
  return rsp_msg_;
}
inline ::DidiPush::RspMsg* CdntSvrGetRelationRsp::release_rsp_msg() {
  clear_has_rsp_msg();
  ::DidiPush::RspMsg* temp = rsp_msg_;
  rsp_msg_ = NULL;
  return temp;
}
inline void CdntSvrGetRelationRsp::set_allocated_rsp_msg(::DidiPush::RspMsg* rsp_msg) {
  delete rsp_msg_;
  rsp_msg_ = rsp_msg;
  if (rsp_msg) {
    set_has_rsp_msg();
  } else {
    clear_has_rsp_msg();
  }
}

// repeated .DidiPush.PeerCoordinateRelation relations = 2;
inline int CdntSvrGetRelationRsp::relations_size() const {
  return relations_.size();
}
inline void CdntSvrGetRelationRsp::clear_relations() {
  relations_.Clear();
}
inline const ::DidiPush::PeerCoordinateRelation& CdntSvrGetRelationRsp::relations(int index) const {
  return relations_.Get(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrGetRelationRsp::mutable_relations(int index) {
  return relations_.Mutable(index);
}
inline ::DidiPush::PeerCoordinateRelation* CdntSvrGetRelationRsp::add_relations() {
  return relations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >&
CdntSvrGetRelationRsp::relations() const {
  return relations_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateRelation >*
CdntSvrGetRelationRsp::mutable_relations() {
  return &relations_;
}

// optional .DidiPush.CoordinateType type = 3;
inline bool CdntSvrGetRelationRsp::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CdntSvrGetRelationRsp::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CdntSvrGetRelationRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CdntSvrGetRelationRsp::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::DidiPush::CoordinateType CdntSvrGetRelationRsp::type() const {
  return static_cast< ::DidiPush::CoordinateType >(type_);
}
inline void CdntSvrGetRelationRsp::set_type(::DidiPush::CoordinateType value) {
  assert(::DidiPush::CoordinateType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CollectSvrHeartbeatReq

// -------------------------------------------------------------------

// CollectSvrHeartbeatRsp

// -------------------------------------------------------------------

// CollectSvrDelayReq

// optional int64 time = 1;
inline bool CollectSvrDelayReq::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CollectSvrDelayReq::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CollectSvrDelayReq::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CollectSvrDelayReq::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 CollectSvrDelayReq::time() const {
  return time_;
}
inline void CollectSvrDelayReq::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// PushSvrReq

// optional .DidiPush.OldRole old_role = 1;
inline bool PushSvrReq::has_old_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushSvrReq::set_has_old_role() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushSvrReq::clear_has_old_role() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushSvrReq::clear_old_role() {
  old_role_ = 0;
  clear_has_old_role();
}
inline ::DidiPush::OldRole PushSvrReq::old_role() const {
  return static_cast< ::DidiPush::OldRole >(old_role_);
}
inline void PushSvrReq::set_old_role(::DidiPush::OldRole value) {
  assert(::DidiPush::OldRole_IsValid(value));
  set_has_old_role();
  old_role_ = value;
}

// optional string phone_num = 2;
inline bool PushSvrReq::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushSvrReq::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushSvrReq::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushSvrReq::clear_phone_num() {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    phone_num_->clear();
  }
  clear_has_phone_num();
}
inline const ::std::string& PushSvrReq::phone_num() const {
  return *phone_num_;
}
inline void PushSvrReq::set_phone_num(const ::std::string& value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void PushSvrReq::set_phone_num(const char* value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void PushSvrReq::set_phone_num(const char* value, size_t size) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PushSvrReq::mutable_phone_num() {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  return phone_num_;
}
inline ::std::string* PushSvrReq::release_phone_num() {
  clear_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_num_;
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PushSvrReq::set_allocated_phone_num(::std::string* phone_num) {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_num_;
  }
  if (phone_num) {
    set_has_phone_num();
    phone_num_ = phone_num;
  } else {
    clear_has_phone_num();
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .DidiPush.PushMsg push_msg = 3;
inline bool PushSvrReq::has_push_msg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PushSvrReq::set_has_push_msg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PushSvrReq::clear_has_push_msg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PushSvrReq::clear_push_msg() {
  if (push_msg_ != NULL) push_msg_->::DidiPush::PushMsg::Clear();
  clear_has_push_msg();
}
inline const ::DidiPush::PushMsg& PushSvrReq::push_msg() const {
  return push_msg_ != NULL ? *push_msg_ : *default_instance_->push_msg_;
}
inline ::DidiPush::PushMsg* PushSvrReq::mutable_push_msg() {
  set_has_push_msg();
  if (push_msg_ == NULL) push_msg_ = new ::DidiPush::PushMsg;
  return push_msg_;
}
inline ::DidiPush::PushMsg* PushSvrReq::release_push_msg() {
  clear_has_push_msg();
  ::DidiPush::PushMsg* temp = push_msg_;
  push_msg_ = NULL;
  return temp;
}
inline void PushSvrReq::set_allocated_push_msg(::DidiPush::PushMsg* push_msg) {
  delete push_msg_;
  push_msg_ = push_msg;
  if (push_msg) {
    set_has_push_msg();
  } else {
    clear_has_push_msg();
  }
}

// required .DidiPush.PushStrategy push_strategy = 4;
inline bool PushSvrReq::has_push_strategy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PushSvrReq::set_has_push_strategy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PushSvrReq::clear_has_push_strategy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PushSvrReq::clear_push_strategy() {
  push_strategy_ = 1;
  clear_has_push_strategy();
}
inline ::DidiPush::PushStrategy PushSvrReq::push_strategy() const {
  return static_cast< ::DidiPush::PushStrategy >(push_strategy_);
}
inline void PushSvrReq::set_push_strategy(::DidiPush::PushStrategy value) {
  assert(::DidiPush::PushStrategy_IsValid(value));
  set_has_push_strategy();
  push_strategy_ = value;
}

// optional uint64 user_id = 5;
inline bool PushSvrReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PushSvrReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PushSvrReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PushSvrReq::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 PushSvrReq::user_id() const {
  return user_id_;
}
inline void PushSvrReq::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional uint32 expire_seconds = 6;
inline bool PushSvrReq::has_expire_seconds() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PushSvrReq::set_has_expire_seconds() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PushSvrReq::clear_has_expire_seconds() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PushSvrReq::clear_expire_seconds() {
  expire_seconds_ = 0u;
  clear_has_expire_seconds();
}
inline ::google::protobuf::uint32 PushSvrReq::expire_seconds() const {
  return expire_seconds_;
}
inline void PushSvrReq::set_expire_seconds(::google::protobuf::uint32 value) {
  set_has_expire_seconds();
  expire_seconds_ = value;
}

// optional string log_str = 7;
inline bool PushSvrReq::has_log_str() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PushSvrReq::set_has_log_str() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PushSvrReq::clear_has_log_str() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PushSvrReq::clear_log_str() {
  if (log_str_ != &::google::protobuf::internal::kEmptyString) {
    log_str_->clear();
  }
  clear_has_log_str();
}
inline const ::std::string& PushSvrReq::log_str() const {
  return *log_str_;
}
inline void PushSvrReq::set_log_str(const ::std::string& value) {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    log_str_ = new ::std::string;
  }
  log_str_->assign(value);
}
inline void PushSvrReq::set_log_str(const char* value) {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    log_str_ = new ::std::string;
  }
  log_str_->assign(value);
}
inline void PushSvrReq::set_log_str(const char* value, size_t size) {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    log_str_ = new ::std::string;
  }
  log_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PushSvrReq::mutable_log_str() {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    log_str_ = new ::std::string;
  }
  return log_str_;
}
inline ::std::string* PushSvrReq::release_log_str() {
  clear_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = log_str_;
    log_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PushSvrReq::set_allocated_log_str(::std::string* log_str) {
  if (log_str_ != &::google::protobuf::internal::kEmptyString) {
    delete log_str_;
  }
  if (log_str) {
    set_has_log_str();
    log_str_ = log_str;
  } else {
    clear_has_log_str();
    log_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 role = 8;
inline bool PushSvrReq::has_role() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PushSvrReq::set_has_role() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PushSvrReq::clear_has_role() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PushSvrReq::clear_role() {
  role_ = 0;
  clear_has_role();
}
inline ::google::protobuf::int32 PushSvrReq::role() const {
  return role_;
}
inline void PushSvrReq::set_role(::google::protobuf::int32 value) {
  set_has_role();
  role_ = value;
}

// optional string sms_msg = 9;
inline bool PushSvrReq::has_sms_msg() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PushSvrReq::set_has_sms_msg() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PushSvrReq::clear_has_sms_msg() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PushSvrReq::clear_sms_msg() {
  if (sms_msg_ != &::google::protobuf::internal::kEmptyString) {
    sms_msg_->clear();
  }
  clear_has_sms_msg();
}
inline const ::std::string& PushSvrReq::sms_msg() const {
  return *sms_msg_;
}
inline void PushSvrReq::set_sms_msg(const ::std::string& value) {
  set_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    sms_msg_ = new ::std::string;
  }
  sms_msg_->assign(value);
}
inline void PushSvrReq::set_sms_msg(const char* value) {
  set_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    sms_msg_ = new ::std::string;
  }
  sms_msg_->assign(value);
}
inline void PushSvrReq::set_sms_msg(const char* value, size_t size) {
  set_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    sms_msg_ = new ::std::string;
  }
  sms_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PushSvrReq::mutable_sms_msg() {
  set_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    sms_msg_ = new ::std::string;
  }
  return sms_msg_;
}
inline ::std::string* PushSvrReq::release_sms_msg() {
  clear_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sms_msg_;
    sms_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PushSvrReq::set_allocated_sms_msg(::std::string* sms_msg) {
  if (sms_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete sms_msg_;
  }
  if (sms_msg) {
    set_has_sms_msg();
    sms_msg_ = sms_msg;
  } else {
    clear_has_sms_msg();
    sms_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 timeout_to_sms = 10;
inline bool PushSvrReq::has_timeout_to_sms() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PushSvrReq::set_has_timeout_to_sms() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PushSvrReq::clear_has_timeout_to_sms() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PushSvrReq::clear_timeout_to_sms() {
  timeout_to_sms_ = 0u;
  clear_has_timeout_to_sms();
}
inline ::google::protobuf::uint32 PushSvrReq::timeout_to_sms() const {
  return timeout_to_sms_;
}
inline void PushSvrReq::set_timeout_to_sms(::google::protobuf::uint32 value) {
  set_has_timeout_to_sms();
  timeout_to_sms_ = value;
}

// -------------------------------------------------------------------

// PushSvrMultiReq_UserId

// optional .DidiPush.OldRole old_role = 1;
inline bool PushSvrMultiReq_UserId::has_old_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushSvrMultiReq_UserId::set_has_old_role() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushSvrMultiReq_UserId::clear_has_old_role() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushSvrMultiReq_UserId::clear_old_role() {
  old_role_ = 0;
  clear_has_old_role();
}
inline ::DidiPush::OldRole PushSvrMultiReq_UserId::old_role() const {
  return static_cast< ::DidiPush::OldRole >(old_role_);
}
inline void PushSvrMultiReq_UserId::set_old_role(::DidiPush::OldRole value) {
  assert(::DidiPush::OldRole_IsValid(value));
  set_has_old_role();
  old_role_ = value;
}

// optional string phone_num = 2;
inline bool PushSvrMultiReq_UserId::has_phone_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushSvrMultiReq_UserId::set_has_phone_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushSvrMultiReq_UserId::clear_has_phone_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushSvrMultiReq_UserId::clear_phone_num() {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    phone_num_->clear();
  }
  clear_has_phone_num();
}
inline const ::std::string& PushSvrMultiReq_UserId::phone_num() const {
  return *phone_num_;
}
inline void PushSvrMultiReq_UserId::set_phone_num(const ::std::string& value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void PushSvrMultiReq_UserId::set_phone_num(const char* value) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(value);
}
inline void PushSvrMultiReq_UserId::set_phone_num(const char* value, size_t size) {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  phone_num_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PushSvrMultiReq_UserId::mutable_phone_num() {
  set_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    phone_num_ = new ::std::string;
  }
  return phone_num_;
}
inline ::std::string* PushSvrMultiReq_UserId::release_phone_num() {
  clear_has_phone_num();
  if (phone_num_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_num_;
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PushSvrMultiReq_UserId::set_allocated_phone_num(::std::string* phone_num) {
  if (phone_num_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_num_;
  }
  if (phone_num) {
    set_has_phone_num();
    phone_num_ = phone_num;
  } else {
    clear_has_phone_num();
    phone_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 user_id = 3;
inline bool PushSvrMultiReq_UserId::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PushSvrMultiReq_UserId::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PushSvrMultiReq_UserId::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PushSvrMultiReq_UserId::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
  clear_has_user_id();
}
inline ::google::protobuf::uint64 PushSvrMultiReq_UserId::user_id() const {
  return user_id_;
}
inline void PushSvrMultiReq_UserId::set_user_id(::google::protobuf::uint64 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional int32 role = 4;
inline bool PushSvrMultiReq_UserId::has_role() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PushSvrMultiReq_UserId::set_has_role() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PushSvrMultiReq_UserId::clear_has_role() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PushSvrMultiReq_UserId::clear_role() {
  role_ = 0;
  clear_has_role();
}
inline ::google::protobuf::int32 PushSvrMultiReq_UserId::role() const {
  return role_;
}
inline void PushSvrMultiReq_UserId::set_role(::google::protobuf::int32 value) {
  set_has_role();
  role_ = value;
}

// -------------------------------------------------------------------

// PushSvrMultiReq

// repeated .DidiPush.PushSvrMultiReq.UserId users = 1;
inline int PushSvrMultiReq::users_size() const {
  return users_.size();
}
inline void PushSvrMultiReq::clear_users() {
  users_.Clear();
}
inline const ::DidiPush::PushSvrMultiReq_UserId& PushSvrMultiReq::users(int index) const {
  return users_.Get(index);
}
inline ::DidiPush::PushSvrMultiReq_UserId* PushSvrMultiReq::mutable_users(int index) {
  return users_.Mutable(index);
}
inline ::DidiPush::PushSvrMultiReq_UserId* PushSvrMultiReq::add_users() {
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PushSvrMultiReq_UserId >&
PushSvrMultiReq::users() const {
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PushSvrMultiReq_UserId >*
PushSvrMultiReq::mutable_users() {
  return &users_;
}

// required .DidiPush.PushMsg push_msg = 2;
inline bool PushSvrMultiReq::has_push_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushSvrMultiReq::set_has_push_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushSvrMultiReq::clear_has_push_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushSvrMultiReq::clear_push_msg() {
  if (push_msg_ != NULL) push_msg_->::DidiPush::PushMsg::Clear();
  clear_has_push_msg();
}
inline const ::DidiPush::PushMsg& PushSvrMultiReq::push_msg() const {
  return push_msg_ != NULL ? *push_msg_ : *default_instance_->push_msg_;
}
inline ::DidiPush::PushMsg* PushSvrMultiReq::mutable_push_msg() {
  set_has_push_msg();
  if (push_msg_ == NULL) push_msg_ = new ::DidiPush::PushMsg;
  return push_msg_;
}
inline ::DidiPush::PushMsg* PushSvrMultiReq::release_push_msg() {
  clear_has_push_msg();
  ::DidiPush::PushMsg* temp = push_msg_;
  push_msg_ = NULL;
  return temp;
}
inline void PushSvrMultiReq::set_allocated_push_msg(::DidiPush::PushMsg* push_msg) {
  delete push_msg_;
  push_msg_ = push_msg;
  if (push_msg) {
    set_has_push_msg();
  } else {
    clear_has_push_msg();
  }
}

// required .DidiPush.PushStrategy push_strategy = 3;
inline bool PushSvrMultiReq::has_push_strategy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PushSvrMultiReq::set_has_push_strategy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PushSvrMultiReq::clear_has_push_strategy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PushSvrMultiReq::clear_push_strategy() {
  push_strategy_ = 1;
  clear_has_push_strategy();
}
inline ::DidiPush::PushStrategy PushSvrMultiReq::push_strategy() const {
  return static_cast< ::DidiPush::PushStrategy >(push_strategy_);
}
inline void PushSvrMultiReq::set_push_strategy(::DidiPush::PushStrategy value) {
  assert(::DidiPush::PushStrategy_IsValid(value));
  set_has_push_strategy();
  push_strategy_ = value;
}

// optional uint32 expire_seconds = 4;
inline bool PushSvrMultiReq::has_expire_seconds() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PushSvrMultiReq::set_has_expire_seconds() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PushSvrMultiReq::clear_has_expire_seconds() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PushSvrMultiReq::clear_expire_seconds() {
  expire_seconds_ = 0u;
  clear_has_expire_seconds();
}
inline ::google::protobuf::uint32 PushSvrMultiReq::expire_seconds() const {
  return expire_seconds_;
}
inline void PushSvrMultiReq::set_expire_seconds(::google::protobuf::uint32 value) {
  set_has_expire_seconds();
  expire_seconds_ = value;
}

// optional string log_str = 5;
inline bool PushSvrMultiReq::has_log_str() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PushSvrMultiReq::set_has_log_str() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PushSvrMultiReq::clear_has_log_str() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PushSvrMultiReq::clear_log_str() {
  if (log_str_ != &::google::protobuf::internal::kEmptyString) {
    log_str_->clear();
  }
  clear_has_log_str();
}
inline const ::std::string& PushSvrMultiReq::log_str() const {
  return *log_str_;
}
inline void PushSvrMultiReq::set_log_str(const ::std::string& value) {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    log_str_ = new ::std::string;
  }
  log_str_->assign(value);
}
inline void PushSvrMultiReq::set_log_str(const char* value) {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    log_str_ = new ::std::string;
  }
  log_str_->assign(value);
}
inline void PushSvrMultiReq::set_log_str(const char* value, size_t size) {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    log_str_ = new ::std::string;
  }
  log_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PushSvrMultiReq::mutable_log_str() {
  set_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    log_str_ = new ::std::string;
  }
  return log_str_;
}
inline ::std::string* PushSvrMultiReq::release_log_str() {
  clear_has_log_str();
  if (log_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = log_str_;
    log_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PushSvrMultiReq::set_allocated_log_str(::std::string* log_str) {
  if (log_str_ != &::google::protobuf::internal::kEmptyString) {
    delete log_str_;
  }
  if (log_str) {
    set_has_log_str();
    log_str_ = log_str;
  } else {
    clear_has_log_str();
    log_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string sms_msg = 6;
inline bool PushSvrMultiReq::has_sms_msg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PushSvrMultiReq::set_has_sms_msg() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PushSvrMultiReq::clear_has_sms_msg() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PushSvrMultiReq::clear_sms_msg() {
  if (sms_msg_ != &::google::protobuf::internal::kEmptyString) {
    sms_msg_->clear();
  }
  clear_has_sms_msg();
}
inline const ::std::string& PushSvrMultiReq::sms_msg() const {
  return *sms_msg_;
}
inline void PushSvrMultiReq::set_sms_msg(const ::std::string& value) {
  set_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    sms_msg_ = new ::std::string;
  }
  sms_msg_->assign(value);
}
inline void PushSvrMultiReq::set_sms_msg(const char* value) {
  set_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    sms_msg_ = new ::std::string;
  }
  sms_msg_->assign(value);
}
inline void PushSvrMultiReq::set_sms_msg(const char* value, size_t size) {
  set_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    sms_msg_ = new ::std::string;
  }
  sms_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PushSvrMultiReq::mutable_sms_msg() {
  set_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    sms_msg_ = new ::std::string;
  }
  return sms_msg_;
}
inline ::std::string* PushSvrMultiReq::release_sms_msg() {
  clear_has_sms_msg();
  if (sms_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sms_msg_;
    sms_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PushSvrMultiReq::set_allocated_sms_msg(::std::string* sms_msg) {
  if (sms_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete sms_msg_;
  }
  if (sms_msg) {
    set_has_sms_msg();
    sms_msg_ = sms_msg;
  } else {
    clear_has_sms_msg();
    sms_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 timeout_to_sms = 7;
inline bool PushSvrMultiReq::has_timeout_to_sms() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PushSvrMultiReq::set_has_timeout_to_sms() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PushSvrMultiReq::clear_has_timeout_to_sms() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PushSvrMultiReq::clear_timeout_to_sms() {
  timeout_to_sms_ = 0u;
  clear_has_timeout_to_sms();
}
inline ::google::protobuf::uint32 PushSvrMultiReq::timeout_to_sms() const {
  return timeout_to_sms_;
}
inline void PushSvrMultiReq::set_timeout_to_sms(::google::protobuf::uint32 value) {
  set_has_timeout_to_sms();
  timeout_to_sms_ = value;
}

// -------------------------------------------------------------------

// PushSvrMultiRsp

// repeated .DidiPush.RspMsg rsps = 1;
inline int PushSvrMultiRsp::rsps_size() const {
  return rsps_.size();
}
inline void PushSvrMultiRsp::clear_rsps() {
  rsps_.Clear();
}
inline const ::DidiPush::RspMsg& PushSvrMultiRsp::rsps(int index) const {
  return rsps_.Get(index);
}
inline ::DidiPush::RspMsg* PushSvrMultiRsp::mutable_rsps(int index) {
  return rsps_.Mutable(index);
}
inline ::DidiPush::RspMsg* PushSvrMultiRsp::add_rsps() {
  return rsps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::RspMsg >&
PushSvrMultiRsp::rsps() const {
  return rsps_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::RspMsg >*
PushSvrMultiRsp::mutable_rsps() {
  return &rsps_;
}

// -------------------------------------------------------------------

// PushSvrRetryReq

// required .DidiPush.PushSvrReq msg = 1;
inline bool PushSvrRetryReq::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushSvrRetryReq::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushSvrRetryReq::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushSvrRetryReq::clear_msg() {
  if (msg_ != NULL) msg_->::DidiPush::PushSvrReq::Clear();
  clear_has_msg();
}
inline const ::DidiPush::PushSvrReq& PushSvrRetryReq::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::DidiPush::PushSvrReq* PushSvrRetryReq::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::DidiPush::PushSvrReq;
  return msg_;
}
inline ::DidiPush::PushSvrReq* PushSvrRetryReq::release_msg() {
  clear_has_msg();
  ::DidiPush::PushSvrReq* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void PushSvrRetryReq::set_allocated_msg(::DidiPush::PushSvrReq* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
}

// required uint64 message_id = 2;
inline bool PushSvrRetryReq::has_message_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushSvrRetryReq::set_has_message_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushSvrRetryReq::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushSvrRetryReq::clear_message_id() {
  message_id_ = GOOGLE_ULONGLONG(0);
  clear_has_message_id();
}
inline ::google::protobuf::uint64 PushSvrRetryReq::message_id() const {
  return message_id_;
}
inline void PushSvrRetryReq::set_message_id(::google::protobuf::uint64 value) {
  set_has_message_id();
  message_id_ = value;
}

// -------------------------------------------------------------------

// Param

// required bytes key = 1;
inline bool Param::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Param::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Param::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Param::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& Param::key() const {
  return *key_;
}
inline void Param::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Param::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Param::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Param::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* Param::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Param::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes data = 2;
inline bool Param::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Param::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Param::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Param::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& Param::data() const {
  return *data_;
}
inline void Param::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void Param::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void Param::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Param::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* Param::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Param::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DispatchSvrReq

// required string path = 1;
inline bool DispatchSvrReq::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DispatchSvrReq::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DispatchSvrReq::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DispatchSvrReq::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& DispatchSvrReq::path() const {
  return *path_;
}
inline void DispatchSvrReq::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void DispatchSvrReq::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void DispatchSvrReq::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DispatchSvrReq::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* DispatchSvrReq::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DispatchSvrReq::set_allocated_path(::std::string* path) {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (path) {
    set_has_path();
    path_ = path;
  } else {
    clear_has_path();
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .DidiPush.Param query_params = 2;
inline int DispatchSvrReq::query_params_size() const {
  return query_params_.size();
}
inline void DispatchSvrReq::clear_query_params() {
  query_params_.Clear();
}
inline const ::DidiPush::Param& DispatchSvrReq::query_params(int index) const {
  return query_params_.Get(index);
}
inline ::DidiPush::Param* DispatchSvrReq::mutable_query_params(int index) {
  return query_params_.Mutable(index);
}
inline ::DidiPush::Param* DispatchSvrReq::add_query_params() {
  return query_params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::Param >&
DispatchSvrReq::query_params() const {
  return query_params_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::Param >*
DispatchSvrReq::mutable_query_params() {
  return &query_params_;
}

// optional string content_type = 3;
inline bool DispatchSvrReq::has_content_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DispatchSvrReq::set_has_content_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DispatchSvrReq::clear_has_content_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DispatchSvrReq::clear_content_type() {
  if (content_type_ != &::google::protobuf::internal::kEmptyString) {
    content_type_->clear();
  }
  clear_has_content_type();
}
inline const ::std::string& DispatchSvrReq::content_type() const {
  return *content_type_;
}
inline void DispatchSvrReq::set_content_type(const ::std::string& value) {
  set_has_content_type();
  if (content_type_ == &::google::protobuf::internal::kEmptyString) {
    content_type_ = new ::std::string;
  }
  content_type_->assign(value);
}
inline void DispatchSvrReq::set_content_type(const char* value) {
  set_has_content_type();
  if (content_type_ == &::google::protobuf::internal::kEmptyString) {
    content_type_ = new ::std::string;
  }
  content_type_->assign(value);
}
inline void DispatchSvrReq::set_content_type(const char* value, size_t size) {
  set_has_content_type();
  if (content_type_ == &::google::protobuf::internal::kEmptyString) {
    content_type_ = new ::std::string;
  }
  content_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DispatchSvrReq::mutable_content_type() {
  set_has_content_type();
  if (content_type_ == &::google::protobuf::internal::kEmptyString) {
    content_type_ = new ::std::string;
  }
  return content_type_;
}
inline ::std::string* DispatchSvrReq::release_content_type() {
  clear_has_content_type();
  if (content_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_type_;
    content_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DispatchSvrReq::set_allocated_content_type(::std::string* content_type) {
  if (content_type_ != &::google::protobuf::internal::kEmptyString) {
    delete content_type_;
  }
  if (content_type) {
    set_has_content_type();
    content_type_ = content_type;
  } else {
    clear_has_content_type();
    content_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes post_data = 4;
inline bool DispatchSvrReq::has_post_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DispatchSvrReq::set_has_post_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DispatchSvrReq::clear_has_post_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DispatchSvrReq::clear_post_data() {
  if (post_data_ != &::google::protobuf::internal::kEmptyString) {
    post_data_->clear();
  }
  clear_has_post_data();
}
inline const ::std::string& DispatchSvrReq::post_data() const {
  return *post_data_;
}
inline void DispatchSvrReq::set_post_data(const ::std::string& value) {
  set_has_post_data();
  if (post_data_ == &::google::protobuf::internal::kEmptyString) {
    post_data_ = new ::std::string;
  }
  post_data_->assign(value);
}
inline void DispatchSvrReq::set_post_data(const char* value) {
  set_has_post_data();
  if (post_data_ == &::google::protobuf::internal::kEmptyString) {
    post_data_ = new ::std::string;
  }
  post_data_->assign(value);
}
inline void DispatchSvrReq::set_post_data(const void* value, size_t size) {
  set_has_post_data();
  if (post_data_ == &::google::protobuf::internal::kEmptyString) {
    post_data_ = new ::std::string;
  }
  post_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DispatchSvrReq::mutable_post_data() {
  set_has_post_data();
  if (post_data_ == &::google::protobuf::internal::kEmptyString) {
    post_data_ = new ::std::string;
  }
  return post_data_;
}
inline ::std::string* DispatchSvrReq::release_post_data() {
  clear_has_post_data();
  if (post_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = post_data_;
    post_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DispatchSvrReq::set_allocated_post_data(::std::string* post_data) {
  if (post_data_ != &::google::protobuf::internal::kEmptyString) {
    delete post_data_;
  }
  if (post_data) {
    set_has_post_data();
    post_data_ = post_data;
  } else {
    clear_has_post_data();
    post_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DispatchSvrRsp

// required int32 sys_code = 1;
inline bool DispatchSvrRsp::has_sys_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DispatchSvrRsp::set_has_sys_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DispatchSvrRsp::clear_has_sys_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DispatchSvrRsp::clear_sys_code() {
  sys_code_ = 0;
  clear_has_sys_code();
}
inline ::google::protobuf::int32 DispatchSvrRsp::sys_code() const {
  return sys_code_;
}
inline void DispatchSvrRsp::set_sys_code(::google::protobuf::int32 value) {
  set_has_sys_code();
  sys_code_ = value;
}

// optional int32 http_status_code = 2;
inline bool DispatchSvrRsp::has_http_status_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DispatchSvrRsp::set_has_http_status_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DispatchSvrRsp::clear_has_http_status_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DispatchSvrRsp::clear_http_status_code() {
  http_status_code_ = 0;
  clear_has_http_status_code();
}
inline ::google::protobuf::int32 DispatchSvrRsp::http_status_code() const {
  return http_status_code_;
}
inline void DispatchSvrRsp::set_http_status_code(::google::protobuf::int32 value) {
  set_has_http_status_code();
  http_status_code_ = value;
}

// optional bytes body = 3;
inline bool DispatchSvrRsp::has_body() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DispatchSvrRsp::set_has_body() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DispatchSvrRsp::clear_has_body() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DispatchSvrRsp::clear_body() {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    body_->clear();
  }
  clear_has_body();
}
inline const ::std::string& DispatchSvrRsp::body() const {
  return *body_;
}
inline void DispatchSvrRsp::set_body(const ::std::string& value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void DispatchSvrRsp::set_body(const char* value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void DispatchSvrRsp::set_body(const void* value, size_t size) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DispatchSvrRsp::mutable_body() {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  return body_;
}
inline ::std::string* DispatchSvrRsp::release_body() {
  clear_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = body_;
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DispatchSvrRsp::set_allocated_body(::std::string* body) {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    delete body_;
  }
  if (body) {
    set_has_body();
    body_ = body;
  } else {
    clear_has_body();
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ConnSvrConnectChallenge

// required bytes random_msg = 1;
inline bool ConnSvrConnectChallenge::has_random_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnSvrConnectChallenge::set_has_random_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnSvrConnectChallenge::clear_has_random_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnSvrConnectChallenge::clear_random_msg() {
  if (random_msg_ != &::google::protobuf::internal::kEmptyString) {
    random_msg_->clear();
  }
  clear_has_random_msg();
}
inline const ::std::string& ConnSvrConnectChallenge::random_msg() const {
  return *random_msg_;
}
inline void ConnSvrConnectChallenge::set_random_msg(const ::std::string& value) {
  set_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    random_msg_ = new ::std::string;
  }
  random_msg_->assign(value);
}
inline void ConnSvrConnectChallenge::set_random_msg(const char* value) {
  set_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    random_msg_ = new ::std::string;
  }
  random_msg_->assign(value);
}
inline void ConnSvrConnectChallenge::set_random_msg(const void* value, size_t size) {
  set_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    random_msg_ = new ::std::string;
  }
  random_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConnSvrConnectChallenge::mutable_random_msg() {
  set_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    random_msg_ = new ::std::string;
  }
  return random_msg_;
}
inline ::std::string* ConnSvrConnectChallenge::release_random_msg() {
  clear_has_random_msg();
  if (random_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = random_msg_;
    random_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConnSvrConnectChallenge::set_allocated_random_msg(::std::string* random_msg) {
  if (random_msg_ != &::google::protobuf::internal::kEmptyString) {
    delete random_msg_;
  }
  if (random_msg) {
    set_has_random_msg();
    random_msg_ = random_msg;
  } else {
    clear_has_random_msg();
    random_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AppHeartbeatReq

// -------------------------------------------------------------------

// CdntSvrDownReq

// repeated .DidiPush.PeerCoordinateInfo peer_coordinate_infos = 1;
inline int CdntSvrDownReq::peer_coordinate_infos_size() const {
  return peer_coordinate_infos_.size();
}
inline void CdntSvrDownReq::clear_peer_coordinate_infos() {
  peer_coordinate_infos_.Clear();
}
inline const ::DidiPush::PeerCoordinateInfo& CdntSvrDownReq::peer_coordinate_infos(int index) const {
  return peer_coordinate_infos_.Get(index);
}
inline ::DidiPush::PeerCoordinateInfo* CdntSvrDownReq::mutable_peer_coordinate_infos(int index) {
  return peer_coordinate_infos_.Mutable(index);
}
inline ::DidiPush::PeerCoordinateInfo* CdntSvrDownReq::add_peer_coordinate_infos() {
  return peer_coordinate_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateInfo >&
CdntSvrDownReq::peer_coordinate_infos() const {
  return peer_coordinate_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PeerCoordinateInfo >*
CdntSvrDownReq::mutable_peer_coordinate_infos() {
  return &peer_coordinate_infos_;
}

// -------------------------------------------------------------------

// PushStatReq

// repeated uint64 task_ids = 1;
inline int PushStatReq::task_ids_size() const {
  return task_ids_.size();
}
inline void PushStatReq::clear_task_ids() {
  task_ids_.Clear();
}
inline ::google::protobuf::uint64 PushStatReq::task_ids(int index) const {
  return task_ids_.Get(index);
}
inline void PushStatReq::set_task_ids(int index, ::google::protobuf::uint64 value) {
  task_ids_.Set(index, value);
}
inline void PushStatReq::add_task_ids(::google::protobuf::uint64 value) {
  task_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PushStatReq::task_ids() const {
  return task_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PushStatReq::mutable_task_ids() {
  return &task_ids_;
}

// -------------------------------------------------------------------

// PushStat

// required uint64 task_id = 1;
inline bool PushStat::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushStat::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushStat::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushStat::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::uint64 PushStat::task_id() const {
  return task_id_;
}
inline void PushStat::set_task_id(::google::protobuf::uint64 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional uint32 send_cnt = 2;
inline bool PushStat::has_send_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushStat::set_has_send_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushStat::clear_has_send_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushStat::clear_send_cnt() {
  send_cnt_ = 0u;
  clear_has_send_cnt();
}
inline ::google::protobuf::uint32 PushStat::send_cnt() const {
  return send_cnt_;
}
inline void PushStat::set_send_cnt(::google::protobuf::uint32 value) {
  set_has_send_cnt();
  send_cnt_ = value;
}

// optional uint32 recv_cnt = 3;
inline bool PushStat::has_recv_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PushStat::set_has_recv_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PushStat::clear_has_recv_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PushStat::clear_recv_cnt() {
  recv_cnt_ = 0u;
  clear_has_recv_cnt();
}
inline ::google::protobuf::uint32 PushStat::recv_cnt() const {
  return recv_cnt_;
}
inline void PushStat::set_recv_cnt(::google::protobuf::uint32 value) {
  set_has_recv_cnt();
  recv_cnt_ = value;
}

// optional uint32 in1s_recv_cnt = 4;
inline bool PushStat::has_in1s_recv_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PushStat::set_has_in1s_recv_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PushStat::clear_has_in1s_recv_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PushStat::clear_in1s_recv_cnt() {
  in1s_recv_cnt_ = 0u;
  clear_has_in1s_recv_cnt();
}
inline ::google::protobuf::uint32 PushStat::in1s_recv_cnt() const {
  return in1s_recv_cnt_;
}
inline void PushStat::set_in1s_recv_cnt(::google::protobuf::uint32 value) {
  set_has_in1s_recv_cnt();
  in1s_recv_cnt_ = value;
}

// optional uint32 in3s_recv_cnt = 5;
inline bool PushStat::has_in3s_recv_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PushStat::set_has_in3s_recv_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PushStat::clear_has_in3s_recv_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PushStat::clear_in3s_recv_cnt() {
  in3s_recv_cnt_ = 0u;
  clear_has_in3s_recv_cnt();
}
inline ::google::protobuf::uint32 PushStat::in3s_recv_cnt() const {
  return in3s_recv_cnt_;
}
inline void PushStat::set_in3s_recv_cnt(::google::protobuf::uint32 value) {
  set_has_in3s_recv_cnt();
  in3s_recv_cnt_ = value;
}

// optional uint32 in6s_recv_cnt = 6;
inline bool PushStat::has_in6s_recv_cnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PushStat::set_has_in6s_recv_cnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PushStat::clear_has_in6s_recv_cnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PushStat::clear_in6s_recv_cnt() {
  in6s_recv_cnt_ = 0u;
  clear_has_in6s_recv_cnt();
}
inline ::google::protobuf::uint32 PushStat::in6s_recv_cnt() const {
  return in6s_recv_cnt_;
}
inline void PushStat::set_in6s_recv_cnt(::google::protobuf::uint32 value) {
  set_has_in6s_recv_cnt();
  in6s_recv_cnt_ = value;
}

// optional uint32 in10s_recv_cnt = 7;
inline bool PushStat::has_in10s_recv_cnt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PushStat::set_has_in10s_recv_cnt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PushStat::clear_has_in10s_recv_cnt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PushStat::clear_in10s_recv_cnt() {
  in10s_recv_cnt_ = 0u;
  clear_has_in10s_recv_cnt();
}
inline ::google::protobuf::uint32 PushStat::in10s_recv_cnt() const {
  return in10s_recv_cnt_;
}
inline void PushStat::set_in10s_recv_cnt(::google::protobuf::uint32 value) {
  set_has_in10s_recv_cnt();
  in10s_recv_cnt_ = value;
}

// optional uint32 in30s_recv_cnt = 8;
inline bool PushStat::has_in30s_recv_cnt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PushStat::set_has_in30s_recv_cnt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PushStat::clear_has_in30s_recv_cnt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PushStat::clear_in30s_recv_cnt() {
  in30s_recv_cnt_ = 0u;
  clear_has_in30s_recv_cnt();
}
inline ::google::protobuf::uint32 PushStat::in30s_recv_cnt() const {
  return in30s_recv_cnt_;
}
inline void PushStat::set_in30s_recv_cnt(::google::protobuf::uint32 value) {
  set_has_in30s_recv_cnt();
  in30s_recv_cnt_ = value;
}

// optional uint32 in60s_recv_cnt = 9;
inline bool PushStat::has_in60s_recv_cnt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PushStat::set_has_in60s_recv_cnt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PushStat::clear_has_in60s_recv_cnt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PushStat::clear_in60s_recv_cnt() {
  in60s_recv_cnt_ = 0u;
  clear_has_in60s_recv_cnt();
}
inline ::google::protobuf::uint32 PushStat::in60s_recv_cnt() const {
  return in60s_recv_cnt_;
}
inline void PushStat::set_in60s_recv_cnt(::google::protobuf::uint32 value) {
  set_has_in60s_recv_cnt();
  in60s_recv_cnt_ = value;
}

// optional uint32 gt60s_recv_cnt = 10;
inline bool PushStat::has_gt60s_recv_cnt() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PushStat::set_has_gt60s_recv_cnt() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PushStat::clear_has_gt60s_recv_cnt() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PushStat::clear_gt60s_recv_cnt() {
  gt60s_recv_cnt_ = 0u;
  clear_has_gt60s_recv_cnt();
}
inline ::google::protobuf::uint32 PushStat::gt60s_recv_cnt() const {
  return gt60s_recv_cnt_;
}
inline void PushStat::set_gt60s_recv_cnt(::google::protobuf::uint32 value) {
  set_has_gt60s_recv_cnt();
  gt60s_recv_cnt_ = value;
}

// -------------------------------------------------------------------

// PushStatRsp

// repeated .DidiPush.PushStat stats = 1;
inline int PushStatRsp::stats_size() const {
  return stats_.size();
}
inline void PushStatRsp::clear_stats() {
  stats_.Clear();
}
inline const ::DidiPush::PushStat& PushStatRsp::stats(int index) const {
  return stats_.Get(index);
}
inline ::DidiPush::PushStat* PushStatRsp::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::DidiPush::PushStat* PushStatRsp::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DidiPush::PushStat >&
PushStatRsp::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::DidiPush::PushStat >*
PushStatRsp::mutable_stats() {
  return &stats_;
}

// -------------------------------------------------------------------

// StatLogReq

// required uint32 event = 1;
inline bool StatLogReq::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StatLogReq::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StatLogReq::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StatLogReq::clear_event() {
  event_ = 0u;
  clear_has_event();
}
inline ::google::protobuf::uint32 StatLogReq::event() const {
  return event_;
}
inline void StatLogReq::set_event(::google::protobuf::uint32 value) {
  set_has_event();
  event_ = value;
}

// required uint64 task_id = 2;
inline bool StatLogReq::has_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StatLogReq::set_has_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StatLogReq::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StatLogReq::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::uint64 StatLogReq::task_id() const {
  return task_id_;
}
inline void StatLogReq::set_task_id(::google::protobuf::uint64 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional uint32 msg_type = 3;
inline bool StatLogReq::has_msg_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StatLogReq::set_has_msg_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StatLogReq::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StatLogReq::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
inline ::google::protobuf::uint32 StatLogReq::msg_type() const {
  return msg_type_;
}
inline void StatLogReq::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
}

// optional uint64 gap_us = 4;
inline bool StatLogReq::has_gap_us() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StatLogReq::set_has_gap_us() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StatLogReq::clear_has_gap_us() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StatLogReq::clear_gap_us() {
  gap_us_ = GOOGLE_ULONGLONG(0);
  clear_has_gap_us();
}
inline ::google::protobuf::uint64 StatLogReq::gap_us() const {
  return gap_us_;
}
inline void StatLogReq::set_gap_us(::google::protobuf::uint64 value) {
  set_has_gap_us();
  gap_us_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace DidiPush

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::Constants>() {
  return ::DidiPush::Constants_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::NodeType>() {
  return ::DidiPush::NodeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::MsgType>() {
  return ::DidiPush::MsgType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::OldRole>() {
  return ::DidiPush::OldRole_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::Role>() {
  return ::DidiPush::Role_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::Business>() {
  return ::DidiPush::Business_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::RspCode>() {
  return ::DidiPush::RspCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::CoordinateType>() {
  return ::DidiPush::CoordinateType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::RelationType>() {
  return ::DidiPush::RelationType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::PushStrategy>() {
  return ::DidiPush::PushStrategy_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DidiPush::StatEvent>() {
  return ::DidiPush::StatEvent_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_didi_5fprotocol_2eproto__INCLUDED
