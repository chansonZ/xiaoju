#function description: 
#procedure name: P_DM_webapp
#creator:MARS
#created:
#!/bin/bash
#today date
V_DATE=$1
#
if [ -z ${V_DATE} ];then
        V_DATE=`date +%Y-%m-%d`
fi

#yesterday data partition
V_PARYEAR=`date --date="$V_DATE-1 day" +%Y`
V_PARMONTH=`date --date="$V_DATE-1 day" +%m`
V_PARDAY=`date --date="$V_DATE-1 day" +%d`
V_PARYESTERDAY=`date --date="$V_DATE-1 day" +%Y%m%d`
#today,yesterday,7 day  ago,30 days ago,2 days ago  date
V_TODAY=`date -d $V_DATE "+%Y-%m-%d"`
V_YESTERDAY=`date --date="$V_DATE-1 day" +%Y-%m-%d`
V_7DAYS=`date --date="$V_DATE-7 day" +%Y-%m-%d`
V_WEEK=`date --date="$V_DATE-7 day" +%Y-%m-%d`
V_THREEWEEKS=`date --date="$V_DATE-21 day" +%Y-%m-%d`
V_THREEMONTHS=`date --date="$V_DATE-90 day" +%Y-%m-%d`
V_SIXMONTHS=`date --date="$V_DATE-180 day" +%Y-%m-%d`
V_15DAYS=`date --date="$V_DATE-15 day" +%Y-%m-%d`
V_30DAYS=`date --date="$V_DATE-30 day" +%Y-%m-%d`
V_TWODAYS=`date --date="$V_DATE-2 day" +%Y-%m-%d`
#30 days ago, 2 days ago data partition 
V_PAR7DAYS=`date --date="$V_DATE-7 day" +%Y%m%d`
V_PAR15DAYS=`date --date="$V_DATE-15 day" +%Y%m%d`
V_PAR30DAYS=`date --date="$V_DATE-30 day" +%Y%m%d`
V_PAR2DAYS=`date --date="$V_DATE-2 day" +%Y%m%d`
/home/xiaoju/hive-0.10.0/bin/hive -e"use app;
set hive.optimize.cp=true;
set hive.map.aggr=true;
set hive.groupby.mapaggr.checkinterval = 100000;
set hive.exec.parallel=true;
INSERT OVERWRITE TABLE WEBAPP_WECHAT PARTITION(YEAR='$V_PARYEAR',MONTH='$V_PARMONTH',DAY='$V_PARDAY')
SELECT 0,
       '$V_YESTERDAY',
	   	A.AREA,
		0,
       A.WEBAPP_CNT,
       A.WEBAPP_SUCCCNT,
       (CASE WHEN A.WEBAPP_CNT<>0 THEN ROUND(A.WEBAPP_SUCCCNT/A.WEBAPP_CNT,3) ELSE 0.00 END) WEBAPP_SUCCRATE,
       (CASE WHEN A.SUCC_CNT <>0 THEN ROUND(A.WEBAPP_SUCCCNT/A.SUCC_CNT,3) ELSE 0.00 END) WEBAPP_ACCOUNTED,
	   WECHAT_CNT,
	   WECHAT_SUCCCNT,
	   (CASE WHEN A.ALL_WECHAT_SUCCCNT <>0 
				THEN ROUND(A.WECHAT_SUCCCNT/A.ALL_WECHAT_SUCCCNT,3) ELSE 0.00 END) WECHAT_RATE, 
	   (CASE WHEN A.WEBAPP_SUCCCNT <> 0 
				THEN ROUND(A.WECHAT_SUCCCNT/A.WEBAPP_SUCCCNT,3) ELSE 0.00 END) WECHAT_TRANSRATE,
	   (CASE WHEN B.NATIVE_CNT IS NOT NULL 
				THEN B.NATIVE_CNT ELSE CAST(0 AS BIGINT) END) NATIVE_CNT,
	   (CASE WHEN B.NATIVE_SUCCCNT IS NOT NULL 
				THEN B.NATIVE_SUCCCNT ELSE CAST(0 AS BIGINT) END) NATIVE_SUCCCNT,
	   (CASE WHEN B.NATIVE_CNT <> 0 AND B.NATIVE_CNT IS NOT NULL 
				THEN ROUND(B.NATIVE_SUCCCNT/B.NATIVE_CNT,3) ELSE 0.00 END) NATIVE_SUCCRATE,
	   (CASE WHEN A.SUCC_CNT <>0 
				THEN ROUND(B.NATIVE_SUCCCNT/A.SUCC_CNT,3) ELSE 0.00 END) NATIVE_SUCCACCOUNTED,
	   A.ALL_WECHAT_CNT-A.WECHAT_CNT NATIVE_WECHAT_CNT,
	   (CASE WHEN B.NATIVE_WECHAT_SUCCCNT IS NOT NULL 
				THEN B.NATIVE_WECHAT_SUCCCNT ELSE CAST(0 AS BIGINT) END) NATIVE_WECHAT_SUCCCNT,
	   (CASE WHEN A.ALL_WECHAT_SUCCCNT <>0 AND B.NATIVE_WECHAT_SUCCCNT IS NOT NULL 
	            THEN ROUND(B.NATIVE_WECHAT_SUCCCNT/A.ALL_WECHAT_SUCCCNT,3) ELSE 0.00 END) NATIVE_WECHAT_ACCOUNTED,
	   (CASE WHEN B.NATIVE_SUCCCNT IS NOT NULL AND B.NATIVE_SUCCCNT <> 0 
	            THEN ROUND(B.NATIVE_WECHAT_SUCCCNT/B.NATIVE_SUCCCNT,3) ELSE 0.00 END) NATIVE_WECHAT_TRANSRATE,
	   A.ALL_WECHAT_SUCCCNT,
	   (CASE WHEN A.SUCC_CNT <> 0 
				THEN ROUND(A.ALL_WECHAT_SUCCCNT/A.SUCC_CNT,3) ELSE 0.00 END) WECHAT_CHARGERATE,
	   A.ALL_WECHAT_CNT WECHAT_TOTAL
  FROM 
(
SELECT (CASE WHEN AREA IS NULL THEN 10000 ELSE CAST(AREA AS INT) END) AREA,
        WEBAPP_CNT,
        WEBAPP_SUCCCNT,
		SUCC_CNT,
        WECHAT_CNT,
        WECHAT_SUCCCNT,
		ALL_WECHAT_SUCCCNT,
		ALL_WECHAT_CNT
  FROM (SELECT AREA,
			   COUNT(DISTINCT (CASE WHEN CREATETIME>='$V_YESTERDAY' AND CREATETIME <'$V_TODAY' AND CHANNEL =1200 
						THEN A.ORDERID ELSE CAST(0 AS BIGINT) END))-1 WEBAPP_CNT,
			   COUNT(DISTINCT (CASE WHEN CREATETIME>='$V_YESTERDAY' AND CREATETIME <'$V_TODAY' AND CHANNEL=1200 AND SUCC_FLAG =1 
						THEN A.ORDERID ELSE CAST(0 AS BIGINT) END))-1 WEBAPP_SUCCCNT,
			   COUNT(DISTINCT (CASE WHEN CREATETIME>='$V_YESTERDAY' AND CREATETIME <'$V_TODAY' AND SUCC_FLAG =1 
						THEN A.ORDERID ELSE CAST(0 AS BIGINT) END))-1 SUCC_CNT,
			   COUNT(DISTINCT (CASE WHEN B.ORDERID IS NOT NULL AND A.CHANNEL=1200 THEN B.ORDERID ELSE 0 END))-1 WECHAT_CNT,
			   COUNT(DISTINCT (CASE WHEN B.ORDERID IS NOT NULL AND A.CHANNEL=1200 AND SUCC_FLAG =1 AND B.STATUS =1 THEN B.ORDERID ELSE 0 END))-1 WECHAT_SUCCCNT,
			   COUNT(DISTINCT (CASE WHEN B.ORDERID IS NOT NULL AND B.STATUS= 1 THEN B.ORDERID ELSE 0 END))-1 ALL_WECHAT_SUCCCNT,
			   COUNT(DISTINCT (CASE WHEN B.ORDERID IS NOT NULL THEN B.ORDERID ELSE 0 END))-1 ALL_WECHAT_CNT
		  FROM 
			   (SELECT AREA,
					   ORDERID,
					   CHANNEL,
					   CREATETIME,
					   (CASE WHEN STATUS >=1 AND STATUS<=3 OR (STATUS=4 AND DRIVERID >0) THEN 1 ELSE 0 END) SUCC_FLAG
				  FROM PDW.DW_ORDER
				) A
			LEFT OUTER JOIN
			(
			SELECT ORDERID,
				   STATUS
			  FROM PDW.WX_DIDI_TRANSACTION
			 WHERE YEAR='$V_PARYEAR'
			   AND MONTH='$V_PARMONTH'
			   AND DAY='$V_PARDAY'
			) B
			ON(A.ORDERID=B.ORDERID)
			GROUP BY AREA
			GROUPING SETS(AREA,())
	    ) W
) A
LEFT OUTER JOIN
(
SELECT (CASE WHEN AREA IS NULL THEN 10000 ELSE CAST(AREA AS INT) END) AREA,
        NATIVE_CNT,
		NATIVE_SUCCCNT,
		NATIVE_WECHAT_SUCCCNT
  FROM (SELECT AREA,
			   COUNT(DISTINCT (CASE WHEN B.CREATETIME>='$V_YESTERDAY' AND B.CREATETIME <'$V_TODAY' 
							THEN B.ORDERID ELSE CAST(0 AS BIGINT) END))-1 NATIVE_CNT,
			   COUNT(DISTINCT (CASE WHEN B.CREATETIME>='$V_YESTERDAY' AND B.CREATETIME <'$V_TODAY' AND B.SUCC_FLAG = 1 
							THEN B.ORDERID ELSE CAST(0 AS BIGINT) END))-1 NATIVE_SUCCCNT,
			   COUNT(DISTINCT (CASE WHEN C.ORDERID IS NOT NULL AND C.STATUS=1 THEN C.ORDERID ELSE 0 END))-1 NATIVE_WECHAT_SUCCCNT	   
		  FROM (SELECT PID
				  FROM PDW.STAT_PASSENGER
				 WHERE YEAR='$V_PARYEAR'
				   AND MONTH='$V_PARMONTH'
				   AND DAY='$V_PARDAY'
				   AND APP_VERSION >='2.6'
				) A
				JOIN
			   (SELECT PASSENGERID,
					   AREA,
					   ORDERID,
					   CREATETIME,
					   (CASE WHEN STATUS >=1 AND STATUS<=3 OR (STATUS=4 AND DRIVERID >0) THEN 1 ELSE 0 END) SUCC_FLAG
				  FROM PDW.DW_ORDER
				)  B
				ON (A.PID= B.PASSENGERID)
				LEFT OUTER JOIN
				(
				SELECT ORDERID,
					   STATUS
				  FROM PDW.WX_DIDI_TRANSACTION
				 WHERE YEAR='$V_PARYEAR'
				   AND MONTH='$V_PARMONTH'
				   AND DAY='$V_PARDAY'
				) C
				ON(B.ORDERID=C.ORDERID)
				GROUP BY AREA
				GROUPING SETS(AREA,())
			) W
) B
ON (A.AREA=B.AREA)
;"
/home/xiaoju/hadoop-1.0.4/bin/hadoop fs -touchz /user/xiaoju/data/bi/app/webapp_wechat/$V_PARYEAR/$V_PARMONTH/$V_PARDAY/_SUCCESS