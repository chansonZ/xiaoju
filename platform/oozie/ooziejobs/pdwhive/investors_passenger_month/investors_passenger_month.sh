#function description: 
#procedure name: p_dm_investors_passenger_month
#creator:MARS
#created:
#!/bin/bash
#today date
V_DATE=$1

if [ -z ${V_DATE} ];then
        V_DATE=`date +%Y-%m-%d`
fi

MONTH=`date -d $V_DATE "+%Y-%m"`
MONTH_DAY=$MONTH-01
V_PARYEAR=`date --date="$V_DATE-1 day" +%Y`
V_PARMONTH=`date --date="$V_DATE-1 day" +%m`
V_PARDAY=`date --date="$V_DATE-1 day" +%d`

LAST_MONTH_FIRST=`date --date="$MONTH_DAY-1 day" +%Y-%m-01`
LAST_MONTH_LAST=`date --date="$MONTH_DAY-1 day" +%Y-%m-%d`
DAY_CNT=`date --date="$MONTH_DAY-1 day" +%d`
PAR_LAST_MONTH_FIRST=`date --date="$MONTH_DAY-1 day" +%Y%m01`
PAR_LAST_MONTH_LAST=`date --date="$MONTH_DAY-1 day" +%Y%m%d`
PAR_LAST_MONTH_YEAR=`date --date="$MONTH_DAY-1 day" +%Y`
PAR_LAST_MONTH_MONTH=`date --date="$MONTH_DAY-1 day" +%m`
PAR_LAST_MONTH_DAY=`date --date="$MONTH_DAY-1 day" +%d`
V_LAST_MONTH=`date --date="$MONTH_DAY-1 day" +%Y-%m`
/home/xiaoju/hive-0.10.0/bin/hive -e"use app;
set hive.optimize.cp=true;
set hive.map.aggr=true;
set hive.groupby.mapaggr.checkinterval = 100000;
set hive.exec.parallel=true;
INSERT OVERWRITE TABLE INVESTORS_PASSENGER_MONTH_TMP
SELECT A.AREA,
	   A.REGTIME RECORD_DAY,
	   A.TODAY_REG_CALL_CNT,
	   B.TODAY_ORDERCNT,
	   B.TODAY_CALL_PASSENGERCNT,
	   B.TODAY_CALL_PASSENGERCNT-A.TODAY_REG_CALL_CNT  NOTTODAY_REG_CALL_CNT,
	   (CASE WHEN B.TODAY_CALL_PASSENGERCNT >= A.TODAY_REG_CALL_CNT  
				THEN B.TODAY_CALL_PASSENGERCNT-A.TODAY_REG_CALL_CNT
	          ELSE CAST(0 AS BIGINT)
			  END) TEST_CNT
  FROM 
(
SELECT A.AREA,
	   A.REGTIME ,
	   COUNT(DISTINCT A.PID)  TODAY_REG_CALL_CNT 
  FROM (SELECT AREA,
			   PID,
			   SUBSTR(REGTIME,1,10) REGTIME,
			   STATUS
		  FROM PDW.PASSENGER
		 WHERE YEAR='$V_PARYEAR'
		   AND MONTH='$V_PARMONTH'
		   AND DAY='$V_PARDAY'
		   AND REGTIME<'$MONTH_DAY'
		   AND REGTIME>='$LAST_MONTH_FIRST') A
 JOIN
       (SELECT AREA,
			   SUBSTR(CREATETIME,1,10) CREATETIME,
			   ORDERID,
			   PASSENGERID
		  FROM PDW.DW_ORDER
		 WHERE YEAR='$PAR_LAST_MONTH_YEAR'
		   AND MONTH='$PAR_LAST_MONTH_MONTH'
		   AND CREATETIME>='$LAST_MONTH_FIRST'
		   AND CREATETIME<'$MONTH_DAY') B
	ON(A.PID=B.PASSENGERID AND A.REGTIME=B.CREATETIME)
GROUP BY A.AREA,A.REGTIME
) A
JOIN
(
SELECT AREA,
       CREATETIME,
	   COUNT(ORDERID) TODAY_ORDERCNT,  
	   COUNT(DISTINCT PASSENGERID) TODAY_CALL_PASSENGERCNT  
  FROM (SELECT AREA,
			   SUBSTR(CREATETIME,1,10) CREATETIME,
			   ORDERID,
			   PASSENGERID
		  FROM PDW.DW_ORDER
		 WHERE YEAR='$PAR_LAST_MONTH_YEAR'
		   AND MONTH='$PAR_LAST_MONTH_MONTH'
		   AND CREATETIME>='$LAST_MONTH_FIRST'
		   AND CREATETIME<'$MONTH_DAY') W
 GROUP BY AREA,CREATETIME
 ) B
ON (A.AREA=B.AREA AND A.REGTIME=B.CREATETIME);
INSERT OVERWRITE TABLE INVESTORS_PASSENGER_MONTH PARTITION(YEAR='$PAR_LAST_MONTH_YEAR',MONTH='$PAR_LAST_MONTH_MONTH')
SELECT 0,
	   '$LAST_MONTH_FIRST',
	   W.AREA,
	   0 CHANNEL,
	   ROUND(W.PER_CALL_ORDER_PASSENGER_REATE,3) PER_CALL_ORDER_PASSENGER_REATE,                            
	   ROUND(W.PER_CALLPASSENGER_CNT,3) PER_CALLPASSENGER_CNT,
	   ROUND(W.PER_DAYREGANDCALL_CNT,3) PER_DAYREGANDCALL_CNT,
	   ROUND(W.PER_NOTDAYREGANDCALL_CNT,3) PER_NOTDAYREGANDCALL_CNT,
	   Q.PASSENGER_TOTAL_CNT,
	   Q.LASTMONTH_REGCNT,
	   M.MONTH_PASSENGER_CALLCNT,
	   ROUND(M.TOTAL_ORDERCNT/M.MONTH_PASSENGER_CALLCNT,3) PER_PASSENGER_ORDERCNT
  FROM
(
SELECT AREA,
	   PER_CALL_ORDER_PASSENGER_REATE,
	   PER_CALLPASSENGER_CNT,
	   PER_DAYREGANDCALL_CNT,
	   PER_NOTDAYREGANDCALL_CNT
  FROM (SELECT AREA,
			   SUM(TODAY_PER_CALL_ORDER_CNT)/$DAY_CNT  PER_CALL_ORDER_PASSENGER_REATE,
			   SUM(TODAY_CALL_PASSENGERCNT)/$DAY_CNT  PER_CALLPASSENGER_CNT,
			   SUM(TODAY_REG_CALL_CNT)/$DAY_CNT   PER_DAYREGANDCALL_CNT,
			   SUM(NOTTODAY_REG_CALL_CNT)/$DAY_CNT   PER_NOTDAYREGANDCALL_CNT  
		  FROM (SELECT AREA,
					   RECORD_DAY,
					   TODAY_ORDERCNT/TODAY_CALL_PASSENGERCNT  TODAY_PER_CALL_ORDER_CNT,
					   TODAY_CALL_PASSENGERCNT,
					   TODAY_REG_CALL_CNT,
					   NOTTODAY_REG_CALL_CNT
				  FROM APP.INVESTORS_PASSENGER_MONTH_TMP
				) A
		GROUP BY AREA
		UNION ALL
		SELECT AREA,
			   SUM(TODAY_PER_CALL_ORDER_CNT)/$DAY_CNT  PER_CALL_ORDER_PASSENGER_REATE,
			   SUM(TODAY_CALL_PASSENGERCNT)/$DAY_CNT   PER_CALLPASSENGER_CNT,
			   SUM(TODAY_REG_CALL_CNT)/$DAY_CNT  PER_DAYREGANDCALL_CNT,
			   SUM(NOTTODAY_REG_CALL_CNT)/$DAY_CNT  PER_NOTDAYREGANDCALL_CNT
		  FROM (SELECT 10000 AREA,
					   RECORD_DAY,
					   SUM(TODAY_ORDERCNT)/SUM(TODAY_CALL_PASSENGERCNT) TODAY_PER_CALL_ORDER_CNT,
					   SUM(TODAY_CALL_PASSENGERCNT) TODAY_CALL_PASSENGERCNT,
					   SUM(TODAY_REG_CALL_CNT) TODAY_REG_CALL_CNT,
					   SUM(NOTTODAY_REG_CALL_CNT) NOTTODAY_REG_CALL_CNT
				  FROM APP.INVESTORS_PASSENGER_MONTH_TMP
				 GROUP BY RECORD_DAY 
				 ) W
		GROUP BY AREA
		) QQ
) W
JOIN
(
SELECT (CASE WHEN AREA IS NULL THEN 10000 ELSE CAST(AREA AS INT) END) AREA,
       SUM(CASE WHEN REGTIME<'$MONTH_DAY' THEN 1 ELSE 0 END) PASSENGER_TOTAL_CNT,
	   SUM(CASE WHEN REGTIME>='$LAST_MONTH_FIRST' AND REGTIME<'$MONTH_DAY' THEN 1 ELSE 0 END) LASTMONTH_REGCNT
  FROM PDW.PASSENGER
 WHERE YEAR='$V_PARYEAR'
   AND MONTH='$V_PARMONTH'
   AND DAY='$V_PARDAY'
   AND STATUS = 0
  GROUP BY AREA
GROUPING SETS(AREA,())
) Q
ON(W.AREA=Q.AREA)
JOIN
(
SELECT (CASE WHEN AREA IS NULL THEN 10000 ELSE CAST(AREA AS INT) END) AREA,
	   COUNT(ORDERID) TOTAL_ORDERCNT,
	   COUNT(DISTINCT PASSENGERID) MONTH_PASSENGER_CALLCNT
  FROM PDW.DW_ORDER
 WHERE YEAR='$PAR_LAST_MONTH_YEAR'
   AND MONTH='$PAR_LAST_MONTH_MONTH'
   AND CREATETIME>='$LAST_MONTH_FIRST'
   AND CREATETIME<'$MONTH_DAY'
GROUP BY AREA
GROUPING SETS(AREA,())
) M
ON(W.AREA=M.AREA)
;"
/home/xiaoju/hadoop-1.0.4/bin/hadoop fs -touchz /user/xiaoju/data/bi/app/investors_passenger_month/$PAR_LAST_MONTH_YEAR/$PAR_LAST_MONTH_MONTH/_SUCCESS