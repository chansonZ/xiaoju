#function description:
# 1. real order rate
# 2. pre order rate
# 3. average time of success real order 
# 4. average time of success pre order 
# 5. success rate of real order
# 6. success rate of pre order
# 7. complaint rate of success real order
# 8. complaint rate of success pre order
# 9. success rate of repeat order 

#procedure name: P_DM_mis_order 
#creator: mayiming
#created:
#!/bin/bash
#today date
V_DATE=$1
#
if [ -z ${V_DATE} ];then
        V_DATE=`date +%Y-%m-%d`
fi
#
#yesterday data partition
V_PARYEAR=`date --date="$V_DATE-1 day" +%Y`
V_PARMONTH=`date --date="$V_DATE-1 day" +%m`
V_PARDAY=`date --date="$V_DATE-1 day" +%d`
V_PARYESTERDAY=`date --date="$V_DATE-1 day" +%Y%m%d`

#yesterday date 
V_YESTERDAY=`date --date="$V_DATE-1 day" +%Y-%m-%d`

/home/xiaoju/hive-0.10.0/bin/hive -e"use app;
ALTER TABLE MIS_ORDER ADD IF NOT EXISTS PARTITION (YEAR = '$V_PARYEAR',MONTH = '$V_PARMONTH',DAY = '$V_PARDAY') LOCATION '$V_PARYEAR/$V_PARMONTH/$V_PARDAY';
INSERT OVERWRITE TABLE MIS_ORDER PARTITION(YEAR='$V_PARYEAR',MONTH='$V_PARMONTH',DAY='$V_PARDAY') 
SELECT 0 STATID,
       '${V_PARYEAR}-${V_PARMONTH}-${V_PARDAY}' STATDATE,
       A.AREA,
       0 CHANNEL,
       CASE WHEN A.ORDERCNT = 0 THEN 0.0 ELSE ROUND(A.REALORDERCNT/A.ORDERCNT,3) END REALORDERRATE,
       CASE WHEN A.ORDERCNT = 0 THEN 0.0 ELSE ROUND(A.PREORDERCNT/A.ORDERCNT,3) END  PREORDERRATE,
       CASE WHEN A.REALORDERSUCCNT_TIME_CNT = 0 THEN 0.0 
            ELSE ROUND(A.REALORDERSUCCNT_TIME/A.REALORDERSUCCNT_TIME_CNT,3) END REALORDER_AVE_TIME,
       CASE WHEN A.PREORDERSUCCNT_TIME_CNT = 0 THEN 0.0 
            ELSE ROUND(A.PREORDERSUCCNT_TIME/A.PREORDERSUCCNT_TIME_CNT,3) END PREORDER_AVE_TIME,
       CASE WHEN A.REALORDERCNT = 0 THEN 0.0 ELSE ROUND(A.REALORDERSUCCNT/A.REALORDERCNT,3) END REALORDERSUCRATE,
       CASE WHEN A.PREORDERCNT =0 THEN 0.0 ELSE ROUND(A.PREORDERSUCCNT/A.PREORDERCNT,3) END PREORDERSUCRATE,
       CASE WHEN (B.REALCOMPLAINTCNT IS NULL OR A.REALORDERSUCCNT = 0) THEN 0.0 ELSE ROUND(B.REALCOMPLAINTCNT/A.REALORDERSUCCNT,3) END REALCOMPLAINTRATE,
       CASE WHEN (B.PRECOMPLAINTCNT IS NULL OR A.PREORDERSUCCNT = 0) THEN 0.0 ELSE ROUND(B.PRECOMPLAINTCNT/A.PREORDERSUCCNT,3) END PRECOMPLAINTRATE,
       CASE WHEN A.REPEATORDERCNT = 0 THEN 0.0 ELSE ROUND(A.REPEATORDERSUCCNT/A.REPEATORDERCNT,3) END  REPEATORDERRATE  
FROM 
(SELECT CASE WHEN AREA is NULL THEN '10000' ELSE AREA END AREA,
        COUNT(*)  ORDERCNT,
        SUM(CASE WHEN TYPE = 0 THEN 1 ELSE 0 END) REALORDERCNT,
        SUM(CASE WHEN TYPE = 1 THEN 1 ELSE 0 END) PREORDERCNT,
        SUM(CASE WHEN TYPE = 0 AND (STATUS >= 1 AND STATUS <= 3 OR (STATUS = 4 AND DRIVERID > 0)) THEN 1 ELSE 0 END) REALORDERSUCCNT,
        SUM(CASE WHEN TYPE = 1 AND (STATUS >= 1 AND STATUS <= 3 OR (STATUS = 4 AND DRIVERID > 0)) THEN 1 ELSE 0 END) PREORDERSUCCNT,
        SUM(CASE WHEN CALLCOUNT > 1 AND (STATUS >= 1 AND STATUS <= 3 OR (STATUS = 4 AND DRIVERID > 0)) THEN 1 ELSE 0 END) REPEATORDERSUCCNT,
        SUM(CASE WHEN CALLCOUNT > 1 THEN 1 ELSE 0 END) REPEATORDERCNT,
        SUM(CASE WHEN TYPE = 0 AND UNIX_TIMESTAMP(STRIVETIME) > UNIX_TIMESTAMP(CREATETIME) 
            AND (STATUS >= 1 AND STATUS <= 3 OR (STATUS = 4 AND DRIVERID > 0)) 
            THEN 1 ELSE 0 END) REALORDERSUCCNT_TIME_CNT,
        SUM(CASE WHEN TYPE = 0 AND UNIX_TIMESTAMP(STRIVETIME) > UNIX_TIMESTAMP(CREATETIME) 
            AND (STATUS >= 1 AND STATUS <= 3 OR (STATUS = 4 AND DRIVERID > 0)) 
            THEN UNIX_TIMESTAMP(STRIVETIME) - UNIX_TIMESTAMP(CREATETIME) ELSE CAST('0' AS BIGINT) END) REALORDERSUCCNT_TIME,
        SUM(CASE WHEN TYPE = 1 AND UNIX_TIMESTAMP(STRIVETIME) > UNIX_TIMESTAMP(CREATETIME) 
            AND (STATUS >= 1 AND STATUS <= 3 OR (STATUS = 4 AND DRIVERID > 0)) 
            THEN 1 ELSE 0 END) PREORDERSUCCNT_TIME_CNT,
        SUM(CASE WHEN TYPE = 1 AND UNIX_TIMESTAMP(STRIVETIME) > UNIX_TIMESTAMP(CREATETIME) 
            AND (STATUS >= 1 AND STATUS <= 3 OR (STATUS = 4 AND DRIVERID > 0)) 
            THEN UNIX_TIMESTAMP(STRIVETIME) - UNIX_TIMESTAMP(CREATETIME) ELSE CAST('0' AS BIGINT) END) PREORDERSUCCNT_TIME
 FROM PDW.DW_ORDER  
 WHERE YEAR ='$V_PARYEAR' 
 AND MONTH ='$V_PARMONTH' 
 AND DAY = '$V_PARDAY' 
 AND CREATETIME LIKE '$V_YESTERDAY%'
 GROUP BY AREA
 GROUPING SETS (AREA,
                ())
) A 
LEFT OUTER JOIN
(SELECT CASE WHEN AREA is NULL THEN '10000' ELSE AREA END AREA,
        SUM(CASE WHEN ORDERTYPE = 0 THEN 1 ELSE 0 END) REALCOMPLAINTCNT,
        SUM(CASE WHEN ORDERTYPE = 1 THEN 1 ELSE 0 END) PRECOMPLAINTCNT
 FROM PDW.ORDER_COMMENT 
 WHERE YEAR ='$V_PARYEAR' 
 AND MONTH = '$V_PARMONTH' 
 AND DAY = '$V_PARDAY' 
 AND CREATETIME LIKE '$V_YESTERDAY%' 
 AND (DCOMPLAINTTYPE > 1 OR PCOMPLAINTTYPE > 1)
 GROUP BY AREA 
 GROUPING SETS (AREA,
                ())
) B 
ON (A.AREA = B.AREA)
;"

/home/xiaoju/hadoop-1.0.4/bin/hadoop fs -touchz /user/xiaoju/data/bi/app/mis_order/$V_PARYEAR/$V_PARMONTH/$V_PARDAY/_SUCCESS
