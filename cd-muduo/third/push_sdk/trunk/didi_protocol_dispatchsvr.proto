package DidiPush;

option java_package = "com.sdu.didi.protobuf";
option java_outer_classname = "DiDiDispatchProtobuf";

import "didi_protocol.proto";
import "didi_protocol_common.proto";

// 这里是所有客户端上行到PHP的请求

// Dispatch payload消息的类型
enum DispatchMessageType {
    kDispatchMessageTypeDriverOrderGetReq         = 0x01; // 司机主动拉取订单的请求
    kDispatchMessageTypeMonitorResultReq          = 0x02; // 上报是否安装了竞争产品
	kDispatchMessageTypeOnlineModeConnectReq      = 0x03;
	kDispatchMessageTypeOnlineModeDisconnectReq   = 0x04;
	kDispatchMessageTypePassengerOrderGetReq      = 0x05;
	kDispatchMessageTypeDriverOrderMoneyGetReq    = 0x06;
	kDispatchMessageTypePassengerPayStatusReq     = 0x07; //乘客主动拉取支付结果
	kDispatchMessageTypeDriverFilterOrderReq	  = 0x08; // 司机过滤订单请求
};

// 司机主动拉取订单的请求
message DriverOrderGetReq {
	required string phone = 1;							// 司机手机号
	required string token = 2;							// 司机端token
	message LastStatus {
		required string oid = 1;						// 上一次订单id
		required int32 down = 2;						// 下载状态(0:成功 1:失败)
		required int32 play = 3;						// 播放状态(0:成功 1:失败)
		required int32 cancel = 4;						// 取消状态
		optional int32 cancelOrder = 5;					// 订单是否手动删除
	};
	required LastStatus lastStatus = 3;
};

// 上报是否安装了竞争产品的请求
message MonitorResultReq {
	required int32 pkgRsp = 1;			// 竞争产品状态
}

//上报订单信息获取订单状态
message PassengerOrderGetReq {
	required string phone = 1;
	required string token = 2;
	required string oid = 3;
	required int32 status = 4;
	required string wait = 5;
	required Coordinate coordinate = 6;
}


//司机实时上报经纬度并获取费用信息
message DriverOrderMoneyGetReq {
	required string phone = 1;						//司机手机号
	required string token = 2;						//司机端token
	required string oid	= 3;						//订单ID
	repeated LocationInfo info = 4;					//经纬度数组
	//以下为上次服务器反馈的小费信息再次发给服务器，防止服务器之前的缓存丢失；
	optional DrivingFeeInfo feeInfo = 5;				//费用信息
};

//乘客主动拉取支付结果
message PassengerPayStatusReq {
	required string oid = 1;			//订单号
	required int32 trade_status = 2;		//当前乘客端已知的付款状态，1:成功，0：失败
	required string token = 3;		        //乘客端token
}

// 司机过滤订单的请求
message DriverFilterOrderReq {
	required string phone = 1;							// 司机手机号
	required string token = 2;							// 司机端token
	message LastFilter {
		required string order_id = 1;					// 过滤订单id
		required int32 filter_type = 2;
		// 过滤类型,定义在didi_protocol_common.proto里面的DriverOrderFilterType
		optional bytes send_info = 3;					
		// 司机该次播单包含的信息，是定义在didi_protocol_common.proto
		// 里面的DriverBroadcastOrderExtraInfo串行化之后的数据
	};
	required LastFilter lastFilter = 3;
};
